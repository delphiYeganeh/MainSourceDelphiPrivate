unit EnterDataFM;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Mask, DBCtrls, Grids, DBGrids, Buttons,
  ComCtrls,DB, DBTables;

type
  TFMEnterData = class(TMBaseForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Panel3: TPanel;
    DBGrid1: TDBGrid;
    DBEEDCode: TDBEdit;
    LblCode: TLabel;
    Panel5: TPanel;
    Label2: TLabel;
    Panel4: TPanel;
    DBNavigator1: TDBNavigator;
    DBEEDName: TDBEdit;
    LblName: TLabel;
    DBEEDDesc: TDBEdit;
    LblDesc: TLabel;
    SpeedButton1: TSpeedButton;
    LabelDate: TLabel;
    procedure FormShow(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
    procedure DBNavigator1BeforeAction(Sender: TObject;
      Button: TNavigateBtn);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SpeedButton1Click(Sender: TObject);
  private
    FCodeCaption,FNameCaption,FDescCaption :String;
    FData_Ref:integer;
    FUsers_ID:Integer;
  public

  Published
     Property Data_Ref:Integer Read FData_Ref Write FData_Ref;

     Property CodeCaption:String Read FCodeCaption Write FCodeCaption;
     Property NameCaption:String Read FNameCaption Write FNameCaption;
     Property DescCaption:String Read FDescCaption Write FDescCaption;

     Property Users_ID:Integer Read FUsers_ID Write FUsers_ID;
  end;

Var
  FMEnterData: TFMEnterData;

implementation

Uses EnterDataDM , DMu , YShamsiDate ;

{$R *.dfm}


procedure TFMEnterData.FormShow(Sender: TObject);
begin
   DMEnterData.DM_Users_ID := Users_ID;

   DMEnterData.QrEnterData.close;
   DMEnterData.QrEnterData.Parameters.ParamByName('Pa_Data_Ref').Value := Data_Ref;
   DMEnterData.QrEnterData.Parameters.ParamByName('Users_ID1').Value := Users_ID;
   DMEnterData.QrEnterData.Parameters.ParamByName('Users_ID2').Value := Users_ID;
   DMEnterData.QrEnterData.Open;

   LblCode.Caption := CodeCaption;
   LblName.Caption := NameCaption;
   LblDesc.Caption := DescCaption;

   With DBGrid1.Columns do
   begin
      Items[0].Title.Caption := LblCode.caption;
      Items[0].FieldName := DBEEDCode.DataField;
      Items[1].Title.Caption := LblName.caption;
      Items[1].FieldName := DBEEDName.DataField;
      Items[2].Title.Caption := LblDesc.caption;
      Items[2].FieldName := DBEEDDesc.DataField;
   end;
   DBNav_Setup(DBNavigator1);

   LabelDate.Caption := _Today;
   //Form_Animate(Self);
end;

procedure TFMEnterData.FormCreate(Sender: TObject);
begin
   DMEnterData := TDMEnterData.Create(Self);
end;

procedure TFMEnterData.DBNavigator1Click(Sender: TObject;
  Button: TNavigateBtn);
begin
   //DBNav_Refresh(TDBNavigator(Sender));
end;

procedure TFMEnterData.DBNavigator1BeforeAction(Sender: TObject;
  Button: TNavigateBtn);
begin
   DBEEDCode.SetFocus;
   DBEEDName.SetFocus;
   //DBNav_ControlOnBefAct(Sender,Button,DBEEDName);
end;

procedure TFMEnterData.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
   Form_SetShortCut(Self,DBNavigator1,Nil,Nil,Sender,Key,Shift);

   if (Key = VK_Return)And(Shift=[]) then
      SelectNext(TWinControl(ActiveControl),True,True);
   if (Key = VK_Return)And(ssShift in Shift) then
      SelectNext(TWinControl(ActiveControl),False,True);
end;

procedure TFMEnterData.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
   //FormClose_CheckQryState(DMEnterData.QrEnterData);//And Close Query
   Qry_CloseAllQry(DMEnterData);
   FreeAndNil(DMEnterData);
end;

procedure TFMEnterData.SpeedButton1Click(Sender: TObject);
begin
   Close;
end;

Initialization
    RegisterClass(TFMEnterData);
end.
