
--ایندکس لازم
SELECT TOP 200
ROUND( s.avg_total_user_cost *
       s .avg_user_impact
        * ( s.user_seeks + s. user_scans),0 )
                 AS [Total Cost]
,d .[statement] AS [Table Name]
,equality_columns
,inequality_columns
,included_columns
FROM sys .dm_db_missing_index_groups g
INNER JOIN sys. dm_db_missing_index_group_stats s
 ON s .group_handle = g.index_group_handle
INNER JOIN sys. dm_db_missing_index_details d
 ON d .index_handle = g.index_handle
ORDER BY [Total Cost] DESC

--- 
--ایندکس بلا استفاده
SELECT TOP 25
 O.NAME AS OBJECTNAME,
 I.NAME AS INDEXNAME,
 I.INDEX_ID AS INDEXID,
 DM_IUS.USER_SEEKS AS USERSEEK,
 DM_IUS.USER_SCANS AS USERSCANS,
 DM_IUS.USER_LOOKUPS AS USERLOOKUPS,
 DM_IUS.USER_UPDATES AS USERUPDATES,
 P.TABLEROWS,
 'DROP INDEX ' + QUOTENAME(I.NAME)
 + ' ON ' + QUOTENAME(S.NAME) + '.'
 + QUOTENAME(OBJECT_NAME(DM_IUS.OBJECT_ID)) AS 'DROP STATEMENT'
FROM SYS.DM_DB_INDEX_USAGE_STATS DM_IUS
 INNER JOIN SYS.INDEXES I
 ON I.INDEX_ID = DM_IUS.INDEX_ID
 AND DM_IUS.OBJECT_ID = I.OBJECT_ID
 INNER JOIN SYS.OBJECTS O
 ON DM_IUS.OBJECT_ID = O.OBJECT_ID
 INNER JOIN SYS.SCHEMAS S
 ON O.SCHEMA_ID = S.SCHEMA_ID
 INNER JOIN (
 SELECT SUM(P.ROWS) TABLEROWS,
 P.INDEX_ID,
 P.OBJECT_ID
 FROM SYS.PARTITIONS P
 GROUP BY
 P.INDEX_ID,
 P.OBJECT_ID
 ) P
 ON P.INDEX_ID = DM_IUS.INDEX_ID
 AND DM_IUS.OBJECT_ID = P.OBJECT_ID
WHERE OBJECTPROPERTY(DM_IUS.OBJECT_ID, 'ISUSERTABLE') = 1
 AND DM_IUS.DATABASE_ID = DB_ID()
 AND I.TYPE_DESC = 'NONCLUSTERED'
 AND I.IS_PRIMARY_KEY = 0
 AND I.IS_UNIQUE_CONSTRAINT = 0
 AND DM_IUS.USER_SEEKS = 0
 AND DM_IUS.USER_SCANS = 0
 AND DM_IUS.USER_LOOKUPS = 0
ORDER BY
 DM_IUS.USER_UPDATES DESC

-----


 IF COL_LENGTH('dbo.Customer', 'FinishedContractProducts') IS  NULL  
    ALTER TABLE dbo.Customer   ADD FinishedContractProducts NVARCHAR(2000)  NULL ;
    
   IF COL_LENGTH('dbo.Customer', 'ProductsSTR') IS  NULL  
    ALTER TABLE dbo.Customer   ADD ProductsSTR NVARCHAR(2000)  NULL ;
    
    IF COL_LENGTH('dbo.Customer', 'ProductsIdSTR') IS  NULL  
    ALTER TABLE dbo.Customer   ADD ProductsIdSTR NVARCHAR(2000)  NULL ;

   IF COL_LENGTH('dbo.CustomerProduct', 'DateUpDateFinishedContractProducts') IS  NULL  
    ALTER TABLE dbo.CustomerProduct   ADD DateUpDateFinishedContractProducts NVARCHAR(10)  NULL ;


UPDATE dbo.Customer 
SET FinishedContractProducts =  dbo.fn_FinishedContractBycustomerId(customerid) ,
ProductsSTR = dbo.fn_ProductByCustomerID(customerid) ,
ProductsIdSTR = dbo.fn_ProductIdByCustomerID(customerid)  




create VIEW [dbo].[VWFollowup]      
AS      
 
SELECT MAX(minTododate) minTododate ,MAX(maxTododate) maxTododate,Customerid FROM (
SELECT min(Tododate) minTododate, '' maxTododate ,Customerid,donestatusid  from dbo.followup WITH(NOLOCK)  GROUP BY Customerid,donestatusid  having   donestatusid = 1
union
SELECT '' minTododate, max(Tododate) maxTododate ,Customerid,donestatusid  from dbo.followup WITH(NOLOCK)  GROUP BY Customerid,donestatusid  having   donestatusid = 2
) t
GROUP BY Customerid
GO


CREATE view [dbo].[VWSelect_Customer]
AS

SELECT  isnull(cu.CompanyName,'')+'('+isnull(cu.PersonTitle,'')+isnull(' - '+cu.Treater,'')+')'  as NickName      
,Cu.CustomerID
, Cu.CustomerNo 
, cast(1 as bigint) as RowNo  /*  Row_Number() over (order  by insertdate desc )  as RowNo   */
,cu.[PersonTitle]
,cu.[Address]
,cu.[Phone]
,cu.[Notes]
,cu.[CompanyName]
,Cu.CityID
,Cu.GroupID
,Cu.MarketerID           
,cu.[IsActive]
,cu.[SenderType]
,cu.[Priority]
,cu.[Treater]
,cu.[CompaginID]
,cu.[PostalCode]
,cu.[EmailAddress]
,cu.[WorkPhone1]        
,cu.[Website]
,cu.[MobilePhone]
,cu.[FaxNumber]
,cu.[competitiveNote]
,Cp.[CompaginTitle]
,cu.[Insertdate]
,cu.[LastUpdate]
,cu.[CancelReasonID]        
,cu.[CancelComment]
,cu.[CancelDate]
,Cu.CustomerStatusID
,cu.UserTableLinkedID
,c.CityTitle
,gr.GroupTitle
,ma.MarketerTitle      
,cs.CustomerStatusTitle
--,(select max(Tododate) from dbo.followup where customerid = customer.customerid and donestatusid = 2) latestFollowup      
--,(select min(Tododate) from dbo.followup where customerid = customer.customerid and donestatusid = 1) nextFollowup  
,fu.minTododate latestFollowup
,fu.maxTododate nextFollowup

,cu.FreeField01,cu.FreeField02,cu.FreeField03,cu.FreeField04,cu.FreeField05,cu.FreeField06  
,cu.FreeField07,cu.FreeField08,cu.FreeField09,cu.FreeField10,cu.FreeField11,cu.FreeField12  
,cu.FreeField13,cu.FreeField14,cu.FreeField15,cu.FreeField16,cu.FreeField17,cu.FreeField18        
--,dbo.fn_FinishedContractBycustomerId(cu.customerid) FinishedContractProducts 
,ISNULL(cu.FinishedContractProducts,'')  FinishedContractProducts    
,cu.CategoryId,cu.SubCategoryId
,cu.CompanyTypeId,cu.CompanySizeId,cu.CompanyStructureId,cu.FreeField19,cu.FreeField20,cu.FreeField21,cu.FreeField22
,cu.FreeField23,cu.FreeField24,cu.FreeField25,cu.FreeField26,cu.FreeField27,cu.FreeField28

--,dbo.fn_ProductByCustomerID(cu.customerid) products
 , ISNULL(cu.productsSTR,'') products 
--,'|'+dbo.fn_ProductIdByCustomerID(cu.customerid)+'|' ProductsID  
,'|'+ISNULL(cu.productsIdSTR,'')+'|' ProductsID
,cu.InnerPhone 
, cast(cu.CustomerId as NVARCHAR(30))+'|'+isnull(cu.PostalCode,'')+'|'+isnull(cu.CustomerNo,'')+'|'+isnull(cu.PersonTitle,'')+'|' 
        + isnull(cu.Treater,'')+'|'+isnull(cu.Address,'')+'|'+isnull(cu.Notes,'')+'|'+isnull(cu.CompanyName,'')
        +'|'+isnull(cu.Phone,'')+'|'+isnull(cu.CompetitiveNote,'')+'|'+isnull(cu.FaxNumber,'')+'|'+isnull(cu.WorkPhone1,'')+'|'+isnull(cu.MobilePhone,'')   SearchStr  
 , ( isnull(cu.Phone,'')+'|'+isnull(cu.FaxNumber,'')+'|'+isnull(cu.WorkPhone1,'')+'|'+isnull(cu.MobilePhone,'')) SearchInt  
,c.stateid  
 
FROM dbo.Customer  cu            WITH(NOLOCK)      
left join dbo.Marketer ma        WITH(NOLOCK)    on Cu.MarketerID   = Ma.MarketerID      
left join dbo.Groups  gr         WITH(NOLOCK)    on Cu.GroupID   = Gr.GroupID      
left join dbo.City    c          WITH(NOLOCK)    ON Cu.CityID = C.CityID        
left join dbo.CustomerStatus cs  WITH(NOLOCK)    on Cu.CustomerStatusID  = Cs.CustomerStatusID 
left join dbo.[Compagin]   cp    WITH(NOLOCK)    on Cu.CompaginID  = Cp.[CompaginID]   
LEFT JOIN [dbo].[VWFollowup]  fu on Cu.CustomerID  = fu.CustomerID 

GO


----
alter Procedure [dbo].[Select_Customer]        
(@likeWhere nvarchar(1000),@MarketerID int ,@GroupId int,@CityId int,@ProductId int,@CustomerStatusId int =1,@Top int =1000  
,@StateID  int  
,@ContactNumber nvarchar(100)  
,@Email   nvarchar(100)  
)        
As  


Declare @sqlCommand nvarchar(4000),@where nvarchar(1000)      

  Set @sqlCommand='  
      Declare @Date Char(10)
      set @Date = dbo.Shamsi(GETDATE())
      Update CustomerProduct set ContractFinished = 0  , DateUpDateFinishedContractProducts = @Date WHERE DateUpDateFinishedContractProducts <> @Date
        
      Update CustomerProduct set ContractFinished = 1 , DateUpDateFinishedContractProducts = @Date  FROM CustomerProduct  
      INNER JOIN (  
      SELECT ProductID,CustomerID FROM [CONTRACT] GROUP BY ProductID,CustomerID  
      HAVING max(CONTRACT.EndDate) < @Date  
       AND not ProductID IS NULL) t  
       ON (t.ProductID = CustomerProduct.ProductID AND t.CustomerID = CustomerProduct.CustomerID ) 
       WHERE DateUpDateFinishedContractProducts <> @Date              
       '  
    
  Exec sp_executesql @sqlCommand 
   
  SET @sqlCommand = ''  
  
  
Set @sqlCommand='SELECT  top '+cast(@top as varchar(10))+'
 NickName      
,CustomerID, CustomerNo ,  RowNo 
,[PersonTitle],[Address],[Phone],[Notes],[CompanyName],CityID,GroupID,MarketerID           
,[IsActive],[SenderType],[Priority],[Treater],[CompaginID],[PostalCode],[EmailAddress],[WorkPhone1]        
,[Website],[MobilePhone],[FaxNumber],[competitiveNote],[CompaginTitle],[Insertdate],[LastUpdate],[CancelReasonID]        
,[CancelComment],[CancelDate],CustomerStatusID,UserTableLinkedID,CityTitle,GroupTitle,MarketerTitle      
,CustomerStatusTitle, latestFollowup      
, nextFollowup  
,FreeField01,FreeField02,FreeField03,FreeField04,FreeField05,FreeField06  
,FreeField07,FreeField08,FreeField09,FreeField10,FreeField11,FreeField12  
,FreeField13,FreeField14,FreeField15,FreeField16,FreeField17,FreeField18        
,FinishedContractProducts     

,CategoryId,SubCategoryId,CompanyTypeId,CompanySizeId,CompanyStructureId,FreeField19,FreeField20,FreeField21,FreeField22,
FreeField23,FreeField24,FreeField25,FreeField26,FreeField27,FreeField28
'
IF @ProductId = 0 
	SET @sqlCommand =@sqlCommand + ', '''' as ContractExpDate'
ELSE
	SET @sqlCommand =@sqlCommand + ', (SELECT isnull(MAX(EndDate),'''') FROM CONTRACT co  WITH(NOLOCK)  WHERE ProductID = '+cast(@ProductId as varchar(3))+' AND co.CustomerID= CustomerID) as ContractExpDate'
Set @sqlCommand= @sqlCommand + '

, products ,InnerPhone , ProductsID
, SearchStr  
, SearchInt  
,stateid  
  
FROM [dbo].[VWSelect_Customer] Customer  where 1=1        '        
        
Set @likeWhere=isnull(ltrim(rtrim(@likeWhere)),'')        
        
Set @where=''        
if @likeWhere<>''         
 set @where = @where+' and '+@likeWhere        
               
Set @where=Replace(@where,'ک','ك')    
Set @where=Replace(@where,'ی','ي')   
        
if @MarketerID<>0                 
    set @where = @where+' and ( ('+cast(@MarketerID as varchar(3))+'=-1) or (Marketerid='+cast(@MarketerID as varchar(3))+')  or  ('+cast(@MarketerID as varchar(3))+' in (select distinct marketerid from dbo.followup WITH(NOLOCK) where customerid = customerid)) )'        
else              
    Set @where = @where+' and (isnull(GroupID,0)<>17)'             
     
if @CustomerStatusId<>0                
    Set @where = @where +' and CustomerStatusId='+cast(@CustomerStatusId as varchar(3))         
        
if @GroupId<>0                 
    Set @where = @where+' and isnull(GroupId,0)='+cast(@GroupId as varchar(3))             
        
if @CityId<>0                  
    Set @where = @where+' and CityId='+cast(@CityId as varchar(10))             
        
if @ProductId<>0                  
    Set @where = @where +' and CustomerID in (SELECT distinct CustomerID FROM  CustomerProduct  WITH(NOLOCK) WHERE ProductID = ' + cast(@ProductId as varchar(3))+')'        

if @StateID<>0                
    Set @where=@where+' and (StateID  = ' + cast(@StateID  as varchar(3))+')'           
  
if @Email<>''                
    Set @where = @where +' and (EmailAddress  like ''%' + @Email+'%'')'             
  
if @ContactNumber<>''               
    Set @where = @where +' and ((Phone like ''%'+@ContactNumber+'%'') or (WorkPhone1 like ''%'+@ContactNumber+'%'') or '+  
                         ' (MobilePhone like ''%'+@ContactNumber+'%'') or (FaxNumber like ''%'+@ContactNumber+'%'')  )'  

        
Set @sqlCommand=@sqlCommand+@where+' order  by insertdate desc ,CustomerID desc'  

Print @sqlCommand
Exec sp_executesql @sqlCommand 


--**
CREATE NONCLUSTERED INDEX [NonClusteredIndex-customerId] ON [dbo].[Contract]
(
	[CustomerID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
--**


---***
CREATE NONCLUSTERED INDEX [NonClusteredIndex-DoneStatusIdAndCustomerIdAndToDoDate] ON [dbo].[FollowUp]
(
	[DoneStatusID] ASC
)
INCLUDE([CustomerID],[ToDoDate]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
---***


--**
CREATE NONCLUSTERED INDEX [NonClusteredIndex-CustomerIdAndUserId] ON [dbo].[UsersCustomerAccess]
(
	[CustomerID] ASC,
	[UserID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO


CREATE NONCLUSTERED INDEX [NonClusteredIndex-MarketIDCustomerID] ON [dbo].[FollowUp]
(
	[MarketerID] ASC
)
INCLUDE([CustomerID]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NonClusteredIndex-UserIDandHasAccessAndCustomerID] ON [dbo].[UsersCustomerAccess]
(
	[UserID] ASC,
	[HasAccess] ASC
)
INCLUDE([CustomerID]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NonClusteredIndex-ProductIdAndCustomerIDAndEndDate] ON [dbo].[Contract]
(
	[ProductID] ASC
)
INCLUDE([CustomerID],[EndDate]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NonClusteredIndex-UserIDAndWorkDateAnd] ON [dbo].[TimeSheet]
(
	[UserID] ASC,
	[WorkDate] ASC
)
INCLUDE([TimeSheetID],[EnterTime],[ExitTime],[Comment]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [NonClusteredIndex-CustomerIDAndDoneStatusId] ON [dbo].[FollowUp]
(
	[CustomerID] ASC,
	[DoneStatusID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO



--**


ALTER function [dbo].[fn_ProductByCustomerID]( @CustomerID  int)
returns  nvarchar(2000)
begin
declare @result nvarchar(2000)
set @result=''
select @result=@result+','+ Replace( replace(ProductTitle,'ی','ي'),'ک','ك')    
FROM         CustomerProduct
INNER JOIN  Product ON CustomerProduct.ProductID = Product.ProductID
WHERE     (CustomerProduct.CustomerID =@CustomerID)
order by Product.ProductID

if @result<>'' 
  set @result=right(@result,len(@result)-1)  
else
  set @result='ندارد' return(@result)   
end



CREATE TRIGGER dbo.Tr_CustomerProduct_Modify
   ON  dbo.CustomerProduct 
   for  INSERT,DELETE,UPDATE
AS 
BEGIN

	SET NOCOUNT ON;
	
	DECLARE @CustomerId int
	
	IF EXISTS (SELECT  COUNT(CustomerId) FROM DELETED)
	   SET @CustomerId = (SELECT TOP 1 CustomerId FROM DELETED)
	ELSE 
	IF EXISTS (SELECT  COUNT(CustomerId) FROM INSERTED)
	   SET @CustomerId = (SELECT TOP 1 CustomerId FROM INSERTED)

	
	--IF COLUMNS_UPDATED() > 0 -- insert or update
	
    UPDATE dbo.Customer   
     SET FinishedContractProducts =  dbo.fn_FinishedContractBycustomerId(customerid) ,   
         ProductsSTR = dbo.fn_ProductByCustomerID(customerid) , 
         ProductsIdSTR = dbo.fn_ProductIdByCustomerID(customerid)  
    WHERE CustomerID = @CustomerId

END
GO

----------------------

---job
USE [msdb]
GO

/****** Object:  Job [UpdateCustomerProduct]    Script Date: 01/02/1403 05:10:44 ب.ظ ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 01/02/1403 05:10:44 ب.ظ ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'UpdateCustomerProduct', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'This job Update ContractFinished field in CustomerProduct table everyday.', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Step1]    Script Date: 01/02/1403 05:10:45 ب.ظ ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Step1', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'
		Declare @Date Char(10)
        set @Date = dbo.Shamsi(GETDATE())
      Update CustomerProduct set ContractFinished = 0  , DateUpDateFinishedContractProducts = @Date
        
      Update CustomerProduct set ContractFinished = 1 , DateUpDateFinishedContractProducts = @Date FROM CustomerProduct  
      INNER JOIN (  
      SELECT ProductID,CustomerID FROM [CONTRACT] GROUP BY ProductID,CustomerID  
      HAVING max(CONTRACT.EndDate) < @Date  
       AND not ProductID IS NULL) t  
       ON (t.ProductID = CustomerProduct.ProductID AND t.CustomerID = CustomerProduct.CustomerID )   ', 
		@database_name=N'Y_Crm', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'first time', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20240420, 
		@active_end_date=99991231, 
		@active_start_time=10000, 
		@active_end_time=235959, 
		@schedule_uid=N'6610574c-aa6d-4f75-bada-aa38357a26e5'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO


