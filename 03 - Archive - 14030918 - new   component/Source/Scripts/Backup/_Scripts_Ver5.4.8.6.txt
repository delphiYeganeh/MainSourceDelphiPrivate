--Yeganeh123

[LastNum]=6


--Dabir Scripts


[Num]=1
---------
if Exists(Select * from Settings Where variableID = 50 And UserID = -1)
Update Settings Set [Value]=0 Where variableID = 50 And UserID = -1
GO
Select 1
GO

------------------------------------------------------------------------------------------------------

[Num]=2
---------5.4.6.1 ‰ê«—‘





-------OldScripts--------------------------------------------------------------------------------------------
--------Tables----------------------------------------------------------------------------------------------------------------------------------------------
if not exists (select * from sysobjects where id = object_id(N'[dbo].[EmailAddresses]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
begin
CREATE TABLE [dbo].[EmailAddresses](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EmailAddress] [varchar](50)  NOT NULL,
	[UserName] [varchar](50)  NOT NULL,
	[PassWord] [varchar](64)  NOT NULL,
	[Recievehost] [varchar](50)  NOT NULL,
	[SendHost] [varchar](50)  NOT NULL,
	[RecivePort] [smallint] NOT NULL,
	[SendPort] [smallint] NOT NULL,
	[AuthenticationType] [varchar](50)  NOT NULL,
	[SSLOption] [varchar](50)  NOT NULL,
	[ReciverOrgID] [int] NOT NULL,
	[ReciverSecID] [int] NOT NULL,
	[IsActive] [bit] NOT NULL,
	[ConnectionTimeOut] [smallint] NOT NULL,
 CONSTRAINT [PK_EmailAddresses] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
) ON [PRIMARY]
) ON [PRIMARY]
end
GO

 if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Accesses]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
begin
CREATE TABLE [dbo].[Accesses] (
	[ID] [tinyint] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_Accesses] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end

GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[AccessType]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
begin
CREATE TABLE [dbo].[AccessType] (
	[AccessTypeID] [tinyint] NOT NULL ,
	[AccessTypeTitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_AccessType] PRIMARY KEY  CLUSTERED 
	(
		[AccessTypeID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Actions]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Actions] (
	[FormTag] [tinyint] NOT NULL ,
	[ID] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL 
) ON [PRIMARY]
 

 CREATE  INDEX [IX_Actions_ID] ON [dbo].[Actions]([ID]) ON [PRIMARY]
end

GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ActionsAccess]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[ActionsAccess] (
	[AccessID] [tinyint] NOT NULL ,
	[ActionID] [int] NOT NULL ,
	[FormTag] [tinyint] NOT NULL ,
	[HasAccess] [bit] NOT NULL ,
	CONSTRAINT [PK_ActionsAccess] PRIMARY KEY  CLUSTERED 
	(
		[AccessID],
		[ActionID],
		[FormTag]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end

GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ActionType]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  
CREATE TABLE [dbo].[ActionType] (
	[ActionTypeID] [int] NOT NULL ,
	[ActionTypeTitle] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_ActionType] PRIMARY KEY  CLUSTERED 
	(
		[ActionTypeID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[added]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[added] (
	[ID] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (100)  NOT NULL ,
	[ParentID] [int] NOT NULL ,
	[Phone] [nvarchar] (30)  NULL ,
	[Fax] [nvarchar] (30)  NULL ,
	[Email] [nvarchar] (30)  NULL ,
	[ResponsibleStaffer] [nvarchar] (50)  NOT NULL ,
	[IsActive] [bit] NULL ,
	[PreCode] [nvarchar] (50)  NULL ,
	[IsInnerOrg] [bit] NOT NULL ,
	[Code] [nvarchar] (10)  NOT NULL ,
	[Number] [int] NOT NULL CONSTRAINT [DF__Added__Number__49F9CC38] DEFAULT (0)
) ON [PRIMARY]

end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ApplicationForms]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ApplicationForms] (
	[ID] [tinyint] NOT NULL ,
	[Title] [nvarchar] (50)  NULL 
) ON [PRIMARY]

 CREATE  INDEX [IX_ApplicationForms_ID] ON [dbo].[ApplicationForms]([ID]) ON [PRIMARY]

end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ArchiveCenter]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[ArchiveCenter] (
	[ArchiveCenterID] [int] NOT NULL ,
	[ArchiveCenterTitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_ArchiveCenter] PRIMARY KEY  CLUSTERED 
	(
		[ArchiveCenterID]
	)  ON [PRIMARY] 
) ON [PRIMARY]

end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FromOrganizations]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[FromOrganizations] (
	[ID] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (100)  NULL ,
	[ParentID] [int] NOT NULL ,
	[Phone] [nvarchar] (30)  NULL ,
	[Fax] [nvarchar] (30)  NULL ,
	[Email] [nvarchar] (30)  NULL ,
	[ResponsibleStaffer] [nvarchar] (50)  NULL ,
	[IsActive] [bit] NULL CONSTRAINT [DF_FromOrganizations_IsActive] DEFAULT (1),
	[PreCode] [nvarchar] (50)  NULL ,
	[IsInnerOrg] [bit] NOT NULL CONSTRAINT [DF_FromOrganizations_IsInnerOrg] DEFAULT (1),
	[Code] [nvarchar] (50)  NULL CONSTRAINT [DF_FromOrganizations_Code] DEFAULT (1),
	[UniqueID] [bigint] NULL ,
	CONSTRAINT [PK_FromOrganizations] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
 

 CREATE  UNIQUE  INDEX [fromorganizations_idx] ON [dbo].[FromOrganizations]([Code]) ON [PRIMARY]
 

 CREATE  INDEX [IX_FromOrganizations_Title] ON [dbo].[FromOrganizations]([Title]) ON [PRIMARY]
 

 CREATE  INDEX [IX_FromOrganizations_ParentID] ON [dbo].[FromOrganizations]([ParentID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_FromOrganizations] ON [dbo].[FromOrganizations]([Code]) ON [PRIMARY]
 
end

GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Users]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[Users] (
	[Id] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[UserName] [nvarchar] (50)  NULL ,
	[PassWord] [nvarchar] (100)  NULL ,
	[AccessID] [tinyint] NULL ,
	[FromOrgID] [int] NULL ,
	[DefualtSecretariatID] [tinyint] NOT NULL CONSTRAINT [DF_Users_DefualtSecretariatID] DEFAULT (1),
	[IsSecretariantStaffer] [bit] NULL ,
	[KartableGridInfo] [image] NULL ,
	[DabirGridInfo] [image] NULL ,
	[EndActiveDate] [char] (10)  NULL ,
	[BeginActiveDate] [char] (10)  NULL ,
	[AlternativeUserID] [int] NULL ,
	[AlternativeEndDate] [char] (10)  NULL ,
	[AlternativebeginDate] [char] (10)  NULL ,
	[HasSecureLetterAccess] [bit] NOT NULL CONSTRAINT [DF__Users__HasSecure__5E0BB1DD] DEFAULT (1),
	[SecondOrgID] [int] NULL ,
	[eCartableGridInfo] [varchar] (500)  NULL ,
	[eCartableTheme] [varchar] (50)  NULL ,
	[Email] [nvarchar] (100)  NULL ,
	CONSTRAINT [PK_Users] PRIMARY KEY  CLUSTERED 
	(
		[Id]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [IX_Users_FromOrgID] ON [dbo].[Users]([FromOrgID]) ON [PRIMARY]


 CREATE  INDEX [IX_Users_AccessID] ON [dbo].[Users]([AccessID]) ON [PRIMARY]


 CREATE  INDEX [IX_Users_DefualtSecretariatID] ON [dbo].[Users]([DefualtSecretariatID]) ON [PRIMARY]


 CREATE  INDEX [IX_Users_SecondOrgID] ON [dbo].[Users]([SecondOrgID]) ON [PRIMARY]



end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ArchiveFolder]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[ArchiveFolder] (
	[FolderID] [int] IDENTITY (1, 1) NOT NULL ,
	[ParentFolderID] [int] NOT NULL ,
	[Title] [nvarchar] (100)  NULL ,
	[UserID] [int] NOT NULL ,
	[Notes] [nvarchar] (500)  NULL ,
	[Place] [nvarchar] (100)  NULL ,
	CONSTRAINT [PK_ArchiveFolder] PRIMARY KEY  CLUSTERED 
	(
		[FolderID]
	)  ON [PRIMARY] 
	
) ON [PRIMARY] 

 CREATE  INDEX [IX_ArchiveFolder_ParentFolderID] ON [dbo].[ArchiveFolder]([ParentFolderID]) ON [PRIMARY] 

 CREATE  INDEX [IX_ArchiveFolder_Title] ON [dbo].[ArchiveFolder]([Title]) ON [PRIMARY] 

 CREATE  INDEX [IX_ArchiveFolder_UserID] ON [dbo].[ArchiveFolder]([UserID]) ON [PRIMARY] 


end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Classifications]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Classifications] (
	[ID] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_Classifications] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]

end

 

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[DoneStatus]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[DoneStatus] (
	[DoneStatusID] [tinyint] NOT NULL ,
	[DoneStatustitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_DoneStatus] PRIMARY KEY  CLUSTERED 
	(
		[DoneStatusID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Emails]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[Emails] (
	[EmailsID] [int] IDENTITY (1, 1) NOT NULL ,
	[Code] [int] NOT NULL ,
	[Subject] [nvarchar] (200)  NOT NULL ,
	[SendAddress] [nvarchar] (100)  NULL ,
	[ReciveAddress] [nvarchar] (100)  NULL ,
	[Memo] [image] NULL ,
	[AttachFile] [image] NULL ,
	[AttachFileName] [nvarchar] (50)  NULL ,
	[Status] [smallint] NULL ,
	[DateEmail] [nvarchar] (10)  NOT NULL ,
	[TimeEmail] [nvarchar] (10)  NOT NULL ,
	[IsAnswer] [bit] NULL ,
	[IsReciveEmail] [bit] NULL ,
	[UsersID] [int] NOT NULL ,
	[IsRead] [bit] NULL ,
	[IsPersonal] [bit] NULL ,
	[IsImportant] [bit] NULL ,
	[IsSecret] [bit] NULL ,
	[EmailNuFromDate] [nvarchar] (20)  NULL ,
	CONSTRAINT [PK_Emails] PRIMARY KEY  CLUSTERED 
	(
		[EmailsID]
	)  ON [PRIMARY] 
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 

 CREATE  INDEX [IX_Emails_Code] ON [dbo].[Emails]([Code]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Emails_Subject] ON [dbo].[Emails]([Subject]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Emails_EmailNuFromDate] ON [dbo].[Emails]([EmailNuFromDate]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Emails_SendAddress] ON [dbo].[Emails]([SendAddress]) ON [PRIMARY]
 

end

GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ErrorMessage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ErrorMessage] (
	[Errorid] [bigint] IDENTITY (1, 1) NOT NULL ,
	[ErrorMessage] [nvarchar] (255)  NULL ,
	[ErrorDate] [nvarchar] (10)  NULL ,
	[UserCode] [int] NULL ,
	[FarsiMessage] [nvarchar] (255)  NULL ,
	[ShowMessage] [bit] NULL CONSTRAINT [DF_ErrorMessage_ShowMessage] DEFAULT (1),
	CONSTRAINT [PK_ErrorMessage] PRIMARY KEY  CLUSTERED 
	(
		[Errorid]
	)  ON [PRIMARY] 
) ON [PRIMARY]
 

 CREATE  INDEX [IX_ErrorMessage_ErrorMessage] ON [dbo].[ErrorMessage]([ErrorMessage]) ON [PRIMARY]
 

 CREATE  INDEX [IX_ErrorMessage_FarsiMessage] ON [dbo].[ErrorMessage]([FarsiMessage]) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Extention]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[Extention] (
	[ExtentionID] [int] IDENTITY (1, 1) NOT NULL ,
	[ExtentionTitle] [nvarchar] (200)  NOT NULL ,
	[Extention] [varchar] (5)  NOT NULL ,
	[IsSystem] [bit] NOT NULL CONSTRAINT [DF__Extention__IsSys__3E88198C] DEFAULT (0),
	CONSTRAINT [PK_Extention] PRIMARY KEY  CLUSTERED 
	(
		[ExtentionID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end

GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Fields]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[Fields] (
	[ID] [int] IDENTITY (1, 1) NOT NULL ,
	[FieldName] [nvarchar] (50)  NOT NULL ,
	[TableID] [int] NOT NULL CONSTRAINT [DF_Fields_TableID] DEFAULT (1),
	[Description] [nvarchar] (50)  NULL ,
	[IsWhere] [bit] NOT NULL CONSTRAINT [DF_Fields_IsWhere] DEFAULT (1),
	[ISString] [bit] NOT NULL CONSTRAINT [DF_Fields_ISString] DEFAULT (1),
	[IsLike] [bit] NOT NULL CONSTRAINT [DF_Fields_IsLike] DEFAULT (1),
	[EveryLike] [bit] NOT NULL CONSTRAINT [DF_Fields_EveryLike] DEFAULT (0),
	[VisibleInGrid] [bit] NOT NULL CONSTRAINT [DF_Fields_VisibleInGrid] DEFAULT (1),
	[isblob] [bit] NULL CONSTRAINT [DF__Fields__isblob__4AEDF071] DEFAULT (0),
	[FieldTypeID] [int] NULL ,
	[ReferenceTableID] [int] NULL ,
	[order] [int] NULL CONSTRAINT [DF__Fields__order__0A9E6132] DEFAULT (1),
	[FieldGroupID] [int] NULL ,
	[isboolean] [bit] NULL ,
	CONSTRAINT [PK_Fields] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	)  ON [PRIMARY]
) ON [PRIMARY]
 

 CREATE  INDEX [IX_Fields_TableID] ON [dbo].[Fields]([TableID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Fields_FieldName] ON [dbo].[Fields]([FieldName]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Fields_FieldGroupID] ON [dbo].[Fields]([FieldGroupID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Fields_FieldTypeID] ON [dbo].[Fields]([FieldTypeID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Fields_ReferenceTableID] ON [dbo].[Fields]([ReferenceTableID]) ON [PRIMARY]


end

GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FieldAccess]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[FieldAccess] (
	[FieldAccessID] [int] IDENTITY (1, 1) NOT NULL ,
	[FieldID] [int] NOT NULL ,
	[UserID] [int] NOT NULL ,
	[AccessTypeID] [tinyint] NOT NULL ,
	CONSTRAINT [PK_FieldAccess] PRIMARY KEY  CLUSTERED 
	(
		[FieldAccessID]
	)  ON [PRIMARY] 
) ON [PRIMARY]


 CREATE  INDEX [IX_FieldAccess_FieldID] ON [dbo].[FieldAccess]([FieldID]) ON [PRIMARY]


 CREATE  INDEX [IX_FieldAccess_UserID] ON [dbo].[FieldAccess]([UserID]) ON [PRIMARY]


 CREATE  INDEX [IX_FieldAccess_AccessTypeID] ON [dbo].[FieldAccess]([AccessTypeID]) ON [PRIMARY]



end

GO




if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FieldType]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[FieldType] (
	[FieldTypeID] [int] NOT NULL ,
	[FieldTypeTitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_FieldType] PRIMARY KEY  CLUSTERED 
	(
		[FieldTypeID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end

GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FollowUpType]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[FollowUpType] (
	[FollowUpTypeID] [int] IDENTITY (1, 1) NOT NULL ,
	[FollowUpTypeTitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_FollowUpType] PRIMARY KEY  CLUSTERED 
	(
		[FollowUpTypeID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end

GO




if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ImageData]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ImageData] (
	[ImageDataID] [int] IDENTITY (1, 1) NOT NULL ,
	[Data] [image] NULL ,
	[FileName] [nvarchar] (50)  NULL ,
	[TableName] [nvarchar] (50)  NOT NULL ,
	[TableID] [int] NOT NULL ,
	[Tag] [int] NULL ,
	CONSTRAINT [PK_ImageData] PRIMARY KEY  CLUSTERED 
	(
		[ImageDataID]
	)  ON [PRIMARY] 
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 

 CREATE  INDEX [IX_ImageData_TableName] ON [dbo].[ImageData]([TableName]) ON [PRIMARY]
 

 CREATE  INDEX [IX_ImageData_TableID] ON [dbo].[ImageData]([TableID]) ON [PRIMARY]
 end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Letter]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[Letter] (
	[LetterID] [int] IDENTITY (1, 1) NOT NULL ,
	[IndicatorID] [int] NOT NULL ,
	[MYear] [tinyint] NOT NULL ,
	[SecretariatID] [int] NOT NULL  DEFAULT (1),
	[Letter_Type] [int] NOT NULL  DEFAULT (1),
	[letterformat] [int] NOT NULL  DEFAULT (1),
	[IncommingNO] [nvarchar] (50)  NULL ,
	[Incommingdate] [nvarchar] (10)  NULL ,
	[CenterNo] [nvarchar] (50)  NULL ,
	[CenterDate] [char] (10)  NULL ,
	[FromOrgID] [int] NOT NULL  DEFAULT ((-1)),
	[ToOrgID] [int] NOT NULL  DEFAULT (0),
	[Signerid] [nvarchar] (50)  NULL ,
	[ClassificationID] [int] NOT NULL  DEFAULT (1),
	[UrgencyID] [int] NOT NULL CONSTRAINT [DF__Letter__UrgencyI__2374309D] DEFAULT (1),
	[Memo] [nvarchar] (2000)  NULL ,
	[AttachTitle] [nvarchar] (50)  NULL ,
	[NumberOfAttachPages] [smallint] NULL CONSTRAINT [DF__Letter__NumberOf__246854D6] DEFAULT (1),
	[NumberOfPage] [tinyint] NOT NULL CONSTRAINT [DF__Letter__NumberOf__255C790F] DEFAULT (1),
	[ReceiveTypeID] [int] NOT NULL CONSTRAINT [DF__Letter__ReceiveT__26509D48] DEFAULT (1),
	[UserID] [int] NOT NULL CONSTRAINT [DF__Letter__UserID__2744C181] DEFAULT (0),
	[RetroactionNo] [nvarchar] (50)  NULL ,
	[UserMemo] [nvarchar] (255)  NULL ,
	[RegistrationDate] [char] (10)  NOT NULL ,
	[RegistrationTime] [varchar] (5)  NOT NULL ,
	[FollowLetterNo] [nvarchar] (50)  NULL ,
	[ToStaffer] [nvarchar] (50)  NULL ,
	[SentLetterID] [int] NULL ,
	[TemplateID] [int] NULL ,
	[HeaderID] [int] NULL ,
	[LetterRecommites] [nvarchar] (500)  NULL ,
	[PreCode] [nvarchar] (50)  NULL ,
	[fromstaffer] [nvarchar] (50)  NULL ,
	[Finalized] [bit] NOT NULL CONSTRAINT [DF__Letter__Finalize__4BE214AA] DEFAULT (1),
	[SendStatusID] [int] NOT NULL CONSTRAINT [DF__Letter__SendStat__4CD638E3] DEFAULT (1),
	[LastUpdate] [datetime] NOT NULL CONSTRAINT [DF__Letter__LastUpda__7D446614] DEFAULT (getdate()),
	[UserTableID] [int] NULL ,
	[UniqueID] [bigint] NULL ,
	[Archived] [bit] NOT NULL CONSTRAINT [DF__Letter__Archived__047B7388] DEFAULT (0),
	[SubjectDescription] [nvarchar] (255)  NULL ,
	[SubjectID] [int] NULL ,
	[LatestActionTypeID] [int] NULL ,
	[LatestActionReason] [nvarchar] (255)  NULL ,
	[DeadLineDate] [char] (10)  NULL ,
	[ActionTypeID] [int] NOT NULL CONSTRAINT [DF__Letter__ActionTy__657894D2] DEFAULT (1),
	[UserTableID2] [int] NULL ,
	[EmailNuFromDate] [nvarchar] (20)  NULL ,
	CONSTRAINT [PK_Letter] PRIMARY KEY  CLUSTERED 
	(
		[LetterID]
	)  ON [PRIMARY]
) ON [PRIMARY]
 

 CREATE  INDEX [ind_idx] ON [dbo].[Letter]([IndicatorID]) ON [PRIMARY]
 

 CREATE  INDEX [letter_idx] ON [dbo].[Letter]([SecretariatID], [Letter_Type], [MYear], [letterformat], [IndicatorID]) ON [PRIMARY]
 

 CREATE  INDEX [myear_idx] ON [dbo].[Letter]([MYear]) ON [PRIMARY]
 

 CREATE  INDEX [secid_idx] ON [dbo].[Letter]([SecretariatID]) ON [PRIMARY]
 

 CREATE  INDEX [letter_type_idx] ON [dbo].[Letter]([Letter_Type]) ON [PRIMARY]
 

 CREATE  INDEX [letterformat_idx] ON [dbo].[Letter]([letterformat]) ON [PRIMARY]
 

 CREATE  INDEX [incommingno_idx] ON [dbo].[Letter]([IncommingNO]) ON [PRIMARY]
 

 CREATE  INDEX [registrationdate_idx] ON [dbo].[Letter]([RegistrationDate]) ON [PRIMARY]
 

 CREATE  INDEX [fromorgid_idx] ON [dbo].[Letter]([FromOrgID]) ON [PRIMARY]
 

 CREATE  INDEX [ToOrgid_idx] ON [dbo].[Letter]([ToOrgID]) ON [PRIMARY]
 

 CREATE  UNIQUE  INDEX [Letter_IDX_Indicator] ON [dbo].[Letter]([IndicatorID], [MYear], [SecretariatID], [Letter_Type], [letterformat]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_IndicatorID] ON [dbo].[Letter]([IndicatorID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_Letter_Type] ON [dbo].[Letter]([Letter_Type]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_letterformat] ON [dbo].[Letter]([letterformat]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_IncommingNO] ON [dbo].[Letter]([IncommingNO]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_FromOrgID] ON [dbo].[Letter]([FromOrgID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_ToOrgID] ON [dbo].[Letter]([ToOrgID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_Signerid] ON [dbo].[Letter]([Signerid]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_ClassificationID] ON [dbo].[Letter]([ClassificationID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_UrgencyID] ON [dbo].[Letter]([UrgencyID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_UserID] ON [dbo].[Letter]([UserID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_MYear] ON [dbo].[Letter]([MYear]) ON [PRIMARY]
 
 
 CREATE  INDEX [IX_Letter_RegistrationDate] ON [dbo].[Letter]([RegistrationDate]) ON [PRIMARY]
 

 CREATE  INDEX [IX_Letter_SecretariatID] ON [dbo].[Letter]([SecretariatID]) ON [PRIMARY]
 


 end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterArchiveFolder]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[LetterArchiveFolder] (
	[LetterArchiveID] [int] IDENTITY (1, 1) NOT NULL ,
	[ArchiveFolderID] [int] NOT NULL ,
	[LetterID] [int] NOT NULL ,
	[ArchiveDate] [char] (10)  NOT NULL ,
	[Page] [int] NULL ,
	[ArchiveNotes] [nvarchar] (50)  NULL ,
	[UserID] [int] NOT NULL CONSTRAINT [DF__LetterArc__UserI__5C23696B] DEFAULT (0),
	CONSTRAINT [PK_LetterArchiveFolder] PRIMARY KEY  CLUSTERED 
	(
		[LetterArchiveID]
	)  ON [PRIMARY] 
	
) ON [PRIMARY]
 

 CREATE  INDEX [Letterarchive_Folder_idx] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID]) ON [PRIMARY]
 

 CREATE  INDEX [Letterarchive_Letter_Folder_idx] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID], [LetterID]) ON [PRIMARY]
 

 CREATE  INDEX [Letterarchive_Letter_idx] ON [dbo].[LetterArchiveFolder]([LetterID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_LetterArchiveFolder_ArchiveFolderID] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_LetterArchiveFolder_LetterID] ON [dbo].[LetterArchiveFolder]([LetterID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_LetterArchiveFolder_UserID] ON [dbo].[LetterArchiveFolder]([UserID]) ON [PRIMARY]
 


 end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterData]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[LetterData] (
	[LetterDataID] [int] IDENTITY (1, 1) NOT NULL ,
	[LetterID] [int] NOT NULL ,
	[PageNumber] [tinyint] NOT NULL CONSTRAINT [DF_letterdata_pageNumber] DEFAULT (0),
	[Image] [image] NULL ,
	[extention] [tinyint] NOT NULL CONSTRAINT [DF_LetterData_extention] DEFAULT (1),
	[Description] [nvarchar] (200)  NULL ,
	[LastUpdate] [datetime] NULL CONSTRAINT [DF__LetterDat__LastU__07C1F487] DEFAULT (getdate()),
	[UniqueID] [bigint] NULL ,
	[ListItemsID] [int] NULL ,
	CONSTRAINT [PK_LetterData] PRIMARY KEY  CLUSTERED 
	(
		[LetterDataID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
 

 CREATE  INDEX [IX_LetterData_LetterID] ON [dbo].[LetterData]([LetterID]) ON [PRIMARY]
 

 CREATE  INDEX [IX_LetterData_extention] ON [dbo].[LetterData]([extention]) ON [PRIMARY]
 


end
--------------  ta inja -----------------------

GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterFieldValue]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
-------------------------------------INJA

CREATE TABLE [dbo].[LetterFieldValue] (
	[LetterFieldValueID] [int] IDENTITY (1, 1) NOT NULL ,
	[LetterID] [int] NOT NULL ,
	[FieldID] [int] NOT NULL ,
	[FieldValue] [nvarchar] (2000)  NULL ,
	[uniqueID] [bigint] NULL ,
	[LastUpdate] [datetime] NULL CONSTRAINT [DF__LetterFie__LastU__0020D2BF] DEFAULT (getdate()),
	[InsertUserID] [int] NOT NULL CONSTRAINT [DF__LetterFie__Inser__7AF2094E] DEFAULT (0),
	[FormOrder] [tinyint] NOT NULL CONSTRAINT [DF__LetterFie__FormO__5EFFD616] DEFAULT (1),
	CONSTRAINT [PK_LetterFieldValue] PRIMARY KEY  CLUSTERED 
	(
		[LetterFieldValueID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_LetterFieldValue_LetterID] ON [dbo].[LetterFieldValue]([LetterID]) ON [PRIMARY]


 CREATE  INDEX [IX_LetterFieldValue_FieldID] ON [dbo].[LetterFieldValue]([FieldID]) ON [PRIMARY]


 CREATE  INDEX [IX_LetterFieldValue_InsertUserID] ON [dbo].[LetterFieldValue]([InsertUserID]) ON [PRIMARY]





end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterFormats]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LetterFormats] (
	[Code] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_LetterTypes] PRIMARY KEY  CLUSTERED 
	(
		[Code]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO



if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterRelation]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LetterRelation] (
	[LetterRelationID] [int] IDENTITY (1, 1) NOT NULL ,
	[MainLetterID] [int] NOT NULL ,
	[SubLetterID] [int] NOT NULL ,
	[Ord] [tinyint] NOT NULL CONSTRAINT [DF_LetterRelation_Ord] DEFAULT (1),
	CONSTRAINT [PK_LetterRelation] PRIMARY KEY  CLUSTERED 
	(
		[LetterRelationID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]




end

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterTemplate]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LetterTemplate] (
	[ID] [int] IDENTITY (1, 1) NOT NULL ,
	[Document] [image] NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[validHeader] [smallint] NULL ,
	[TemplateGroupID] [int] NOT NULL CONSTRAINT [DF__LetterTem__Templ__4DCA5D1C] DEFAULT (1),
	CONSTRAINT [PK_LetterTemplate] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [IX_LetterTemplate_Title] ON [dbo].[LetterTemplate]([Title]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterText]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LetterText] (
	[LetterID] [int] NULL ,
	[LetterFormat] [int] NOT NULL CONSTRAINT [DF_LetterText_LetterFormat] DEFAULT (1),
	[TypeText] [ntext]  NULL ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [IX_LetterText_LetterID] ON [dbo].[LetterText]([LetterID]) ON [PRIMARY]


 CREATE  INDEX [IX_LetterText_LetterFormat] ON [dbo].[LetterText]([LetterFormat]) ON [PRIMARY]





end

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LetterTypes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LetterTypes] (
	[ID] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[PreCode] [nvarchar] (10)  NULL ,
	CONSTRAINT [PK_LetterTypes_1] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[LifeTips]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[LifeTips] (
	[id] [int] NOT NULL ,
	[title] [nvarchar] (150)  NULL ,
	CONSTRAINT [PK_LifeTips] PRIMARY KEY  CLUSTERED 
	(
		[id]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ListItems]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 


CREATE TABLE [dbo].[ListItems] (
	[ListItemsID] [int] IDENTITY (1, 1) NOT NULL ,
	[ListID] [tinyint] NOT NULL ,
	[KeyValue] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[Notes] [nvarchar] (255)  NULL ,
	[UsersID] [int] NULL ,
	CONSTRAINT [PK_List] PRIMARY KEY  CLUSTERED 
	(
		[ListItemsID]
	)  ON [PRIMARY] 
) ON [PRIMARY]


 CREATE  INDEX [IX_ListItems_ListID] ON [dbo].[ListItems]([ListID]) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[News]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[News] (
	[NewsID] [int] IDENTITY (1, 1) NOT NULL ,
	[Code] [int] NOT NULL ,
	[Title] [nvarchar] (300)  NOT NULL ,
	[Memo] [nvarchar] (3000)  NULL ,
	[UrgenceisID] [int] NULL CONSTRAINT [DF_News_UrgencyID] DEFAULT (1),
	[DateAnnounce] [nvarchar] (10)  NULL ,
	[TimeAnnounce] [nvarchar] (10)  NULL ,
	[DateExpire] [nvarchar] (10)  NULL ,
	[UserID] [int] NOT NULL ,
	CONSTRAINT [PK_News] PRIMARY KEY  CLUSTERED 
	(
		[NewsID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_News_Code] ON [dbo].[News]([Code]) ON [PRIMARY]


 CREATE  INDEX [IX_News_Title] ON [dbo].[News]([Title]) ON [PRIMARY]


 CREATE  INDEX [IX_News_UserID] ON [dbo].[News]([UserID]) ON [PRIMARY]





end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NewsGroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[NewsGroup] (
	[NewsGroupID] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (50)  NOT NULL ,
	[Descript] [nvarchar] (300)  NULL ,
	[UsersID] [int] NOT NULL ,
	CONSTRAINT [PK_NewsGroup] PRIMARY KEY  CLUSTERED 
	(
		[NewsGroupID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_NewsGroup_Title] ON [dbo].[NewsGroup]([Title]) ON [PRIMARY]


 CREATE  INDEX [IX_NewsGroup_UsersID] ON [dbo].[NewsGroup]([UsersID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NewsGroupUsers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[NewsGroupUsers] (
	[NewsGroupUsersID] [int] IDENTITY (1, 1) NOT NULL ,
	[UsersID] [int] NOT NULL ,
	[NewsGroupID] [int] NOT NULL ,
	CONSTRAINT [PK_NewsGroupUsers] PRIMARY KEY  CLUSTERED 
	(
		[NewsGroupUsersID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_NewsGroupUsers_UsersID] ON [dbo].[NewsGroupUsers]([UsersID]) ON [PRIMARY]


 CREATE  INDEX [IX_NewsGroupUsers_NewsGroupID] ON [dbo].[NewsGroupUsers]([NewsGroupID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NewsUsers]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[NewsUsers] (
	[NewsUsersID] [int] IDENTITY (1, 1) NOT NULL ,
	[NewsID] [int] NOT NULL ,
	[UsersID] [int] NOT NULL ,
	[IsRead] [bit] NULL ,
	[NotShow] [bit] NULL ,
	CONSTRAINT [PK_NewsUsers] PRIMARY KEY  CLUSTERED 
	(
		[NewsUsersID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_NewsUsers_NewsID] ON [dbo].[NewsUsers]([NewsID]) ON [PRIMARY]


 CREATE  INDEX [IX_NewsUsers_UsersID] ON [dbo].[NewsUsers]([UsersID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ParaphTemplate]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ParaphTemplate] (
	[ParaphTemplateID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserID] [int] NOT NULL ,
	[OrderID] [tinyint] NOT NULL ,
	[Title] [nvarchar] (50)  NOT NULL ,
	[Paraph] [nvarchar] (500)  NOT NULL ,
	CONSTRAINT [PK_ParaphTemplate] PRIMARY KEY  CLUSTERED 
	(
		[ParaphTemplateID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_ParaphTemplate_UserID] ON [dbo].[ParaphTemplate]([UserID]) ON [PRIMARY]


 CREATE  INDEX [IX_ParaphTemplate_OrderID] ON [dbo].[ParaphTemplate]([OrderID]) ON [PRIMARY]


 CREATE  INDEX [IX_ParaphTemplate_Title] ON [dbo].[ParaphTemplate]([Title]) ON [PRIMARY]




end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[PhoneGroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[PhoneGroup] (
	[PhoneGroupID] [int] IDENTITY (1, 1) NOT NULL ,
	[Code] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NOT NULL ,
	[UsersID] [int] NOT NULL ,
	CONSTRAINT [PK_PhoneGroup] PRIMARY KEY  CLUSTERED 
	(
		[PhoneGroupID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_PhoneGroup_Title] ON [dbo].[PhoneGroup]([Title]) ON [PRIMARY]


 CREATE  INDEX [IX_PhoneGroup_UsersID] ON [dbo].[PhoneGroup]([UsersID]) ON [PRIMARY]




end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Phone]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Phone] (
	[PhoneID] [int] IDENTITY (1, 1) NOT NULL ,
	[Code] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NOT NULL ,
	[PersonName] [nvarchar] (50)  NULL ,
	[Tel1] [nvarchar] (20)  NULL ,
	[Tel2] [nvarchar] (20)  NULL ,
	[Mobile] [nvarchar] (20)  NULL ,
	[Fax] [nvarchar] (20)  NULL ,
	[Email] [nvarchar] (50)  NULL ,
	[Internet] [nvarchar] (500)  NULL ,
	[Address] [nvarchar] (500)  NULL ,
	[ZipCode] [nvarchar] (30)  NULL ,
	[Descript] [nvarchar] (500)  NULL ,
	[PhoneGroupID] [int] NULL ,
	[UsersID] [int] NOT NULL ,
	[IsPublic] [bit] NULL ,
	CONSTRAINT [PK_Phone] PRIMARY KEY  CLUSTERED 
	(
		[PhoneID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_Title] ON [dbo].[Phone]([Title]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_PersonName] ON [dbo].[Phone]([PersonName]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_Tel1] ON [dbo].[Phone]([Tel1]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_Tel2] ON [dbo].[Phone]([Tel2]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_Mobile] ON [dbo].[Phone]([Mobile]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_UsersID] ON [dbo].[Phone]([UsersID]) ON [PRIMARY]


 CREATE  INDEX [IX_Phone_Email] ON [dbo].[Phone]([Email]) ON [PRIMARY]




end
GO



if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Receipt]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[Receipt] (
	[ReceiptID] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[Memo] [nvarchar] (2000)  NULL ,
	[Descript] [nvarchar] (500)  NULL ,
	CONSTRAINT [PK_Receipt_ReceiptID] PRIMARY KEY  CLUSTERED 
	(
		[ReceiptID]
	)  ON [PRIMARY] 
) ON [PRIMARY]


 CREATE  INDEX [IX_Receipt_Title] ON [dbo].[Receipt]([Title]) ON [PRIMARY]

end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ReceiveTypes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ReceiveTypes] (
	[ID] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_ReceiveTypes] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]


 CREATE  INDEX [IX_ReceiveTypes_Title] ON [dbo].[ReceiveTypes]([Title]) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RecommiteData]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[RecommiteData] (
	[RecommiteDataID] [int] IDENTITY (1, 1) NOT NULL ,
	[RecommiteID] [int] NOT NULL ,
	[Image] [image] NULL ,
	[extention] [tinyint] NOT NULL ,
	[UniqueID] [bigint] NULL ,
	CONSTRAINT [PK_RecommiteData_RecommiteDataID] PRIMARY KEY  CLUSTERED 
	(
		[RecommiteDataID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [IX_RecommiteData_RecommiteID] ON [dbo].[RecommiteData]([RecommiteID]) ON [PRIMARY]


 CREATE  INDEX [IX_RecommiteData_extention] ON [dbo].[RecommiteData]([extention]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ReCommites]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ReCommites] (
	[RecommiteID] [int] IDENTITY (1, 1) NOT NULL ,
	[LetterID] [int] NOT NULL ,
	[ID] [smallint] NOT NULL ,
	[Type] [tinyint] NOT NULL CONSTRAINT [DF_ReCommites_Type] DEFAULT (1),
	[ParentId] [smallint] NOT NULL CONSTRAINT [DF_ReCommites_ParentId] DEFAULT (0),
	[OrgID] [int] NOT NULL ,
	[Paraph] [nvarchar] (500)  NULL ,
	[RecommiteDate] [varchar] (10)  NOT NULL ,
	[UserID] [int] NOT NULL CONSTRAINT [DF_ReCommites_UserID] DEFAULT (1),
	[IsCopy] [bit] NULL ,
	[Proceeded] [bit] NOT NULL CONSTRAINT [DF_ReCommites_Done] DEFAULT (0),
	[ProceedDate] [varchar] (10)  NULL ,
	[staffmemo] [nvarchar] (255)  NULL ,
	[viewdate] [char] (10)  NULL ,
	[OrgStaff] [nvarchar] (50)  NULL ,
	[DeadLineDate] [char] (10)  NULL ,
	[LastUpdate] [datetime] NULL CONSTRAINT [DF__ReCommite__LastU__7F2CAE86] DEFAULT (getdate()),
	[UniqueID] [bigint] NULL ,
	[ActionTypeID] [int] NULL CONSTRAINT [DF__ReCommite__Actio__056F97C1] DEFAULT (1),
	[DeadLineToint] [int] NULL ,
	[IsAnswer] [bit] NULL ,
	[ISFollowup] [bit] NULL ,
	CONSTRAINT [PK_ReCommites] PRIMARY KEY  CLUSTERED 
	(
		[RecommiteID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [recommite_idx] ON [dbo].[ReCommites]([LetterID], [ID], [Type], [ParentId], [OrgID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_LetterID] ON [dbo].[ReCommites]([LetterID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_ID] ON [dbo].[ReCommites]([ID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_ParentId] ON [dbo].[ReCommites]([ParentId]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_OrgID] ON [dbo].[ReCommites]([OrgID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_UserID] ON [dbo].[ReCommites]([UserID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_DeadLineDate] ON [dbo].[ReCommites]([DeadLineDate]) ON [PRIMARY]


 CREATE  INDEX [IX_ReCommites_ActionTypeID] ON [dbo].[ReCommites]([ActionTypeID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RecommiteTypes]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[RecommiteTypes] (
	[ID] [tinyint] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[ReceiveMode] [bit] NULL ,
	[InnerOrganize] [bit] NULL ,
	CONSTRAINT [PK_RecommiteTypes] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ReferenceTableData]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[ReferenceTableData] (
	[ReferenceTableDataID] [int] IDENTITY (1, 1) NOT NULL ,
	[TableID] [int] NOT NULL ,
	[DataID] [tinyint] NOT NULL ,
	[DataTitle] [nvarchar] (50)  NOT NULL ,
	CONSTRAINT [PK_ReferenceTableData] PRIMARY KEY  CLUSTERED 
	(
		[ReferenceTableDataID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_ReferenceTableData_TableID] ON [dbo].[ReferenceTableData]([TableID]) ON [PRIMARY]


 CREATE  INDEX [IX_ReferenceTableData_DataID] ON [dbo].[ReferenceTableData]([DataID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[RelatedSecretariats]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[RelatedSecretariats] (
	[RelatedSecretariatID] [int] IDENTITY (1, 1) NOT NULL ,
	[RelatedSecretariatTitle] [nvarchar] (50)  NOT NULL ,
	[DestinationOrgID_inSource] [int] NOT NULL ,
	[DestinationSecID] [int] NOT NULL ,
	[DestinationServerIP] [varchar] (30)  NULL ,
	[DestinationServerDB] [varchar] (50)  NULL ,
	CONSTRAINT [PK_RelatedSecretarats] PRIMARY KEY  CLUSTERED 
	(
		[RelatedSecretariatID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_RelatedSecretariats_DestinationSecID] ON [dbo].[RelatedSecretariats]([DestinationSecID]) ON [PRIMARY]


 CREATE  INDEX [IX_RelatedSecretariats_DestinationOrgID_inSource] ON [dbo].[RelatedSecretariats]([DestinationOrgID_inSource]) ON [PRIMARY]



end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Secretariats]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[Secretariats] (
	[SecID] [int] IDENTITY (1, 1) NOT NULL ,
	[SecTitle] [nvarchar] (50)  NULL ,
	[Precode] [nvarchar] (50)  NULL ,
	[ServerID] [int] NOT NULL CONSTRAINT [DF__Secretari__Serve__05D9AC15] DEFAULT (0),
	[ArchiveCenterID] [int] NOT NULL CONSTRAINT [DF__Secretari__Archi__79FDE515] DEFAULT (0),
	CONSTRAINT [PK_Secretariats] PRIMARY KEY  CLUSTERED 
	(
		[SecID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_Secretariats_ArchiveCenterID] ON [dbo].[Secretariats]([ArchiveCenterID]) ON [PRIMARY]


 CREATE  INDEX [IX_Secretariats_Precode] ON [dbo].[Secretariats]([Precode]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SendStatus]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[SendStatus] (
	[SendStatusID] [int] NOT NULL ,
	[SendStatusTitle] [nvarchar] (100)  NOT NULL ,
	CONSTRAINT [PK_SendStatus] PRIMARY KEY  CLUSTERED 
	(
		[SendStatusID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sentenses]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[Sentenses] (
	[ID] [int] IDENTITY (1, 1) NOT NULL ,
	[SentenseName] [nvarchar] (50)  NULL ,
	[SentensValue] [nvarchar] (255)  NULL ,
	CONSTRAINT [PK_Sentenses] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Settings]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Settings] (
	[UserID] [int] NOT NULL ,
	[VariableId] [int] NOT NULL ,
	[Value] [nvarchar] (255)  NULL ,
	[description] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_Settings] PRIMARY KEY  CLUSTERED 
	(
		[UserID],
		[VariableId]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Subject]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Subject] (
	[SubjectID] [int] IDENTITY (1, 1) NOT NULL ,
	[SubjectTitle] [nvarchar] (50)  NOT NULL ,
	[IsActive] [bit] NOT NULL CONSTRAINT [DF__Subject__IsActiv__75392FF8] DEFAULT (1),
	CONSTRAINT [PK_Subject] PRIMARY KEY  CLUSTERED 
	(
		[SubjectID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sys_AppMessage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[sys_AppMessage] (
	[ID] [int] NOT NULL ,
	[FarsiMessage] [nvarchar] (255)  NULL ,
	CONSTRAINT [PK_sys_AppMessage] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	)  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tables]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Tables] (
	[TableId] [int] NOT NULL ,
	[TableName] [nvarchar] (50)  NULL ,
	[Description] [nvarchar] (50)  NULL ,
	[TableType] [tinyint] NULL ,
	[TableCode] [varchar] (50)  NULL ,
	[UserField1] [nvarchar] (50)  NULL ,
	[UserField2] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_Tables] PRIMARY KEY  CLUSTERED 
	(
		[TableId]
	)  ON [PRIMARY] 
) ON [PRIMARY]


 CREATE  INDEX [IX_Tables_TableType] ON [dbo].[Tables]([TableType]) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[TemplateGroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[TemplateGroup] (
	[TemplateGroupID] [int] IDENTITY (1, 1) NOT NULL ,
	[TemplateGroupTitle] [nvarchar] (100)  NOT NULL ,
	CONSTRAINT [PK_TemplateGroup] PRIMARY KEY  CLUSTERED 
	(
		[TemplateGroupID]
	)  ON [PRIMARY] 
) ON [PRIMARY]

end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Urgenceis]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[Urgenceis] (
	[ID] [int] NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	CONSTRAINT [PK_Urgenceis] PRIMARY KEY  CLUSTERED 
	(
		[ID]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] 
) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserAccArchive]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserAccArchive] (
	[UserAccArchiveID] [int] IDENTITY (1, 1) NOT NULL ,
	[SecID] [int] NOT NULL ,
	[UserID] [int] NOT NULL ,
	[ArchiveCenterID] [int] NOT NULL ,
	[ArchiveFolderID] [int] NOT NULL ,
	[ISAccess] [bit] NULL ,
	CONSTRAINT [PK_UserAccArchive] PRIMARY KEY  CLUSTERED 
	(
		[UserAccArchiveID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_UserAccArchive_SecID] ON [dbo].[UserAccArchive]([SecID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserAccArchive_UserID] ON [dbo].[UserAccArchive]([UserID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserAccArchive_ArchiveCenterID] ON [dbo].[UserAccArchive]([ArchiveCenterID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserAccArchive_ArchiveFolderID] ON [dbo].[UserAccArchive]([ArchiveFolderID]) ON [PRIMARY]







end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserExtention]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[UserExtention] (
	[UserExtentionID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserId] [int] NOT NULL ,
	[ExtentionID] [int] NOT NULL ,
	[ReaderApplication] [nvarchar] (2000)  NULL ,
	CONSTRAINT [PK_UserExtention] PRIMARY KEY  CLUSTERED 
	(
		[UserExtentionID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  UNIQUE  INDEX [User_extention_idx] ON [dbo].[UserExtention]([UserId], [ExtentionID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserExtention_UserId] ON [dbo].[UserExtention]([UserId]) ON [PRIMARY]


 CREATE  INDEX [IX_UserExtention_ExtentionID] ON [dbo].[UserExtention]([ExtentionID]) ON [PRIMARY]




end
GO
if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserLog]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserLog] (
	[UserID] [int] NOT NULL ,
	[FormID] [int] NOT NULL CONSTRAINT [DF_UserLog_FormID] DEFAULT (1),
	[ActionID] [int] NOT NULL ,
	[Time1] [datetime] NOT NULL CONSTRAINT [DF_UserLog_Time1] DEFAULT (getdate()),
	[LetterID] [int] NULL 
) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_UserID] ON [dbo].[UserLog]([UserID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_FormID] ON [dbo].[UserLog]([FormID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_ActionID] ON [dbo].[UserLog]([ActionID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_LetterID] ON [dbo].[UserLog]([LetterID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_User_Act_Form] ON [dbo].[UserLog]([UserID], [ActionID], [FormID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserLog_User_Act_Form_Letter] ON [dbo].[UserLog]([UserID], [ActionID], [FormID], [LetterID]) ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserLoginLogout]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[UserLoginLogout] (
	[UserLoginLogoutID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserID] [int] NOT NULL ,
	[IPAddress] [char] (15)  NULL ,
	[LoginTime] [datetime] NOT NULL CONSTRAINT [DF_UserLoginLogout_LoginTime] DEFAULT (getdate()),
	[LogoutTime] [datetime] NOT NULL CONSTRAINT [DF_UserLoginLogout_LogoutTime] DEFAULT (getdate()),
	[isSafeLogout] [bit] NOT NULL CONSTRAINT [DF_UserLoginLogout_isSafeLogout] DEFAULT (0),
	CONSTRAINT [PK_UserLoginLogout] PRIMARY KEY  CLUSTERED 
	(
		[UserLoginLogoutID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_UserLoginLogout_UserID] ON [dbo].[UserLoginLogout]([UserID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserMessage]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserMessage] (
	[UserMessageID] [bigint] IDENTITY (1, 1) NOT NULL ,
	[To_] [int] NOT NULL ,
	[Code] [int] NULL ,
	[From_] [int] NULL ,
	[MsgDate] [varchar] (10)  NULL ,
	[MsgTime] [varchar] (6)  NULL ,
	[Subject] [nvarchar] (50)  NULL ,
	[Message] [text]  NULL ,
	[Status] [int] NULL ,
	CONSTRAINT [PK_UserMessage] PRIMARY KEY  CLUSTERED 
	(
		[UserMessageID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [UserMessage_To_status_idx] ON [dbo].[UserMessage]([To_], [Status]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserNote]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserNote] (
	[UserNoteID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserID] [int] NOT NULL ,
	[Note] [ntext]  NULL ,
	[CreateDate] [char] (10)  NOT NULL ,
	CONSTRAINT [PK_UserNote] PRIMARY KEY  CLUSTERED 
	(
		[UserNoteID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


 CREATE  INDEX [IX_UserNote_UserID] ON [dbo].[UserNote]([UserID]) ON [PRIMARY]



end
GO


GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserSecretariats]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserSecretariats] (
	[UserId] [int] NOT NULL ,
	[SecId] [int] NOT NULL ,
	CONSTRAINT [PK_UserSecretariats] PRIMARY KEY  CLUSTERED 
	(
		[UserId],
		[SecId]
	) WITH  FILLFACTOR = 90  ON [PRIMARY] ,
	
) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserShortCut]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 
CREATE TABLE [dbo].[UserShortCut] (
	[userShortCutID] [int] IDENTITY (1, 1) NOT NULL ,
	[UserID] [int] NOT NULL ,
	[keyText] [nvarchar] (100)  NOT NULL ,
	[altKey] [char] (1)  NOT NULL ,
	CONSTRAINT [PK_UserShortCut] PRIMARY KEY  NONCLUSTERED 
	(
		[userShortCutID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  CLUSTERED  INDEX [userShortCut_user_idx] ON [dbo].[UserShortCut]([UserID]) ON [PRIMARY]


 CREATE  INDEX [userShortCut_keytext_idx] ON [dbo].[UserShortCut]([keyText]) ON [PRIMARY]


 CREATE  UNIQUE  INDEX [UserShortcut_altkey_idx] ON [dbo].[UserShortCut]([UserID], [altKey]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserSign]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserSign] (
	[UserID] [int] NOT NULL ,
	[UserSign] [image] NOT NULL ,
	CONSTRAINT [PK_UserSign] PRIMARY KEY  CLUSTERED 
	(
		[UserID]
	)  ON [PRIMARY] 
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
end
GO


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[UserTemplateGroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[UserTemplateGroup] (
	[UserTemplateGroupID] [int] IDENTITY (1, 1) NOT NULL ,
	[TemplateGroupID] [int] NOT NULL ,
	[UserID] [int] NOT NULL ,
	CONSTRAINT [PK_UserTemplateGroup] PRIMARY KEY  CLUSTERED 
	(
		[UserTemplateGroupID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_UserTemplateGroup_TemplateGroupID] ON [dbo].[UserTemplateGroup]([TemplateGroupID]) ON [PRIMARY]


 CREATE  INDEX [IX_UserTemplateGroup_UserID] ON [dbo].[UserTemplateGroup]([UserID]) ON [PRIMARY]





end
GO



if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WorkGroup]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[WorkGroup] (
	[WorkGroupID] [int] IDENTITY (1, 1) NOT NULL ,
	[Title] [nvarchar] (50)  NULL ,
	[Descript] [nvarchar] (300)  NULL ,
	[UserID] [int] NOT NULL ,
	CONSTRAINT [PK_WorkGroup] PRIMARY KEY  CLUSTERED 
	(
		[WorkGroupID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_WorkGroup] ON [dbo].[WorkGroup]([UserID]) ON [PRIMARY]




end
GO

if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[WorkGroupOrg]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin 

CREATE TABLE [dbo].[WorkGroupOrg] (
	[WorkGroupOrgID] [int] IDENTITY (1, 1) NOT NULL ,
	[FromOrgID] [int] NOT NULL ,
	[WorkGroupID] [int] NOT NULL ,
	CONSTRAINT [PK_WorkGroupOrg] PRIMARY KEY  CLUSTERED 
	(
		[WorkGroupOrgID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]


 CREATE  INDEX [IX_WorkGroupOrg_FromOrgID] ON [dbo].[WorkGroupOrg]([FromOrgID]) ON [PRIMARY]


 CREATE  INDEX [IX_WorkGroupOrg_WorkGroupID] ON [dbo].[WorkGroupOrg]([WorkGroupID]) ON [PRIMARY]




end

go


if not exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FollowUp]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
 begin  

CREATE TABLE [dbo].[FollowUp] (
	[FollowUPID] [int] IDENTITY (1, 1) NOT NULL ,
	[StartFollowUpID] [int] NULL ,
	[FollowUPTypeID] [int] NOT NULL ,
	[DoneStatusID] [tinyint] NOT NULL CONSTRAINT [DF_FollowUp_DoneStatusID] DEFAULT (1),
	[UserID] [int] NOT NULL ,
	[Comment] [nvarchar] (255)  NULL ,
	[ToDoDate] [char] (10)  NULL ,
	[ToDoTime] [char] (5)  NULL ,
	[DoneComment] [nvarchar] (255)  NULL ,
	[HasAlarm] [bit] NULL ,
	[Letterid] [int] NULL CONSTRAINT [DF_FollowUp_Letterid] DEFAULT (0),
	CONSTRAINT [PK_FollowUp] PRIMARY KEY  CLUSTERED 
	(
		[FollowUPID]
	)  ON [PRIMARY] ,
	
) ON [PRIMARY]
 
 CREATE  INDEX [IX_FollowUp_StartFollowUpID] ON [dbo].[FollowUp]([StartFollowUpID]) ON [PRIMARY]
 
 CREATE  INDEX [IX_FollowUp_FollowUPTypeID] ON [dbo].[FollowUp]([FollowUPTypeID]) ON [PRIMARY]
 
 CREATE  INDEX [IX_FollowUp_DoneStatusID] ON [dbo].[FollowUp]([DoneStatusID]) ON [PRIMARY]
 
 CREATE  INDEX [IX_FollowUp_UserID] ON [dbo].[FollowUp]([UserID]) ON [PRIMARY]
 
 CREATE  INDEX [IX_FollowUp_Letterid] ON [dbo].[FollowUp]([Letterid]) ON [PRIMARY]
 


end
GO
 declare @do bit ,@sql varchar(8000)
 set @do=0

if exists(SELECT *
FROM  syscolumns c,systypes t
 where  c.xtype=t.xtype and  c.id=object_id('letter') and t.name<>'int' 
and c.name in ('SecretariatID','Letter_Type','letterformat',
'ClassificationID','UrgencyID','ReceiveTypeID','UserID','SendStatusID',
'UserTableID','SubjectID','LatestActionTypeID','ActionTypeID'))
set @do=1

if @do=1
BEGIN


set @sql=''
select @sql=@sql+'
alter table '+o1.name+' drop constraint '+o.name
FROM Sysforeignkeys f ,      Sysobjects o1 ,Sysobjects o2 ,sysobjects o
where o2.id=rkeyid and 'letter' in (o1.name,o2.name) and fkeyid = o1.id and constid=o.id

exec( @sql)
End


if @do=1
BEGIN
 set @sql=''
 select @sql=@sql+'
 alter table Letter drop constraint '+name

 from sysobjects
 where type='d' and parent_obj=object_id('letter')
 exec(@sql)
end

if @do=1
BEGIN
 CREATE TABLE dbo.Tmp_Letter
	(
	LetterID int NOT NULL IDENTITY (1, 1),
	IndicatorID int NOT NULL,
	MYear tinyint NOT NULL,
	SecretariatID int NOT NULL default 1,
	Letter_Type int NOT NULL default 1,
	letterformat int NOT NULL default 1,
	IncommingNO nvarchar(50) NULL,
	Incommingdate nvarchar(10) NULL,
	CenterNo nvarchar(50) NULL,
	CenterDate char(10) NULL,
	FromOrgID int NOT NULL,
	ToOrgID int NOT NULL default 1,
	Signerid nvarchar(50) NULL,
	ClassificationID int NOT NULL default 1,
	UrgencyID int NOT NULL default 1,
	Memo nvarchar(2000) NULL,
	AttachTitle nvarchar(50) NULL,
	NumberOfAttachPages smallint NULL DEFAULT (1),
	NumberOfPage tinyint NOT NULL DEFAULT (1),
	ReceiveTypeID int NOT NULL DEFAULT (1),
	UserID int NOT NULL DEFAULT (0),
	RetroactionNo nvarchar(50) NULL,
	UserMemo nvarchar(255) NULL,
	RegistrationDate char(10) NOT NULL,
	RegistrationTime varchar(5) NOT NULL,
	FollowLetterNo nvarchar(50) NULL,
	ToStaffer nvarchar(50) NULL,
	SentLetterID int NULL,
	TemplateID int NULL,
	HeaderID int NULL,
	LetterRecommites nvarchar(500) NULL,
	PreCode nvarchar(50) NULL,
	fromstaffer nvarchar(50) NULL,
	Finalized bit NOT NULL default 1,
	SendStatusID int NOT NULL default 1,
	LastUpdate datetime NOT NULL DEFAULT (getdate()),
	UserTableID int NULL,
	Archived bit NOT NULL DEFAULT (0),
	UniqueID bigint NULL,
	SubjectDescription nvarchar(255) NULL,
	SubjectID int NULL,
	LatestActionTypeID int NULL,
	LatestActionReason nvarchar(255) NULL,
	DeadLineDate char(10) NULL,
	ActionTypeID int NOT NULL DEFAULT (1),
	UserTableID2 int NULL,
	EmailNuFromDate nvarchar(20) NULL
	)  ON [PRIMARY]

SET IDENTITY_INSERT dbo.Tmp_Letter on

INSERT INTO Tmp_Letter
           (LetterID ,IndicatorID ,MYear ,SecretariatID ,Letter_Type ,letterformat ,IncommingNO ,Incommingdate ,CenterNo ,CenterDate ,FromOrgID ,ToOrgID
 ,Signerid ,ClassificationID ,UrgencyID ,Memo ,AttachTitle ,NumberOfAttachPages ,NumberOfPage ,ReceiveTypeID ,UserID
 ,RetroactionNo ,UserMemo ,RegistrationDate ,RegistrationTime ,FollowLetterNo ,ToStaffer ,SentLetterID ,TemplateID ,HeaderID ,LetterRecommites  ,fromstaffer ,Finalized
 ,SendStatusID ,LastUpdate ,UserTableID ,Archived ,UniqueID ,SubjectDescription ,SubjectID)
SELECT LetterID ,IndicatorID ,MYear ,SecretariatID ,Letter_Type ,letterformat ,IncommingNO ,Incommingdate ,CenterNo ,CenterDate ,FromOrgID ,ToOrgID
 ,Signerid ,ClassificationID ,UrgencyID ,Memo ,AttachTitle ,NumberOfAttachPages ,NumberOfPage ,ReceiveTypeID ,UserID
 ,RetroactionNo ,UserMemo ,RegistrationDate ,RegistrationTime ,FollowLetterNo ,ToStaffer ,SentLetterID ,TemplateID ,HeaderID ,LetterRecommites ,fromstaffer ,Finalized
 ,SendStatusID ,LastUpdate ,UserTableID ,Archived ,UniqueID ,SubjectDescription ,SubjectID
FROM Letter

SET IDENTITY_INSERT dbo.Tmp_Letter off

drop table Letter
EXECUTE sp_rename N'dbo.Tmp_Letter', N'Letter', 'OBJECT'

end
GO
--------Fields----------------------------------------------------------------------------------------------------------------------------------------------

if exists (select * from sysobjects where name='PK_Settings')
ALTER TABLE dbo.Settings 	DROP CONSTRAINT PK_Settings

if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Settings' and c.name='VariableName')
alter table Settings add   VariableName varchar(50)     
go
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='ArchiveCenterID')
alter TABLE ArchiveFolder add ArchiveCenterID  int Not Null default -1
 
GO

if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Accesses' and c.name='ID')
alter TABLE Accesses add ID  tinyint Not Null default 0
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Accesses' and c.name='Title')                                                                                                                                                
alter TABLE Accesses add Title  nvarchar(50) Null                                                                                                                                                                               
                               
else
alter TABLE Accesses alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='AccessType' and c.name='AccessTypeID')                                                                                                                                       
alter TABLE AccessType add AccessTypeID  tinyint Not Null default 0                                                                                                                                                
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='AccessType' and c.name='AccessTypeTitle')                                                                                                                                    
alter TABLE AccessType add AccessTypeTitle  nvarchar(50) Not Null default 0                                                                                                                                  
                                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Actions' and c.name='FormTag')                                                                                                                                               
alter TABLE Actions add FormTag  tinyint Not Null default 0
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Actions' and c.name='ID')                                                                                                                                                    
alter TABLE Actions add ID  int Not Null default 0                                                                                                                                                                                
                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Actions' and c.name='Title')                                                                                                                                                 
alter TABLE Actions add Title  nvarchar(50) Null                                                                                                                                                                                  
                             
else
alter TABLE Actions alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionsAccess' and c.name='AccessID')                                                                                                                                        
alter TABLE ActionsAccess add AccessID  tinyint Not Null default 0                                                                                                                                                    
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionsAccess' and c.name='ActionID')                                                                                                                                        
alter TABLE ActionsAccess add ActionID  int Not Null default 0                                                                                                                                                           
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionsAccess' and c.name='FormTag')                                                                                                                                         
alter TABLE ActionsAccess add FormTag  tinyint Not Null default 0                                                                                                                                                     
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionsAccess' and c.name='HasAccess')                                                                                                                                       
alter TABLE ActionsAccess add HasAccess  bit Not Null default 0                                                                                                                                                        
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionType' and c.name='ActionTypeID')                                                                                                                                       
alter TABLE ActionType add ActionTypeID  int Not Null default 0                                                                                                                                                        
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ActionType' and c.name='ActionTypeTitle')                                                                                                                                    
alter TABLE ActionType add ActionTypeTitle  nvarchar(50) Null                                                                                                                                                          
                                        
else
alter TABLE ActionType alter column ActionTypeTitle  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='ID')                                                                                                                                                      
alter TABLE added add ID  int Not Null default 0                                                                                                                                                                                  
                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Title')                                                                                                                                                   
alter TABLE added add Title  nvarchar(100) Not Null default 0                                                                                                                                                            
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='ParentID')                                                                                                                                                
alter TABLE added add ParentID  int Not Null default 0                                                                                                                                                                       
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Phone')                                                                                                                                                   
alter TABLE added add Phone  nvarchar(30) Null                                                                                                                                                                                
                                 
else
alter TABLE added alter column Phone  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Fax')                                                                                                                                                     
alter TABLE added add Fax  nvarchar(30) Null                                                                                                                                                                                    
                               
else
alter TABLE added alter column Fax  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Email')                                                                                                                                                   
alter TABLE added add Email  nvarchar(30) Null                                                                                                                                                                                  
                               
else
alter TABLE added alter column Email  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='ResponsibleStaffer')                                                                                                                                      
alter TABLE added add ResponsibleStaffer  nvarchar(50) Not Null default 0                                                                                                                                      
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='IsActive')                                                                                                                                                
alter TABLE added add IsActive  bit Null                                                                                                                                                                                              
                         
else
alter TABLE added alter column IsActive  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='PreCode')                                                                                                                                                 
alter TABLE added add PreCode  nvarchar(50) Null                                                                                                                                                                             
                                  
else
alter TABLE added alter column PreCode  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='IsInnerOrg')                                                                                                                                              
alter TABLE added add IsInnerOrg  bit Not Null default 0                                                                                                                                                                    
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Code')                                                                                                                                                    
alter TABLE added add Code  nvarchar(10) Not Null default 0                                                                                                                                                            
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='added' and c.name='Number')                                                                                                                                                  
alter TABLE added add Number  int Not Null  default (0)                                                                                                                                                                     
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ApplicationForms' and c.name='ID')                                                                                                                                           
alter TABLE ApplicationForms add ID  tinyint Not Null default 0                                                                                                                                                           
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ApplicationForms' and c.name='Title')                                                                                                                                        
alter TABLE ApplicationForms add Title  nvarchar(50) Null                                                                                                                                                                   
                                   
else
alter TABLE ApplicationForms alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveCenter' and c.name='ArchiveCenterID')                                                                                                                                 
alter TABLE ArchiveCenter add ArchiveCenterID  int Not Null default 0                                                                                                                                              
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveCenter' and c.name='ArchiveCenterTitle')                                                                                                                              
alter TABLE ArchiveCenter add ArchiveCenterTitle  nvarchar(50) Not Null default 0                                                                                                                          
                                                    
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='FolderID')                                                                                                                                        
alter TABLE ArchiveFolder add FolderID  int Not Null default 0                                                                                                                                                            
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='ParentFolderID')                                                                                                                                  
alter TABLE ArchiveFolder add ParentFolderID  int Not Null default 0                                                                                                                                                 
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='Title')                                                                                                                                           
alter TABLE ArchiveFolder add Title  nvarchar(100) Null                                                                                                                                                                      
                                  
else
alter TABLE ArchiveFolder alter column Title  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='UserID')                                                                                                                                          
alter TABLE ArchiveFolder add UserID  int Not Null default 0                                                                                                                                                              
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='Notes')                                                                                                                                           
alter TABLE ArchiveFolder add Notes  nvarchar(500) Null                                                                                                                                                                   
                                     
else
alter TABLE ArchiveFolder alter column Notes  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ArchiveFolder' and c.name='Place')                                                                                                                                           
alter TABLE ArchiveFolder add Place  nvarchar(100) Null                                                                                                                                                                    
                                    
else
alter TABLE ArchiveFolder alter column Place  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Classifications' and c.name='ID')                                                                                                                                            
alter TABLE Classifications add ID  int Not Null default 0                                                                                                                                                                     
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Classifications' and c.name='Title')                                                                                                                                         
alter TABLE Classifications add Title  nvarchar(50) Null                                                                                                                                                                       
                                
else
alter TABLE Classifications alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='DoneStatus' and c.name='DoneStatusID')                                                                                                                                       
alter TABLE DoneStatus add DoneStatusID  tinyint Not Null default 0                                                                                                                                                
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='DoneStatus' and c.name='DoneStatustitle')                                                                                                                                    
alter TABLE DoneStatus add DoneStatustitle  nvarchar(50) Not Null default 0                                                                                                                                   
                                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='EmailsID')                                                                                                                                               
alter TABLE Emails add EmailsID  int Not Null default 0                                                                                                                                                                        
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='Code')                                                                                                                                                   
alter TABLE Emails add Code  int Not Null default 0                                                                                                                                                                             
                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='Subject')                                                                                                                                                
alter TABLE Emails add Subject  nvarchar(200) Not Null default 0                                                                                                                                                       
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='SendAddress')                                                                                                                                            
alter TABLE Emails add SendAddress  nvarchar(100) Null                                                                                                                                                                    
                                     
else
alter TABLE Emails alter column SendAddress  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='ReciveAddress')                                                                                                                                          
alter TABLE Emails add ReciveAddress  nvarchar(100) Null                                                                                                                                                                 
                                      
else
alter TABLE Emails alter column ReciveAddress  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='Memo')                                                                                                                                                   
alter TABLE Emails add Memo  image Null                                                                                                                                                                                             
                           

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='AttachFile')                                                                                                                                             
alter TABLE Emails add AttachFile  image Null                                                                                                                                                                                      
                            

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='AttachFileName')                                                                                                                                         
alter TABLE Emails add AttachFileName  nvarchar(50) Null                                                                                                                                                                  
                                     
else
alter TABLE Emails alter column AttachFileName  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='Status')                                                                                                                                                 
alter TABLE Emails add Status  smallint Null                                                                                                                                                                                          
                         
else
alter TABLE Emails alter column Status  smallint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='DateEmail')                                                                                                                                              
alter TABLE Emails add DateEmail  nvarchar(10) Not Null default 0                                                                                                                                                     
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='TimeEmail')                                                                                                                                              
alter TABLE Emails add TimeEmail  nvarchar(10) Not Null default 0                                                                                                                                                     
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsAnswer')                                                                                                                                               
alter TABLE Emails add IsAnswer  bit Null                                                                                                                                                                                             
                         
else
alter TABLE Emails alter column IsAnswer  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsReciveEmail')                                                                                                                                          
alter TABLE Emails add IsReciveEmail  bit Null                                                                                                                                                                                      
                           
else
alter TABLE Emails alter column IsReciveEmail  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='UsersID')                                                                                                                                                
alter TABLE Emails add UsersID  int Not Null default 0                                                                                                                                                                         
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsRead')                                                                                                                                                 
alter TABLE Emails add IsRead  bit Null                                                                                                                                                                                                
                        
else
alter TABLE Emails alter column IsRead  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsPersonal')                                                                                                                                             
alter TABLE Emails add IsPersonal  bit Null                                                                                                                                                                                           
                         
else
alter TABLE Emails alter column IsPersonal  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsImportant')                                                                                                                                            
alter TABLE Emails add IsImportant  bit Null                                                                                                                                                                                         
                          
else
alter TABLE Emails alter column IsImportant  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='IsSecret')                                                                                                                                               
alter TABLE Emails add IsSecret  bit Null                                                                                                                                                                                              
                        
else
alter TABLE Emails alter column IsSecret  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Emails' and c.name='EmailNuFromDate')                                                                                                                                        
alter TABLE Emails add EmailNuFromDate  nvarchar(20) Null                                                                                                                                                               
                                       
else
alter TABLE Emails alter column EmailNuFromDate  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='Errorid')                                                                                                                                          
alter TABLE ErrorMessage add Errorid  bigint Not Null default 0                                                                                                                                                          
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='ErrorMessage')                                                                                                                                     
alter TABLE ErrorMessage add ErrorMessage  nvarchar(255) Null                                                                                                                                                      
                                            
else
alter TABLE ErrorMessage alter column ErrorMessage  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='ErrorDate')                                                                                                                                        
alter TABLE ErrorMessage add ErrorDate  nvarchar(10) Null                                                                                                                                                               
                                       
else
alter TABLE ErrorMessage alter column ErrorDate  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='UserCode')                                                                                                                                         
alter TABLE ErrorMessage add UserCode  int Null                                                                                                                                                                                
                                
else
alter TABLE ErrorMessage alter column UserCode  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='FarsiMessage')                                                                                                                                     
alter TABLE ErrorMessage add FarsiMessage  nvarchar(255) Null                                                                                                                                                       
                                           
else
alter TABLE ErrorMessage alter column FarsiMessage  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ErrorMessage' and c.name='ShowMessage')                                                                                                                                      
alter TABLE ErrorMessage add ShowMessage  bit Null  default (1)                                                                                                                                                      
                                          
else
alter TABLE ErrorMessage alter column ShowMessage  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Extention' and c.name='ExtentionID')                                                                                                                                         
alter TABLE Extention add ExtentionID  int Not Null default 0                                                                                                                                                             
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Extention' and c.name='ExtentionTitle')                                                                                                                                      
alter TABLE Extention add ExtentionTitle  nvarchar(200) Not Null default 0                                                                                                                                       
                                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Extention' and c.name='Extention')                                                                                                                                           
alter TABLE Extention add Extention  varchar(5) Not Null default 0                                                                                                                                                    
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Extention' and c.name='IsSystem')                                                                                                                                            
alter TABLE Extention add IsSystem  bit Not Null  default (0)                                                                                                                                                              
                                    
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldAccess' and c.name='FieldAccessID')                                                                                                                                     
alter TABLE FieldAccess add FieldAccessID  int Not Null default 0                                                                                                                                                       
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldAccess' and c.name='FieldID')                                                                                                                                           
alter TABLE FieldAccess add FieldID  int Not Null default 0                                                                                                                                                                  
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldAccess' and c.name='UserID')                                                                                                                                            
alter TABLE FieldAccess add UserID  int Not Null default 0                                                                                                                                                                  
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldAccess' and c.name='AccessTypeID')                                                                                                                                      
alter TABLE FieldAccess add AccessTypeID  tinyint Not Null default 0                                                                                                                                                
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='ID')                                                                                                                                                     
alter TABLE Fields add ID  int Not Null default 0                                                                                                                                                                                   
                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='FieldName')                                                                                                                                              
alter TABLE Fields add FieldName  nvarchar(50) Not Null default 0                                                                                                                                                     
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='TableID')                                                                                                                                                
alter TABLE Fields add TableID  int Not Null  default ((1))                                                                                                                                                                    
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='Description')                                                                                                                                            
alter TABLE Fields add Description  nvarchar(50) Null                                                                                                                                                                          
                                
else
alter TABLE Fields alter column Description  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='IsWhere')                                                                                                                                                
alter TABLE Fields add IsWhere  bit Not Null  default ((1))                                                                                                                                                                  
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='ISString')                                                                                                                                               
alter TABLE Fields add ISString  bit Not Null  default ((1))                                                                                                                                                                   
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='IsLike')                                                                                                                                                 
alter TABLE Fields add IsLike  bit Not Null  default ((1))                                                                                                                                                                       
                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='EveryLike')                                                                                                                                              
alter TABLE Fields add EveryLike  bit Not Null  default ((0))                                                                                                                                                                 
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='VisibleInGrid')                                                                                                                                          
alter TABLE Fields add VisibleInGrid  bit Not Null  default ((1))                                                                                                                                                             
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='isblob')                                                                                                                                                 
alter TABLE Fields add isblob  bit Null  default ((0))                                                                                                                                                                              
                           
else
alter TABLE Fields alter column isblob  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='FieldTypeID')                                                                                                                                            
alter TABLE Fields add FieldTypeID  int Null                                                                                                                                                                                         
                          
else
alter TABLE Fields alter column FieldTypeID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='ReferenceTableID')                                                                                                                                       
alter TABLE Fields add ReferenceTableID  int Null                                                                                                                                                                               
                               
else
alter TABLE Fields alter column ReferenceTableID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='FieldGroupID')                                                                                                                                           
alter TABLE Fields add FieldGroupID  int Null                                                                                                                                                                                        
                          
else
alter TABLE Fields alter column FieldGroupID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Fields' and c.name='isboolean')                                                                                                                                              
alter TABLE Fields add isboolean  bit Null                                                                                                                                                                                             
                        
else
alter TABLE Fields alter column isboolean  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldType' and c.name='FieldTypeID')                                                                                                                                         
alter TABLE FieldType add FieldTypeID  int Not Null default 0                                                                                                                                                             
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FieldType' and c.name='FieldTypeTitle')                                                                                                                                      
alter TABLE FieldType add FieldTypeTitle  nvarchar(50) Not Null default 0                                                                                                                                         
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='FollowUPID')                                                                                                                                           
alter TABLE FollowUp add FollowUPID  int Not Null default 0                                                                                                                                                               
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='StartFollowUpID')                                                                                                                                      
alter TABLE FollowUp add StartFollowUpID  int Null                                                                                                                                                                             
                                
else
alter TABLE FollowUp alter column StartFollowUpID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='FollowUPTypeID')                                                                                                                                       
alter TABLE FollowUp add FollowUPTypeID  int Not Null default 0                                                                                                                                                       
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='DoneStatusID')                                                                                                                                         
alter TABLE FollowUp add DoneStatusID  tinyint Not Null  default ((1))                                                                                                                                              
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='UserID')                                                                                                                                               
alter TABLE FollowUp add UserID  int Not Null default 0                                                                                                                                                                      
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='Comment')                                                                                                                                              
alter TABLE FollowUp add Comment  nvarchar(255) Null                                                                                                                                                                     
                                      
else
alter TABLE FollowUp alter column Comment  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='ToDoDate')                                                                                                                                             
alter TABLE FollowUp add ToDoDate  char(10) Null                                                                                                                                                                             
                                  
else
alter TABLE FollowUp alter column ToDoDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='ToDoTime')                                                                                                                                             
alter TABLE FollowUp add ToDoTime  char(5) Null                                                                                                                                                                                
                                
else
alter TABLE FollowUp alter column ToDoTime  char(5)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='DoneComment')                                                                                                                                          
alter TABLE FollowUp add DoneComment  nvarchar(255) Null                                                                                                                                                             
                                          
else
alter TABLE FollowUp alter column DoneComment  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='HasAlarm')                                                                                                                                             
alter TABLE FollowUp add HasAlarm  bit Null                                                                                                                                                                                        
                            
else
alter TABLE FollowUp alter column HasAlarm  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUp' and c.name='Letterid')                                                                                                                                             
alter TABLE FollowUp add Letterid  int Null  default ((0))                                                                                                                                                                     
                                
else
alter TABLE FollowUp alter column Letterid  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUpType' and c.name='FollowUpTypeID')                                                                                                                                   
alter TABLE FollowUpType add FollowUpTypeID  int Not Null default 0                                                                                                                                               
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FollowUpType' and c.name='FollowUpTypeTitle')                                                                                                                                
alter TABLE FollowUpType add FollowUpTypeTitle  nvarchar(50) Not Null default 0                                                                                                                           
                                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='ID')                                                                                                                                          
alter TABLE FromOrganizations add ID  int Not Null default 0                                                                                                                                                              
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='Title')                                                                                                                                       
alter TABLE FromOrganizations add Title  nvarchar(100) Null                                                                                                                                                              
                                      
else
alter TABLE FromOrganizations alter column Title  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='ParentID')                                                                                                                                    
alter TABLE FromOrganizations add ParentID  int Not Null default 0                                                                                                                                                   
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='Phone')                                                                                                                                       
alter TABLE FromOrganizations add Phone  nvarchar(30) Null                                                                                                                                                            
                                         
else
alter TABLE FromOrganizations alter column Phone  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='Fax')                                                                                                                                         
alter TABLE FromOrganizations add Fax  nvarchar(30) Null                                                                                                                                                                
                                       
else
alter TABLE FromOrganizations alter column Fax  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='Email')                                                                                                                                       
alter TABLE FromOrganizations add Email  nvarchar(30) Null                                                                                                                                                              
                                       
else
alter TABLE FromOrganizations alter column Email  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='ResponsibleStaffer')                                                                                                                       
   
alter TABLE FromOrganizations add ResponsibleStaffer  nvarchar(50) Null                                                                                                                                        
                                                
else
alter TABLE FromOrganizations alter column ResponsibleStaffer  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='IsActive')                                                                                                                                    
alter TABLE FromOrganizations add IsActive  bit Null  default (1)                                                                                                                                                       
                                       
else
alter TABLE FromOrganizations alter column IsActive  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='PreCode')                                                                                                                                     
alter TABLE FromOrganizations add PreCode  nvarchar(50) Null                                                                                                                                                         
                                          
else
alter TABLE FromOrganizations alter column PreCode  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='IsInnerOrg')                                                                                                                                  
alter TABLE FromOrganizations add IsInnerOrg  bit Not Null  default (1)                                                                                                                                            
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='Code')                                                                                                                                        
alter TABLE FromOrganizations add Code  nvarchar(50) Null  default (1)                                                                                                                                           
                                              
else
alter TABLE FromOrganizations alter column Code  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='FromOrganizations' and c.name='UniqueID')                                                                                                                                    
alter TABLE FromOrganizations add UniqueID  bigint Null                                                                                                                                                                    
                                    
else
alter TABLE FromOrganizations alter column UniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='ImageDataID')                                                                                                                                         
alter TABLE ImageData add ImageDataID  int Not Null default 0                                                                                                                                                        
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='Data')                                                                                                                                                
alter TABLE ImageData add Data  image Null                                                                                                                                                                                       
                              

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='FileName')                                                                                                                                            
alter TABLE ImageData add FileName  nvarchar(50) Null                                                                                                                                                                    
                                      
else
alter TABLE ImageData alter column FileName  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='TableName')                                                                                                                                           
alter TABLE ImageData add TableName  nvarchar(50) Not Null default 0                                                                                                                                           
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='TableID')                                                                                                                                             
alter TABLE ImageData add TableID  int Not Null default 0                                                                                                                                                                 
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ImageData' and c.name='Tag')                                                                                                                                                 
alter TABLE ImageData add Tag  int Null                                                                                                                                                                                              
                          
else
alter TABLE ImageData alter column Tag  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='LetterID')                                                                                                                                               
alter TABLE Letter add LetterID  int Not Null default 0                                                                                                                                                                        
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='IndicatorID')                                                                                                                                            
alter TABLE Letter add IndicatorID  int Not Null default 0                                                                                                                                                                    
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='MYear')                                                                                                                                                  
alter TABLE Letter add MYear  tinyint Not Null default 0                                                                                                                                                                      
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='SecretariatID')
alter TABLE Letter add SecretariatID  int Not Null  default ((1))
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Letter_Type')
alter TABLE Letter add Letter_Type  int Not Null  default ((1))


GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='letterformat')                                                                                                                                           
alter TABLE Letter add letterformat  int Not Null  default ((1)) 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='IncommingNO')                                                                                                                                            
alter TABLE Letter add IncommingNO  nvarchar(50) Null                                                                                                                                                                     
                                     
else
alter TABLE Letter alter column IncommingNO  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Incommingdate')                                                                                                                                          
alter TABLE Letter add Incommingdate  nvarchar(10) Null                                                                                                                                                                  
                                      
else
alter TABLE Letter alter column Incommingdate  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='CenterNo')                                                                                                                                               
alter TABLE Letter add CenterNo  nvarchar(50) Null                                                                                                                                                                           
                                  
else
alter TABLE Letter alter column CenterNo  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='CenterDate')                                                                                                                                             
alter TABLE Letter add CenterDate  char(10) Null                                                                                                                                                                               
                                
else
alter TABLE Letter alter column CenterDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='FromOrgID')                                                                                                                                              
alter TABLE Letter add FromOrgID  int Not Null  default ((-1))                                                                                                                                                            
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='ToOrgID')                                                                                                                                                
alter TABLE Letter add ToOrgID  int Not Null  default ((0))                                                                                                                                                                  
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Signerid')                                                                                                                                               
alter TABLE Letter add Signerid  nvarchar(50) Null                                                                                                                                                                              
                               
else
alter TABLE Letter alter column Signerid  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='ClassificationID')
alter TABLE Letter add ClassificationID  int Not Null  default ((1))

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UrgencyID')
alter TABLE Letter add UrgencyID  int Not Null  default ((1))                                                                                                                                                              
                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Memo')                                                                                                                                                   
alter TABLE Letter add Memo  nvarchar(2000) Null                                                                                                                                                                             
                                  
else
alter TABLE Letter alter column Memo  nvarchar(2000)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='AttachTitle')                                                                                                                                            
alter TABLE Letter add AttachTitle  nvarchar(255) Null
else
alter TABLE Letter alter column AttachTitle  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='NumberOfAttachPages')                                                                                                                                    
alter TABLE Letter add NumberOfAttachPages  smallint Null  default ((1))                                                                                                                                          
                                             
else
alter TABLE Letter alter column NumberOfAttachPages  smallint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='NumberOfPage')                                                                                                                                           
alter TABLE Letter add NumberOfPage  tinyint Not Null  default ((1))                                                                                                                                                 
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='ReceiveTypeID')
alter TABLE Letter add ReceiveTypeID  int Not Null  default ((1)) 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UserID')                                                                                                                                                 
alter TABLE Letter add UserID  int Not Null  default ((0))                                                                                                                                                                    
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='RetroactionNo')                                                                                                                                          
alter TABLE Letter add RetroactionNo  nvarchar(50) Null                                                                                                                                                                    
                                    
else
alter TABLE Letter alter column RetroactionNo  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UserMemo')                                                                                                                                               
alter TABLE Letter add UserMemo  nvarchar(255) Null                                                                                                                                                                        
                                    
else
alter TABLE Letter alter column UserMemo  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='RegistrationDate')                                                                                                                                       
alter TABLE Letter add RegistrationDate  char(10) Not Null default 0                                                                                                                                                 
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='RegistrationTime')                                                                                                                                       
alter TABLE Letter add RegistrationTime  varchar(5) Not Null default 0                                                                                                                                              
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='FollowLetterNo')                                                                                                                                         
alter TABLE Letter add FollowLetterNo  nvarchar(50) Null                                                                                                                                                                   
                                    
else
alter TABLE Letter alter column FollowLetterNo  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='ToStaffer')                                                                                                                                              
alter TABLE Letter add ToStaffer  nvarchar(50) Null                                                                                                                                                                           
                                 
else
alter TABLE Letter alter column ToStaffer  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='SentLetterID')                                                                                                                                           
alter TABLE Letter add SentLetterID  int Null                                                                                                                                                                                       
                           
else
alter TABLE Letter alter column SentLetterID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='TemplateID')                                                                                                                                             
alter TABLE Letter add TemplateID  int Null                                                                                                                                                                                         
                           
else
alter TABLE Letter alter column TemplateID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='HeaderID')                                                                                                                                               
alter TABLE Letter add HeaderID  int Null                                                                                                                                                                                            
                          
else
alter TABLE Letter alter column HeaderID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='LetterRecommites')                                                                                                                                       
alter TABLE Letter add LetterRecommites  nvarchar(500) Null                                                                                                                                                            
                                        
else
alter TABLE Letter alter column LetterRecommites  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='PreCode')                                                                                                                                                
alter TABLE Letter add PreCode  nvarchar(50) Null                                                                                                                                                                             
                                 
else
alter TABLE Letter alter column PreCode  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='fromstaffer')                                                                                                                                            
alter TABLE Letter add fromstaffer  nvarchar(50) Null                                                                                                                                                                        
                                  
else
alter TABLE Letter alter column fromstaffer  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Finalized')                                                                                                                                              
alter TABLE Letter add Finalized  bit Not Null  default ((1))                                                                                                                                                                  
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='SendStatusID')
alter TABLE Letter add SendStatusID  int Not Null  default ((1)) 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='LastUpdate')                                                                                                                                             
alter TABLE Letter add LastUpdate  datetime Not Null  default (getdate())                                                                                                                                        
                                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UserTableID')                                                                                                                                            
alter TABLE Letter add UserTableID  int Null                                                                                                                                                                                        
                           
else
alter TABLE Letter alter column UserTableID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UniqueID')                                                                                                                                               
alter TABLE Letter add UniqueID  bigint Null                                                                                                                                                                                        
                           
else
alter TABLE Letter alter column UniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='Archived')                                                                                                                                               
alter TABLE Letter add Archived  bit Not Null  default ((0))                                                                                                                                                                 
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='SubjectDescription')                                                                                                                                     
alter TABLE Letter add SubjectDescription  nvarchar(255) Null                                                                                                                                                           
                                       
else
alter TABLE Letter alter column SubjectDescription  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='SubjectID')                                                                                                                                              
alter TABLE Letter add SubjectID  int Null                                                                                                                                                                                            
                         
else
alter TABLE Letter alter column SubjectID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='LatestActionTypeID')                                                                                                                                     
alter TABLE Letter add LatestActionTypeID  int Null   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='LatestActionReason')                                                                                                                                     
alter TABLE Letter add LatestActionReason  nvarchar(255) Null                                                                                                                                                         
                                         
else
alter TABLE Letter alter column LatestActionReason  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='DeadLineDate')                                                                                                                                           
alter TABLE Letter add DeadLineDate  char(10) Null                                                                                                                                                                            
                                 
else
alter TABLE Letter alter column DeadLineDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='ActionTypeID')                                                                                                                                           
alter TABLE Letter add ActionTypeID  int Not Null  default ((1))                                                                                                                                                          
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='UserTableID2')                                                                                                                                           
alter TABLE Letter add UserTableID2  int Null                                                                                                                                                                                      
                            
else
alter TABLE Letter alter column UserTableID2  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Letter' and c.name='EmailNuFromDate')                                                                                                                                        
alter TABLE Letter add EmailNuFromDate  nvarchar(20) Null                                                                                                                                                               
                                       
else
alter TABLE Letter alter column EmailNuFromDate  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='LetterArchiveID')                                                                                                                          
 
alter TABLE LetterArchiveFolder add LetterArchiveID  int Not Null default 0                                                                                                                                      
                                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='ArchiveFolderID')                                                                                                                          
 
alter TABLE LetterArchiveFolder add ArchiveFolderID  int Not Null default 0                                                                                                                                      
                                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='LetterID')                                                                                                                                  
alter TABLE LetterArchiveFolder add LetterID  int Not Null default 0                                                                                                                                                  
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='ArchiveDate')                                                                                                                               
alter TABLE LetterArchiveFolder add ArchiveDate  char(10) Not Null default 0                                                                                                                                  
                                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='Page')                                                                                                                                      
alter TABLE LetterArchiveFolder add Page  int Null                                                                                                                                                                              
                               
else
alter TABLE LetterArchiveFolder alter column Page  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='ArchiveNotes')                                                                                                                              
alter TABLE LetterArchiveFolder add ArchiveNotes  nvarchar(50) Null                                                                                                                                               
                                             
else
alter TABLE LetterArchiveFolder alter column ArchiveNotes  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterArchiveFolder' and c.name='UserID')                                                                                                                                    
alter TABLE LetterArchiveFolder add UserID  int Not Null  default (0)                                                                                                                                                 
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='LetterDataID')                                                                                                                                       
alter TABLE LetterData add LetterDataID  int Not Null default 0                                                                                                                                                         
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='LetterID')                                                                                                                                           
alter TABLE LetterData add LetterID  int Not Null default 0                                                                                                                                                                 
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='PageNumber')                                                                                                                                         
alter TABLE LetterData add PageNumber  tinyint Not Null  default (0)                                                                                                                                                
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='Image')                                                                                                                                              
alter TABLE LetterData add Image  image Null                                                                                                                                                                                     
                              

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='extention')                                                                                                                                          
alter TABLE LetterData add extention  tinyint Not Null  default (1)                                                                                                                                                     
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='Description')                                                                                                                                        
alter TABLE LetterData add Description  nvarchar(200) Null                                                                                                                                                               
                                      
else
alter TABLE LetterData alter column Description  nvarchar(200)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='LastUpdate')                                                                                                                                         
alter TABLE LetterData add LastUpdate  datetime Null  default (getdate())                                                                                                                                       
                                               
else
alter TABLE LetterData alter column LastUpdate  datetime  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='UniqueID')                                                                                                                                           
alter TABLE LetterData add UniqueID  bigint Null                                                                                                                                                                                 
                              
else
alter TABLE LetterData alter column UniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterData' and c.name='ListItemsID')                                                                                                                                        
alter TABLE LetterData add ListItemsID  int Null                                                                                                                                                                                  
                             
else
alter TABLE LetterData alter column ListItemsID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='LetterFieldValueID')                                                                                                                           
alter TABLE LetterFieldValue add LetterFieldValueID  int Not Null default 0                                                                                                                                        
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='LetterID')                                                                                                                                     
alter TABLE LetterFieldValue add LetterID  int Not Null default 0                                                                                                                                                        
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='FieldID')                                                                                                                                      
alter TABLE LetterFieldValue add FieldID  int Not Null default 0                                                                                                                                                           
                                    
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='FieldValue')                                                                                                                                   
alter TABLE LetterFieldValue add FieldValue  nvarchar(2000) Null                                                                                                                                                       
                                        
else
alter TABLE LetterFieldValue alter column FieldValue  nvarchar(2000)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='uniqueID')                                                                                                                                     
alter TABLE LetterFieldValue add uniqueID  bigint Null                                                                                                                                                                         
                                
else
alter TABLE LetterFieldValue alter column uniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='LastUpdate')                                                                                                                                   
alter TABLE LetterFieldValue add LastUpdate  datetime Null  default (getdate())                                                                                                                               
                                                 
else
alter TABLE LetterFieldValue alter column LastUpdate  datetime  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='InsertUserID')                                                                                                                                 
alter TABLE LetterFieldValue add InsertUserID  int Not Null  default (0)                                                                                                                                             
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFieldValue' and c.name='FormOrder')                                                                                                                                    
alter TABLE LetterFieldValue add FormOrder  tinyint Not Null  default (1)                                                                                                                                           
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFormats' and c.name='Code')                                                                                                                                            
alter TABLE LetterFormats add Code  int Not Null default 0                                                                                                                                                                
                                     

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterFormats' and c.name='Title')                                                                                                                                           
alter TABLE LetterFormats add Title  nvarchar(50) Null                                                                                                                                                                       
                                  
else
alter TABLE LetterFormats alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterRelation' and c.name='LetterRelationID')                                                                                                                               
alter TABLE LetterRelation add LetterRelationID  int Not Null default 0                                                                                                                                              
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterRelation' and c.name='MainLetterID')                                                                                                                                   
alter TABLE LetterRelation add MainLetterID  int Not Null default 0                                                                                                                                                    
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterRelation' and c.name='SubLetterID')                                                                                                                                    
alter TABLE LetterRelation add SubLetterID  int Not Null default 0                                                                                                                                                     
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterRelation' and c.name='Ord')                                                                                                                                            
alter TABLE LetterRelation add Ord  tinyint Not Null  default (1)                                                                                                                                                         
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTemplate' and c.name='ID')                                                                                                                                             
alter TABLE LetterTemplate add ID  int Not Null default 0                                                                                                                                                                   
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTemplate' and c.name='Document')                                                                                                                                       
alter TABLE LetterTemplate add Document  image Null                                                                                                                                                                        
                                    

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTemplate' and c.name='Title')                                                                                                                                          
alter TABLE LetterTemplate add Title  nvarchar(50) Null                                                                                                                                                                     
                                   
else
alter TABLE LetterTemplate alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTemplate' and c.name='validHeader')                                                                                                                                    
alter TABLE LetterTemplate add validHeader  smallint Null                                                                                                                                                                  
                                    
else
alter TABLE LetterTemplate alter column validHeader  smallint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTemplate' and c.name='TemplateGroupID')                                                                                                                               
 
alter TABLE LetterTemplate add TemplateGroupID  int Not Null  default (1)                                                                                                                                       
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterText' and c.name='LetterID')                                                                                                                                           
alter TABLE LetterText add LetterID  int Null                                                                                                                                                                                       
                           
else
alter TABLE LetterText alter column LetterID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterText' and c.name='LetterFormat')                                                                                                                                       
alter TABLE LetterText add LetterFormat  int Not Null  default (1)                                                                                                                                                      
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterText' and c.name='TypeText')                                                                                                                                           
alter TABLE LetterText add TypeText  ntext Null                                                                                                                                                                                
                                

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterText' and c.name='Html')                                                                                                                                               
alter TABLE LetterText add Html  ntext Null                                                                                                                                                                                         
                           

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTypes' and c.name='ID')                                                                                                                                                
alter TABLE LetterTypes add ID  int Not Null default 0                                                                                                                                                                        
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTypes' and c.name='Title')                                                                                                                                             
alter TABLE LetterTypes add Title  nvarchar(50) Null                                                                                                                                                                          
                                 
else
alter TABLE LetterTypes alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LetterTypes' and c.name='PreCode')                                                                                                                                           
alter TABLE LetterTypes add PreCode  nvarchar(10) Null                                                                                                                                                                   
                                      
else
alter TABLE LetterTypes alter column PreCode  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LifeTips' and c.name='id')                                                                                                                                                   
alter TABLE LifeTips add id  int Not Null default 0                                                                                                                                                                                 
                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='LifeTips' and c.name='title')                                                                                                                                                
alter TABLE LifeTips add title  nvarchar(150) Null                                                                                                                                                                                
                             
else
alter TABLE LifeTips alter column title  nvarchar(150)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='ListItemsID')                                                                                                                                         
alter TABLE ListItems add ListItemsID  int Not Null default 0                                                                                                                                                               
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='ListID')                                                                                                                                              
alter TABLE ListItems add ListID  tinyint Not Null default 0                                                                                                                                                                  
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='KeyValue')                                                                                                                                            
alter TABLE ListItems add KeyValue  int Not Null default 0                                                                                                                                                                  
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='Title')                                                                                                                                               
alter TABLE ListItems add Title  nvarchar(50) Null                                                                                                                                                                               
                              
else
alter TABLE ListItems alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='Notes')                                                                                                                                               
alter TABLE ListItems add Notes  nvarchar(255) Null                                                                                                                                                                           
                                 
else
alter TABLE ListItems alter column Notes  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ListItems' and c.name='UsersID')                                                                                                                                             
alter TABLE ListItems add UsersID  int Null                                                                                                                                                                                          
                          
else
alter TABLE ListItems alter column UsersID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='NewsID')                                                                                                                                                   
alter TABLE News add NewsID  int Not Null default 0                                                                                                                                                                          
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='Code')                                                                                                                                                     
alter TABLE News add Code  int Not Null default 0                                                                                                                                                                              
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='Title')                                                                                                                                                    
alter TABLE News add Title  nvarchar(300) Not Null default 0                                                                                                                                                             
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='Memo')                                                                                                                                                     
alter TABLE News add Memo  nvarchar(3000) Null                                                                                                                                                                              
                                   
else
alter TABLE News alter column Memo  nvarchar(3000)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='UrgenceisID')                                                                                                                                              
alter TABLE News add UrgenceisID  int Null  default ((1))
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='DateAnnounce')                                                                                                                                             
alter TABLE News add DateAnnounce  nvarchar(10) Null                                                                                                                                                                    
                                       
else
alter TABLE News alter column DateAnnounce  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='TimeAnnounce')                                                                                                                                             
alter TABLE News add TimeAnnounce  nvarchar(10) Null                                                                                                                                                                    
                                       
else
alter TABLE News alter column TimeAnnounce  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='DateExpire')                                                                                                                                               
alter TABLE News add DateExpire  nvarchar(10) Null                                                                                                                                                                          
                                   
else
alter TABLE News alter column DateExpire  nvarchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='News' and c.name='UserID')                                                                                                                                                   
alter TABLE News add UserID  int Not Null default 0                                                                                                                                                                            
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroup' and c.name='NewsGroupID')                                                                                                                                         
alter TABLE NewsGroup add NewsGroupID  int Not Null default 0                                                                                                                                                       
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroup' and c.name='Title')                                                                                                                                               
alter TABLE NewsGroup add Title  nvarchar(50) Not Null default 0                                                                                                                                                     
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroup' and c.name='Descript')                                                                                                                                            
alter TABLE NewsGroup add Descript  nvarchar(300) Null                                                                                                                                                                   
                                      
else
alter TABLE NewsGroup alter column Descript  nvarchar(300)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroup' and c.name='UsersID')                                                                                                                                             
alter TABLE NewsGroup add UsersID  int Not Null default 0                                                                                                                                                                
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroupUsers' and c.name='NewsGroupUsersID')                                                                                                                         
      
alter TABLE NewsGroupUsers add NewsGroupUsersID  int Not Null default 0                                                                                                                                     
                                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroupUsers' and c.name='UsersID')                                                                                                                                        
alter TABLE NewsGroupUsers add UsersID  int Not Null default 0                                                                                                                                                       
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsGroupUsers' and c.name='NewsGroupID')                                                                                                                                  
  
alter TABLE NewsGroupUsers add NewsGroupID  int Not Null default 0                                                                                                                                              
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsUsers' and c.name='NewsUsersID')                                                                                                                                         
alter TABLE NewsUsers add NewsUsersID  int Not Null default 0                                                                                                                                                        
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsUsers' and c.name='NewsID')                                                                                                                                              
alter TABLE NewsUsers add NewsID  int Not Null default 0                                                                                                                                                                 
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsUsers' and c.name='UsersID')                                                                                                                                             
alter TABLE NewsUsers add UsersID  int Not Null default 0                                                                                                                                                                 
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsUsers' and c.name='IsRead')                                                                                                                                              
alter TABLE NewsUsers add IsRead  bit Null                                                                                                                                                                                        
                             
else
alter TABLE NewsUsers alter column IsRead  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='NewsUsers' and c.name='NotShow')                                                                                                                                             
alter TABLE NewsUsers add NotShow  bit Null                                                                                                                                                                                     
                               
else
alter TABLE NewsUsers alter column NotShow  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ParaphTemplate' and c.name='ParaphTemplateID')                                                                                                                           
    
alter TABLE ParaphTemplate add ParaphTemplateID  int Not Null default 0                                                                                                                                        
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ParaphTemplate' and c.name='UserID')                                                                                                                                         
alter TABLE ParaphTemplate add UserID  int Not Null default 0                                                                                                                                                          
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ParaphTemplate' and c.name='OrderID')                                                                                                                                        
alter TABLE ParaphTemplate add OrderID  tinyint Not Null default 0                                                                                                                                                  
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ParaphTemplate' and c.name='Title')                                                                                                                                          
alter TABLE ParaphTemplate add Title  nvarchar(50) Not Null default 0                                                                                                                                              
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ParaphTemplate' and c.name='Paraph')                                                                                                                                         
alter TABLE ParaphTemplate add Paraph  nvarchar(500) Not Null default 0                                                                                                                                       
                                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='PhoneID')                                                                                                                                                 
alter TABLE Phone add PhoneID  int Not Null default 0                                                                                                                                                                        
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Code')                                                                                                                                                    
alter TABLE Phone add Code  int Not Null default 0                                                                                                                                                                             
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Title')                                                                                                                                                   
alter TABLE Phone add Title  nvarchar(50) Not Null default 0                                                                                                                                                              
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='PersonName')                                                                                                                                              
alter TABLE Phone add PersonName  nvarchar(50) Null                                                                                                                                                                      
                                      
else
alter TABLE Phone alter column PersonName  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Tel1')                                                                                                                                                    
alter TABLE Phone add Tel1  nvarchar(20) Null                                                                                                                                                                                    
                              
else
alter TABLE Phone alter column Tel1  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Tel2')                                                                                                                                                    
alter TABLE Phone add Tel2  nvarchar(20) Null                                                                                                                                                                                    
                              
else
alter TABLE Phone alter column Tel2  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Mobile')                                                                                                                                                  
alter TABLE Phone add Mobile  nvarchar(20) Null                                                                                                                                                                                
                                
else
alter TABLE Phone alter column Mobile  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Fax')                                                                                                                                                     
alter TABLE Phone add Fax  nvarchar(20) Null                                                                                                                                                                                    
                               
else
alter TABLE Phone alter column Fax  nvarchar(20)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Email')                                                                                                                                                   
alter TABLE Phone add Email  nvarchar(50) Null                                                                                                                                                                                  
                               
else
alter TABLE Phone alter column Email  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Internet')                                                                                                                                                
alter TABLE Phone add Internet  nvarchar(500) Null                                                                                                                                                                           
                                  
else
alter TABLE Phone alter column Internet  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Address')                                                                                                                                                 
alter TABLE Phone add Address  nvarchar(500) Null                                                                                                                                                                           
                                   
else
alter TABLE Phone alter column Address  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='ZipCode')                                                                                                                                                 
alter TABLE Phone add ZipCode  nvarchar(30) Null                                                                                                                                                                             
                                  
else
alter TABLE Phone alter column ZipCode  nvarchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='Descript')                                                                                                                                                
alter TABLE Phone add Descript  nvarchar(500) Null                                                                                                                                                                           
                                  
else
alter TABLE Phone alter column Descript  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='PhoneGroupID')                                                                                                                                            
alter TABLE Phone add PhoneGroupID  int Null                                                                                                                                                                                    
                               
else
alter TABLE Phone alter column PhoneGroupID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='UsersID')                                                                                                                                                 
alter TABLE Phone add UsersID  int Not Null default 0                                                                                                                                                                         
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Phone' and c.name='IsPublic')                                                                                                                                                
alter TABLE Phone add IsPublic  bit Null                                                                                                                                                                                               
                        
else
alter TABLE Phone alter column IsPublic  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='PhoneGroup' and c.name='PhoneGroupID')                                                                                                                                       
alter TABLE PhoneGroup add PhoneGroupID  int Not Null default 0                                                                                                                                                    
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='PhoneGroup' and c.name='Code')                                                                                                                                               
alter TABLE PhoneGroup add Code  int Not Null default 0                                                                                                                                                                   
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='PhoneGroup' and c.name='Title')                                                                                                                                              
alter TABLE PhoneGroup add Title  nvarchar(50) Not Null default 0                                                                                                                                                    
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='PhoneGroup' and c.name='UsersID')                                                                                                                                            
alter TABLE PhoneGroup add UsersID  int Not Null default 0                                                                                                                                                               
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Receipt' and c.name='ReceiptID')                                                                                                                                             
alter TABLE Receipt add ReceiptID  int Not Null default 0                                                                                                                                                                    
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Receipt' and c.name='Title')                                                                                                                                                 
alter TABLE Receipt add Title  nvarchar(50) Null                                                                                                                                                                                  
                             
else
alter TABLE Receipt alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Receipt' and c.name='Memo')                                                                                                                                                  
alter TABLE Receipt add Memo  nvarchar(2000) Null                                                                                                                                                                           
                                   
else
alter TABLE Receipt alter column Memo  nvarchar(2000)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Receipt' and c.name='Descript')                                                                                                                                              
alter TABLE Receipt add Descript  nvarchar(500) Null                                                                                                                                                                         
                                  
else
alter TABLE Receipt alter column Descript  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReceiveTypes' and c.name='ID')                                                                                                                                               
alter TABLE ReceiveTypes add ID  int Not Null default 0                                                                                                                                                                     
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReceiveTypes' and c.name='Title')                                                                                                                                            
alter TABLE ReceiveTypes add Title  nvarchar(50) Null                                                                                                                                                                       
                                   
else
alter TABLE ReceiveTypes alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteData' and c.name='RecommiteDataID')                                                                                                                             
    
alter TABLE RecommiteData add RecommiteDataID  int Not Null default 0                                                                                                                                          
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteData' and c.name='RecommiteID')                                                                                                                                     
alter TABLE RecommiteData add RecommiteID  int Not Null default 0                                                                                                                                                 
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteData' and c.name='Image')                                                                                                                                           
alter TABLE RecommiteData add Image  image Null                                                                                                                                                                             
                                   

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteData' and c.name='extention')                                                                                                                                       
alter TABLE RecommiteData add extention  tinyint Not Null default 0                                                                                                                                                 
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteData' and c.name='UniqueID')                                                                                                                                        
alter TABLE RecommiteData add UniqueID  bigint Null                                                                                                                                                                         
                                   
else
alter TABLE RecommiteData alter column UniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='RecommiteID')                                                                                                                                        
alter TABLE ReCommites add RecommiteID  int Not Null default 0                                                                                                                                                       
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='LetterID')                                                                                                                                           
alter TABLE ReCommites add LetterID  int Not Null default 0                                                                                                                                                              
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='ID')                                                                                                                                                 
alter TABLE ReCommites add ID  smallint Not Null default 0                                                                                                                                                                
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='Type')                                                                                                                                               
alter TABLE ReCommites add Type  tinyint Not Null  default ((1))                                                                                                                                                       
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='ParentId')                                                                                                                                           
alter TABLE ReCommites add ParentId  smallint Not Null  default ((0))                                                                                                                                                
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='OrgID')                                                                                                                                              
alter TABLE ReCommites add OrgID  int Not Null default 0                                                                                                                                                                  
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='Paraph')                                                                                                                                             
alter TABLE ReCommites add Paraph  nvarchar(500) Null                                                                                                                                                                   
                                       
else
alter TABLE ReCommites alter column Paraph  nvarchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='RecommiteDate')                                                                                                                                      
alter TABLE ReCommites add RecommiteDate  varchar(10) Not Null default 0                                                                                                                                    
                                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='UserID')
alter TABLE ReCommites add UserID  int Not Null  default (1) 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='IsCopy')                                                                                                                                             
alter TABLE ReCommites add IsCopy  bit Null                                                                                                                                                                                      
                              
else
alter TABLE ReCommites alter column IsCopy  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='Proceeded')                                                                                                                                          
alter TABLE ReCommites add Proceeded  bit Not Null  default ((0))                                                                                                                                                    
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='ProceedDate')                                                                                                                                        
alter TABLE ReCommites add ProceedDate  varchar(10) Null                                                                                                                                                              
                                         
else
alter TABLE ReCommites alter column ProceedDate  varchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='staffmemo')                                                                                                                                          
alter TABLE ReCommites add staffmemo  nvarchar(255) Null                                                                                                                                                              
                                         
else
alter TABLE ReCommites alter column staffmemo  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='viewdate')                                                                                                                                           
alter TABLE ReCommites add viewdate  char(10) Null                                                                                                                                                                         
                                    
else
alter TABLE ReCommites alter column viewdate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='OrgStaff')                                                                                                                                           
alter TABLE ReCommites add OrgStaff  nvarchar(50) Null                                                                                                                                                                   
                                      
else
alter TABLE ReCommites alter column OrgStaff  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='DeadLineDate')                                                                                                                                       
alter TABLE ReCommites add DeadLineDate  char(10) Null                                                                                                                                                                  
                                       
else
alter TABLE ReCommites alter column DeadLineDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='LastUpdate')                                                                                                                                         
alter TABLE ReCommites add LastUpdate  datetime Null  default (getdate())                                                                                                                                     
                                                 
else
alter TABLE ReCommites alter column LastUpdate  datetime  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='UniqueID')                                                                                                                                           
alter TABLE ReCommites add UniqueID  bigint Null                                                                                                                                                                              
                                 
else
alter TABLE ReCommites alter column UniqueID  bigint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='ActionTypeID')
alter TABLE ReCommites add ActionTypeID  int Null  default ((1))
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='DeadLineToint')                                                                                                                                      
alter TABLE ReCommites add DeadLineToint  int Null                                                                                                                                                                           
                                  
else
alter TABLE ReCommites alter column DeadLineToint  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='IsAnswer')                                                                                                                                           
alter TABLE ReCommites add IsAnswer  bit Null                                                                                                                                                                                   
                               
else
alter TABLE ReCommites alter column IsAnswer  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='ISFollowup')                                                                                                                                         
alter TABLE ReCommites add ISFollowup  bit Null
else
alter TABLE ReCommites alter column ISFollowup  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReCommites' and c.name='Finallized')
alter TABLE ReCommites add Finallized bit not null default 1
GO

if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteTypes' and c.name='ID')                                                                                                                                             
alter TABLE RecommiteTypes add ID  tinyint Not Null default 0                                                                                                                                                           
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteTypes' and c.name='Title')                                                                                                                                          
alter TABLE RecommiteTypes add Title  nvarchar(50) Null                                                                                                                                                                   
                                     
else
alter TABLE RecommiteTypes alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteTypes' and c.name='ReceiveMode')                                                                                                                                   
 
alter TABLE RecommiteTypes add ReceiveMode  bit Null                                                                                                                                                                     
                                      
else
alter TABLE RecommiteTypes alter column ReceiveMode  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RecommiteTypes' and c.name='InnerOrganize')                                                                                                                                 
 
alter TABLE RecommiteTypes add InnerOrganize  bit Null                                                                                                                                                                   
                                      
else
alter TABLE RecommiteTypes alter column InnerOrganize  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReferenceTableData' and c.name='ReferenceTableDataID')                                                                                                             
          
alter TABLE ReferenceTableData add ReferenceTableDataID  int Not Null default 0                                                                                                                          
                                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReferenceTableData' and c.name='TableID')                                                                                                                                    
alter TABLE ReferenceTableData add TableID  int Not Null default 0                                                                                                                                                  
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReferenceTableData' and c.name='DataID')                                                                                                                                     
alter TABLE ReferenceTableData add DataID  tinyint Not Null default 0                                                                                                                                             
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='ReferenceTableData' and c.name='DataTitle')                                                                                                                                  
alter TABLE ReferenceTableData add DataTitle  nvarchar(50) Not Null default 0                                                                                                                               
                                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='RelatedSecretariatID')                                                                                                                  
    
alter TABLE RelatedSecretariats add RelatedSecretariatID  int Not Null default 0                                                                                                                              
                                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='RelatedSecretariatTitle')                                                                                                               
    
alter TABLE RelatedSecretariats add RelatedSecretariatTitle  nvarchar(50) Not Null default 0                                                                                                          
                                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='DestinationOrgID_inSource')                                                                                                        
         
alter TABLE RelatedSecretariats add DestinationOrgID_inSource  int Not Null default 0                                                                                                                    
                                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='DestinationSecID')                                                                                                                        
  
alter TABLE RelatedSecretariats add DestinationSecID  int Not Null default 0                                                                                                                                    
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='DestinationServerIP')                                                                                                                   
    
alter TABLE RelatedSecretariats add DestinationServerIP  varchar(30) Null                                                                                                                                       
                                               
else
alter TABLE RelatedSecretariats alter column DestinationServerIP  varchar(30)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='RelatedSecretariats' and c.name='DestinationServerDB')                                                                                                                  
     
alter TABLE RelatedSecretariats add DestinationServerDB  varchar(50) Null                                                                                                                                      
                                                
else
alter TABLE RelatedSecretariats alter column DestinationServerDB  varchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Secretariats' and c.name='SecID')                                                                                                                                            
alter TABLE Secretariats add SecID  int Not Null default 0                                                                                                                                                                   
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Secretariats' and c.name='SecTitle')                                                                                                                                         
alter TABLE Secretariats add SecTitle  nvarchar(50) Null                                                                                                                                                                     
                                  
else
alter TABLE Secretariats alter column SecTitle  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Secretariats' and c.name='Precode')                                                                                                                                          
alter TABLE Secretariats add Precode  nvarchar(50) Null                                                                                                                                                                    
                                    
else
alter TABLE Secretariats alter column Precode  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Secretariats' and c.name='ServerID')                                                                                                                                         
alter TABLE Secretariats add ServerID  int Not Null  default (0)                                                                                                                                                          
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Secretariats' and c.name='ArchiveCenterID')                                                                                                                                  
alter TABLE Secretariats add ArchiveCenterID  int Not Null  default (0)                                                                                                                                              
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='SendStatus' and c.name='SendStatusID')                                                                                                                                       
alter TABLE SendStatus add SendStatusID  int Not Null default 0                                                                                                                                                       
                                         
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='SendStatus' and c.name='SendStatusTitle')                                                                                                                                    
alter TABLE SendStatus add SendStatusTitle  nvarchar(100) Not Null default 0                                                                                                                                 
                                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Sentenses' and c.name='ID')                                                                                                                                                  
alter TABLE Sentenses add ID  int Not Null default 0                                                                                                                                                                           
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Sentenses' and c.name='SentenseName')                                                                                                                                        
alter TABLE Sentenses add SentenseName  nvarchar(50) Null                                                                                                                                                            
                                          
else
alter TABLE Sentenses alter column SentenseName  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Sentenses' and c.name='SentensValue')                                                                                                                                        
alter TABLE Sentenses add SentensValue  nvarchar(255) Null                                                                                                                                                            
                                         
else
alter TABLE Sentenses alter column SentensValue  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Settings' and c.name='UserID')                                                                                                                                               
alter TABLE Settings add UserID  int Not Null default 0                                                                                                                                                                       
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Settings' and c.name='VariableId')                                                                                                                                           
alter TABLE Settings add VariableId  int Not Null default 0                                                                                                                                                                  
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Settings' and c.name='Value')                                                                                                                                                
alter TABLE Settings add Value  nvarchar(255) Null                                                                                                                                                                             
                                
else
alter TABLE Settings alter column Value  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Settings' and c.name='description')                                                                                                                                          
alter TABLE Settings add description  nvarchar(50) Null                                                                                                                                                                      
                                  
else
alter TABLE Settings alter column description  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Subject' and c.name='SubjectID')                                                                                                                                             
alter TABLE Subject add SubjectID  int Not Null default 0                                                                                                                                                                    
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Subject' and c.name='SubjectTitle')                                                                                                                                          
alter TABLE Subject add SubjectTitle  nvarchar(50) Not Null default 0                                                                                                                                                
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Subject' and c.name='IsActive')                                                                                                                                              
alter TABLE Subject add IsActive  bit Not Null  default (1)                                                                                                                                                                   
                                 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='sys_AppMessage' and c.name='ID')                                                                                                                                             
alter TABLE sys_AppMessage add ID  int Not Null default 0                                                                                                                                                                
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='sys_AppMessage' and c.name='FarsiMessage')                                                                                                                                  
 
alter TABLE sys_AppMessage add FarsiMessage  nvarchar(255) Null                                                                                                                                                 
                                               
else
alter TABLE sys_AppMessage alter column FarsiMessage  nvarchar(255)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='TableId')                                                                                                                                                
alter TABLE Tables add TableId  int Not Null default 0                                                                                                                                                                         
                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='TableName')                                                                                                                                              
alter TABLE Tables add TableName  nvarchar(50) Null 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='Description')                                                                                                                                            
alter TABLE Tables add Description  nvarchar(50) Null 
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='TableType')                                                                                                                                              
alter TABLE Tables add TableType  tinyint Null  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='TableCode')                                                                                                                                              
alter TABLE Tables add TableCode  varchar(50) Null                                                                                                                                                                           
                                  
else
alter TABLE Tables alter column TableCode  varchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='UserField1')                                                                                                                                             
alter TABLE Tables add UserField1  nvarchar(50) Null                                                                                                                                                                         
                                  
else
alter TABLE Tables alter column UserField1  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Tables' and c.name='UserField2')                                                                                                                                             
alter TABLE Tables add UserField2  nvarchar(50) Null                                                                                                                                                                         
                                  
else
alter TABLE Tables alter column UserField2  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='TemplateGroup' and c.name='TemplateGroupID')                                                                                                                               
  
alter TABLE TemplateGroup add TemplateGroupID  int Not Null default 0                                                                                                                                           
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='TemplateGroup' and c.name='TemplateGroupTitle')                                                                                                                            
  
alter TABLE TemplateGroup add TemplateGroupTitle  nvarchar(100) Not Null default 0                                                                                                                     
                                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Urgenceis' and c.name='ID')                                                                                                                                                  
alter TABLE Urgenceis add ID  int Not Null default 0                                                                                                                                                                            
                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Urgenceis' and c.name='Title')                                                                                                                                               
alter TABLE Urgenceis add Title  nvarchar(50) Null                                                                                                                                                                              
                               
else
alter TABLE Urgenceis alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='UserAccArchiveID')                                                                                                                             
  
alter TABLE UserAccArchive add UserAccArchiveID  int Not Null default 0                                                                                                                                          
                                              
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='SecID')                                                                                                                                          
alter TABLE UserAccArchive add SecID  int Not Null default 0                                                                                                                                                             
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='UserID')                                                                                                                                         
alter TABLE UserAccArchive add UserID  int Not Null default 0                                                                                                                                                           
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='ArchiveCenterID')                                                                                                                               
 
alter TABLE UserAccArchive add ArchiveCenterID  int Not Null default 0                                                                                                                                            
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='ArchiveFolderID')                                                                                                                                
alter TABLE UserAccArchive add ArchiveFolderID  int Not Null default 0                                                                                                                                             
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserAccArchive' and c.name='ISAccess')                                                                                                                                       
alter TABLE UserAccArchive add ISAccess  bit Null                                                                                                                                                                              
                                
else
alter TABLE UserAccArchive alter column ISAccess  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserExtention' and c.name='UserExtentionID')                                                                                                                                 
alter TABLE UserExtention add UserExtentionID  int Not Null default 0                                                                                                                                              
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserExtention' and c.name='UserId')                                                                                                                                          
alter TABLE UserExtention add UserId  int Not Null default 0                                                                                                                                                              
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserExtention' and c.name='ExtentionID')                                                                                                                                     
alter TABLE UserExtention add ExtentionID  int Not Null default 0                                                                                                                                                      
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserExtention' and c.name='ReaderApplication')                                                                                                                               
alter TABLE UserExtention add ReaderApplication  nvarchar(2000) Null                                                                                                                                             
                                              
else
alter TABLE UserExtention alter column ReaderApplication  nvarchar(2000)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLog' and c.name='UserID')
alter TABLE UserLog add UserID  int Not Null default 0
else
alter TABLE UserLog alter column UserID  int Not Null                                                                                                                                                                         
                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLog' and c.name='FormID')
alter TABLE UserLog add FormID  int Not Null  default ((1))

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLog' and c.name='ActionID')                                                                                                                                              
alter TABLE UserLog add ActionID  int Not Null default 0                                                                                                                                                                     
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLog' and c.name='Time1')                                                                                                                                                 
alter TABLE UserLog add Time1  datetime Not Null  default (getdate())                                                                                                                                              
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLog' and c.name='LetterID')                                                                                                                                              
alter TABLE UserLog add LetterID  int Null                                                                                                                                                                                           
                          
else
alter TABLE UserLog alter column LetterID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='UserLoginLogoutID')                                                                                                                          
   
alter TABLE UserLoginLogout add UserLoginLogoutID  int Not Null default 0                                                                                                                                      
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='UserID')                                                                                                                                        
alter TABLE UserLoginLogout add UserID  int Not Null default 0                                                                                                                                                          
                                       
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='IPAddress')                                                                                                                                     
alter TABLE UserLoginLogout add IPAddress  char(15) Null                                                                                                                                                                 
                                      
else
alter TABLE UserLoginLogout alter column IPAddress  char(15)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='LoginTime')                                                                                                                                     
alter TABLE UserLoginLogout add LoginTime  datetime Not Null  default (getdate())                                                                                                                          
                                                    
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='LogoutTime')                                                                                                                                    
alter TABLE UserLoginLogout add LogoutTime  datetime Not Null  default (getdate())                                                                                                                       
                                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserLoginLogout' and c.name='isSafeLogout')                                                                                                                                  
alter TABLE UserLoginLogout add isSafeLogout  bit Not Null  default (0)                                                                                                                                            
                                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='UserMessageID')                                                                                                                                     
alter TABLE UserMessage add UserMessageID  bigint Not Null default 0                                                                                                                                            
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='To_')                                                                                                                                               
alter TABLE UserMessage add To_  int Not Null default 0                                                                                                                                                                    
                                    
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='Code')                                                                                                                                              
alter TABLE UserMessage add Code  int Null                                                                                                                                                                                        
                             
else
alter TABLE UserMessage alter column Code  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='From_')                                                                                                                                             
alter TABLE UserMessage add From_  int Null                                                                                                                                                                                      
                              
else
alter TABLE UserMessage alter column From_  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='MsgDate')                                                                                                                                           
alter TABLE UserMessage add MsgDate  varchar(10) Null                                                                                                                                                                   
                                       
else
alter TABLE UserMessage alter column MsgDate  varchar(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='MsgTime')                                                                                                                                           
alter TABLE UserMessage add MsgTime  varchar(6) Null                                                                                                                                                                     
                                      
else
alter TABLE UserMessage alter column MsgTime  varchar(6)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='Subject')                                                                                                                                           
alter TABLE UserMessage add Subject  nvarchar(50) Null                                                                                                                                                                   
                                      
else
alter TABLE UserMessage alter column Subject  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='Message')                                                                                                                                           
alter TABLE UserMessage add Message  text Null                                                                                                                                                                               
                                  

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserMessage' and c.name='Status')                                                                                                                                            
alter TABLE UserMessage add Status  int Null                                                                                                                                                                                      
                             
else
alter TABLE UserMessage alter column Status  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserNote' and c.name='UserNoteID')                                                                                                                                           
alter TABLE UserNote add UserNoteID  int Not Null default 0                                                                                                                                                              
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserNote' and c.name='UserID')                                                                                                                                               
alter TABLE UserNote add UserID  int Not Null default 0                                                                                                                                                                     
                                   
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserNote' and c.name='Note')                                                                                                                                                 
alter TABLE UserNote add Note  ntext Null                                                                                                                                                                                          
                            

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserNote' and c.name='CreateDate')                                                                                                                                           
alter TABLE UserNote add CreateDate  char(10) Not Null default 0                                                                                                                                                    
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='Id')                                                                                                                                                      
alter TABLE Users add Id  int Not Null default 0                                                                                                                                                                                   
                            
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='Title')                                                                                                                                                   
alter TABLE Users add Title  nvarchar(50) Null                                                                                                                                                                                     
                            
else
alter TABLE Users alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='UserName')                                                                                                                                                
alter TABLE Users add UserName  nvarchar(50) Null                                                                                                                                                                           
                                   
else
alter TABLE Users alter column UserName  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='PassWord')                                                                                                                                                
alter TABLE Users add PassWord  nvarchar(100) Null                                                                                                                                                                         
                                    
else
alter TABLE Users alter column PassWord  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='AccessID')                                                                                                                                                
alter TABLE Users add AccessID  tinyint Null                                                                                                                                                                                        
                           
else
alter TABLE Users alter column AccessID  tinyint  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='FromOrgID')                                                                                                                                               
alter TABLE Users add FromOrgID  int Null                                                                                                                                                                                           
                           
else
alter TABLE Users alter column FromOrgID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='DefualtSecretariatID')                                                                                                                                    
alter TABLE Users add DefualtSecretariatID  tinyint Not Null  default ((1))                                                                                                                                         
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='IsSecretariantStaffer')                                                                                                                                   
alter TABLE Users add IsSecretariantStaffer  bit Null                                                                                                                                                                          
                                
else
alter TABLE Users alter column IsSecretariantStaffer  bit  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='KartableGridInfo')                                                                                                                                        
alter TABLE Users add KartableGridInfo  image Null                                                                                                                                                                             
                                

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='DabirGridInfo')                                                                                                                                           
alter TABLE Users add DabirGridInfo  image Null                                                                                                                                                                                  
                              

GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='EndActiveDate')                                                                                                                                           
alter TABLE Users add EndActiveDate  char(10) Null                                                                                                                                                                           
                                  
else
alter TABLE Users alter column EndActiveDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='BeginActiveDate')                                                                                                                                         
alter TABLE Users add BeginActiveDate  char(10) Null                                                                                                                                                                        
                                   
else
alter TABLE Users alter column BeginActiveDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='AlternativeUserID')                                                                                                                                       
alter TABLE Users add AlternativeUserID  int Null                                                                                                                                                                                
                              
else
alter TABLE Users alter column AlternativeUserID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='AlternativeEndDate')                                                                                                                                      
alter TABLE Users add AlternativeEndDate  char(10) Null                                                                                                                                                                   
                                     
else
alter TABLE Users alter column AlternativeEndDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='AlternativebeginDate')                                                                                                                                    
alter TABLE Users add AlternativebeginDate  char(10) Null                                                                                                                                                                 
                                     
else
alter TABLE Users alter column AlternativebeginDate  char(10)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='HasSecureLetterAccess')                                                                                                                                   
alter TABLE Users add HasSecureLetterAccess  bit Not Null  default ((1))                                                                                                                                          
                                             
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='SecondOrgID')                                                                                                                                             
alter TABLE Users add SecondOrgID  int Null                                                                                                                                                                                       
                             
else
alter TABLE Users alter column SecondOrgID  int  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='eCartableGridInfo')                                                                                                                                       
alter TABLE Users add eCartableGridInfo  varchar(500) Null                                                                                                                                                               
                                      
else
alter TABLE Users alter column eCartableGridInfo  varchar(500)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='eCartableTheme')                                                                                                                                          
alter TABLE Users add eCartableTheme  varchar(50) Null                                                                                                                                                                   
                                      
else
alter TABLE Users alter column eCartableTheme  varchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='Users' and c.name='Email')                                                                                                                                                   
alter TABLE Users add Email  nvarchar(100) Null                                                                                                                                                                                 
                               
else
alter TABLE Users alter column Email  nvarchar(100)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserSecretariats' and c.name='UserId')                                                                                                                                       
alter TABLE UserSecretariats add UserId  int Not Null default 0                                                                                                                                                          
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserSecretariats' and c.name='SecId')                                                                                                                                        
alter TABLE UserSecretariats add SecId  int Not Null default 0                                                                                                                                                            
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserShortCut' and c.name='userShortCutID')                                                                                                                                   
alter TABLE UserShortCut add userShortCutID  int Not Null default 0                                                                                                                                                 
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserShortCut' and c.name='UserID')                                                                                                                                           
alter TABLE UserShortCut add UserID  int Not Null default 0                                                                                                                                                               
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserShortCut' and c.name='keyText')                                                                                                                                          
alter TABLE UserShortCut add keyText  nvarchar(100) Not Null default 0                                                                                                                                          
                                               
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserShortCut' and c.name='altKey')                                                                                                                                           
alter TABLE UserShortCut add altKey  char(1) Not Null default 0                                                                                                                                                        
                                        
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserSign' and c.name='UserID')                                                                                                                                               
alter TABLE UserSign add UserID  int Not Null default 0                                                                                                                                                                      
                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserSign' and c.name='UserSign')                                                                                                                                             
alter TABLE UserSign add UserSign  image Not Null default 0                                                                                                                                                              
                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserTemplateGroup' and c.name='UserTemplateGroupID')                                                                                                                
         
alter TABLE UserTemplateGroup add UserTemplateGroupID  int Not Null default 0                                                                                                                            
                                                      
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserTemplateGroup' and c.name='TemplateGroupID')                                                                                                                       
      
alter TABLE UserTemplateGroup add TemplateGroupID  int Not Null default 0                                                                                                                                    
                                                  
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='UserTemplateGroup' and c.name='UserID')                                                                                                                                      
alter TABLE UserTemplateGroup add UserID  int Not Null default 0                                                                                                                                                     
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroup' and c.name='WorkGroupID')                                                                                                                                         
alter TABLE WorkGroup add WorkGroupID  int Not Null default 0                                                                                                                                                        
                                          
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroup' and c.name='Title')                                                                                                                                               
alter TABLE WorkGroup add Title  nvarchar(50) Null                                                                                                                                                                            
                                 
else
alter TABLE WorkGroup alter column Title  nvarchar(50)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroup' and c.name='Descript')                                                                                                                                            
alter TABLE WorkGroup add Descript  nvarchar(300) Null                                                                                                                                                                   
                                      
else
alter TABLE WorkGroup alter column Descript  nvarchar(300)  Null
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroup' and c.name='UserID')                                                                                                                                              
alter TABLE WorkGroup add UserID  int Not Null default 0                                                                                                                                                                  
                                     
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroupOrg' and c.name='WorkGroupOrgID')                                                                                                                               
    
alter TABLE WorkGroupOrg add WorkGroupOrgID  int Not Null default 0                                                                                                                                            
                                                
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroupOrg' and c.name='FromOrgID')                                                                                                                                        
alter TABLE WorkGroupOrg add FromOrgID  int Not Null default 0                                                                                                                                                      
                                           
GO
if not exists (select * from syscolumns c,sysobjects o
where o.id=c.id and o.name='WorkGroupOrg' and c.name='WorkGroupID')                                                                                                                                     
 
alter TABLE WorkGroupOrg add WorkGroupID  int Not Null default 0                                                                                                                                                  
                                             
GO


GO
if exists (select * from sysindexes where name = 'IX_UserLog_ActionID')

DROP INDEX userlog.IX_UserLog_ActionID 
GO
if exists (select * from sysindexes where name = 'IX_UserLog_User_Act_Form')
DROP INDEX UserLog.IX_UserLog_User_Act_Form
GO
if exists (select * from sysindexes where name = 'IX_UserLog_User_Act_Form_Letter')
DROP INDEX UserLog.IX_UserLog_User_Act_Form_Letter
GO
alter table dbo.UserLog alter column ActionID nvarchar(50) not null

GO

CREATE NONCLUSTERED INDEX [IX_UserLog_ActionID] ON [dbo].[UserLog]
( 	[ActionID] ASC            )


GO

CREATE NONCLUSTERED INDEX [IX_UserLog_User_Act_Form] ON [dbo].[UserLog] 
( 	[UserID] ASC,
	[ActionID] ASC,
	[FormID] ASC )
GO

CREATE NONCLUSTERED INDEX [IX_UserLog_User_Act_Form_Letter] ON [dbo].[UserLog]
( 	[UserID] ASC,
	[ActionID] ASC,
	[FormID] ASC,
	[LetterID] ASC )


go
if exists (select * from sysindexes where name = 'IX_Actions_ID')
DROP INDEX Actions.IX_Actions_ID 
GO
if  Exists(Select * from Sysindexes Where Name='PK_ActionsAccess')
ALTER TABLE dbo.ActionsAccess DROP CONSTRAINT PK_ActionsAccess
GO
alter table dbo.ActionsAccess alter column ActionID nvarchar(50) not null
GO

alter table dbo.Actions alter column ID nvarchar(50) not null
GO
CREATE NONCLUSTERED INDEX [IX_Actions_ID] ON [dbo].[Actions] 
(
	[ID] ASC
) 

GO

ALTER TABLE dbo.ActionsAccess ADD CONSTRAINT
	PK_ActionsAccess PRIMARY KEY CLUSTERED 
	(
	AccessID,
	ActionID,
	FormTag
	)
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[dropDefault]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[dropDefault]
GO
Create Procedure [dbo].[dropDefault]
@tablename varchar(100),
@colname varchar(100)
as

declare @dfName varchar(100),@sql nvarchar(4000)

select top 1 @dfname=o.name
from sysconstraints sc,sysobjects o,syscolumns c
where sc.id=object_id(@tablename) and o.id=sc.constid and c.id=sc.id and c.colid=sc.colid
and o.type='d'
and c.name=@colname

set @sql='ALTER TABLE '+@tablename+' DROP CONSTRAINT '+@dfname
 if @sql is not null
exec(@sql)
GO
EXEC dropDefault 'UserAccArchive','ArchiveCenterID'
go
 IF  EXISTS (SELECT * FROM sysindexes WHERE name = N'IX_UserAccArchive_ArchiveCenterID')
DROP INDEX UserAccArchive.IX_UserAccArchive_ArchiveCenterID
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE name='FK_UserAccArchive_ArchiveCenter')
ALTER TABLE [dbo].[UserAccArchive] DROP CONSTRAINT [FK_UserAccArchive_ArchiveCenter]
GO
IF  EXISTS (SELECT * FROM sysobjects o,syscolumns c WHERE o.id=c.id and c.name='ArchiveCenterID' and o.name='UserAccArchive')
ALTER TABLE [dbo].[UserAccArchive] DROP column ArchiveCenterID
GO
--------Function----------------------------------------------------------------------------------------------------------------------------------------------

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[ArchiveFolders]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ArchiveFolders]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[ArchiveID]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ArchiveID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[ArchivePlaces]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ArchivePlaces]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[delphiType]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[delphiType]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[everyLike]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[everyLike]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Fasl]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Fasl]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[get_Number_Of_Letter_RelatedSecretariatID]') AND type in (N'FN', N'IF', N'TF', N'FS', 
N'FT'))
DROP FUNCTION [dbo].[get_Number_Of_Letter_RelatedSecretariatID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[GetSystemValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[GetSystemValue]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[has_file]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[has_file]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[has_Page]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[has_Page]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[has_tifPage]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[has_tifPage]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[has_WordPage]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[has_WordPage]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[InnerNo]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[InnerNo]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Is_ParentId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Is_ParentId]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[isLike]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[isLike]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[IsString]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[IsString]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Letter_Archived]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Letter_Archived]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[MiladiLeapyear]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[MiladiLeapyear]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[newIndicatorid]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[newIndicatorid]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Number_Of_Inbox]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Number_Of_Inbox]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Number_Of_Week]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Number_Of_Week]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[NumberOfPage_ByMaxSize]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[NumberOfPage_ByMaxSize]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[ParentId]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[ParentId]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Recommite_DeadLine]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Recommite_DeadLine]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Recommite_FirstProceed]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Recommite_FirstProceed]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Recommite_FirstView]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Recommite_FirstView]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Recommite_has_done]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Recommite_has_done]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id=object_id(N'[dbo].[Recommites_by_indicator]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[Recommites_by_indicator]
GO


CREATE FUNCTION [dbo].[ArchiveFolders] (@LetterID int,@UserID  tinyint)
RETURNS nvarchar(1000)
BEGIN
declare @result  nvarchar(1000)
set @result=''
SELECT   @result=@result +' , '+Title +' - '+ArchiveDate
FROM         LetterArchiveFolder
INNER JOIN          ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
where  ArchiveFolder.UserID=@userid and Letterid =@LetterID
if @result<>'' set  @result='»«Ìê«‰Ì œ—: '+substring(@result,4,1000)
return(@result)
end

GO


CREATE FUNCTION [dbo].[ArchiveID] (@Sid int,@fid  tinyint,@Myear tinyint,@page tinyint)
RETURNS varchar(20)
BEGIN
declare @result vaRCHAR(20)

if isnull(@fid,0)=0
SET @result=cast(@sid as varchar(8))+'/'+cast(@myear as char(2))+'/'+cast(@page as varchar(4))
else
SET @result=cast(@sid as varchar(8))+'-'+cast(@fid as varchar(2))++'/'+cast(@myear as char(2))+'/'+cast(@page as varchar(4))
return(@result)
END

 
GO




CREATE FUNCTION [dbo].[ArchivePlaces] (@LetterID int,@UserID  tinyint)  
RETURNS nvarchar(1000)
BEGIN
declare @result  nvarchar(1000)
set @result=''
SELECT   @result=@result +' , '+Place 
FROM         LetterArchiveFolder 
INNER JOIN          ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
where  ArchiveFolder.UserID=@userid and Letterid =@LetterID
if @result<>'' set  @result=substring(@result,4,1000)
return(@result)
end



GO 


CREATE FUNCTION [dbo].[delphiType] (@typeName varchar(100))  
RETURNS varchar(20) AS  
BEGIN 
Return
(case  
when  @typeName in ('int','bigint','smallint') then 'integer'
when  @typeName in ('tinyint') then 'integer'
when  @typeName in ('bit') then 'boolean'
when  @typeName in ('varchar','char','sysname','text','shamsiDate','tel','path','time') then 'string'
when  @typeName in ('nvarchar','ntext') then 'widestring'
when  @typeName in ('sql_variant') then 'variant'
when  @typeName in ('float') then 'real'  else @typeName	end)

END




GO 

CREATE FUNCTION [dbo].[everyLike](@fieldType varchar(50),@len int)
RETURNS  bit AS  
BEGIN 
 return case when @fieldType in('varchar','nvarchar','text') and @len>50 then 1 else 0 end
END





GO 

CREATE FUNCTION [dbo].[Fasl](@date char(10))
RETURNS varchar(50) AS  
BEGIN 
declare @m tinyint,@f tinyint
set @m=cast(substring(@date,6,2) as tinyint)
set @f=case when @m>1 then (@m-1)/3+1 else 1 end
return(case @f when 1 then '»Â«—' 
when 2 then ' «»” «‰'
when 3 then 'Å«ÌÌ“'
else '“„” «‰' end) 
END





GO 

create function [dbo].[get_Number_Of_Letter_RelatedSecretariatID](
@RelatedSecretariatID int)
returns int
begin
declare  @Number_Of_Letter int 
SELECT    @Number_Of_Letter= COUNT(*)  
FROM         Letter INNER JOIN
                      RelatedSecretariats ON Letter.ToOrgID = RelatedSecretariats.DestinationOrgID_inSource
WHERE     ((RelatedSecretariats.RelatedSecretariatID = @RelatedSecretariatID) AND Letter.SendStatusID=2 and letterformat=1)


set @Number_Of_Letter=isnull(@Number_Of_Letter,0)
return(@Number_Of_Letter)
end



GO 

CREATE FUNCTION [dbo].[GetSystemValue](@varID int)
RETURNS nvarchar(255)  AS  
BEGIN 
if not exists(select * from settings where variableid=@varID and userid=-1)
 return(0)


 return(select value from settings where variableid=@varID and userid=-1)
END


GO 

CREATE FUNCTION [dbo].[has_file](@LetterID int)
RETURNS bit AS  
BEGIN 
declare @res bit

if exists(
SELECT     LetterDataID
FROM         LetterData
WHERE     LetterID=@LetterID and extention>3)
or (
SELECT    count( LetterDataID)
FROM         LetterData
WHERE     LetterID=@LetterID and extention=3)>1
set @res=1
else
set @res=0
return(@res)

END


 

GO 



CREATE FUNCTION [dbo].[has_Page](@LetterID int)
RETURNS bit AS  
BEGIN 
declare @res bit
if exists(
SELECT     PageNumber
FROM         LetterData
WHERE     LetterID=@LetterID and extention in (1,2))
set @res=1
else
set @res=0
return(@res)

END



GO 
CREATE FUNCTION [dbo].[has_tifPage](@LetterID int)
RETURNS bit AS  
BEGIN 
declare @res bit

if exists(
SELECT     PageNumber
FROM         LetterData
WHERE     LetterID=@LetterID and extention in (1,2))
set @res=1
else
set @res=0
return(@res)

END


GO 
create FUNCTION [dbo].[has_WordPage](@LetterID int)
RETURNS bit AS  
BEGIN 
declare @res bit

if exists(
SELECT     PageNumber
FROM         LetterData
WHERE     LetterID=@LetterID and extention=3)
set @res=1
else
set @res=0
return(@res)

END


 

GO 


CREATE function [dbo].[InnerNo](@LetterID int)
  returns nvarchar(200)
begin
declare @SecCode nvarchar(50),@MYear nchar(2), @IndicatorID nvarchar(10), @ToOrgCode  nvarchar(50),
@FromOrgCode  nvarchar(50), @LetterTypCode  nvarchar(10),@result nvarchar(4000),@UserMemo nvarchar(255),
@FromPrecode  nvarchar(50)

SELECT
@SecCode=ltrim(isnull(Secretariats.Precode,'')),
@MYear=Letter.MYear,
@IndicatorID=Letter.IndicatorID,
@FromOrgCode= case when len(fromorg.code)>5  then  FromOrg.Code  else ltrim(isnull(fromorg.code,'')) end ,
@ToOrgCode= case when len(Toorg.code)>5  then  Toorg.Code  else ltrim(isnull(Toorg.code,'')) end ,
@LetterTypCode=ltrim(isnull(LetterTypes.PreCode,'')),
@UserMemo=ltrim(isnull(Usermemo,'')),
@FromPrecode=ltrim(isnull(fromorg.Precode,''))
FROM         Letter
INNER JOIN  FromOrganizations Toorg ON Letter.ToorgID = Toorg.ID
INNER JOIN  FromOrganizations FromOrg ON Letter.FromOrgID = FromOrg.ID
INNER JOIN  LetterTypes ON Letter.Letter_Type = LetterTypes.ID
INNER JOIN  Secretariats ON Letter.SecretariatID = Secretariats.SecID
WHERE     (Letter.LetterID = @LetterID)       

declare @Delimeter char(1)
set @Delimeter=ltrim(dbo.GetSystemValue(44))


set @result=case  dbo.GetSystemValue(35)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter
                   when 8 then @FromPrecode+@Delimeter end+

             case  dbo.GetSystemValue(36)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter 
                   when 8 then @FromPrecode+@Delimeter end+

             case  dbo.GetSystemValue(37)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter 
                   when 8 then @FromPrecode+@Delimeter end+

             case  dbo.GetSystemValue(38)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter 
                   when 8 then @FromPrecode+@Delimeter end+

             case  dbo.GetSystemValue(39)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter 
                   when 8 then @FromPrecode+@Delimeter end+

             case  dbo.GetSystemValue(40)
                   when 0 then ''
                   when 1 then @SecCode+@Delimeter
                   when 2 then @MYear+@Delimeter
                   when 3 then @IndicatorID+@Delimeter
                   when 4 then @ToOrgCode+@Delimeter
                   when 5 then @FromOrgCode+@Delimeter
                   when 6 then @LetterTypCode+@Delimeter
                   when 7 then @UserMemo+@Delimeter 
                   when 8 then @FromPrecode+@Delimeter end

while charindex('  ',@result)<>0
  begin
   Set @result=replace(@result,'  ',' ')
   Set @result=replace(@result,'/ ','/')
   Set @result=replace(@result,' /','/')
  end 

set @result=replace(ltrim(rtrim(@result)),@Delimeter+@Delimeter,@Delimeter)
set @result=replace(@result,@Delimeter+@Delimeter,@Delimeter)


if substring(@result,len(@result),1)=@Delimeter
   set @result=substring(@result,1,len(@result)-1)

if substring(@result,1,1)=@Delimeter
   set @result=substring(@result,2,len(@result)-1)


return(@result)
end


GO 


CREATE   FUNCTION [dbo].[Is_ParentId] (@ChildID int,@ParentID int)
RETURNS bit AS
BEGIN

 declare @PI int,@CurID int,@stoper int
if @childid=@parentid return(1)
if @ParentID<5 return(1)
 set @CurID=@ChildID
set @stoper=1
 while @CurID<>0 and @stoper<4
   begin
    select @PI=ParentID from FromOrganizations where id=@CurID
    if @PI=@ParentID return(1)  else set @CurID=@PI
   set @stoper=@stoper+1
   end
return(0)
END




GO 

CREATE FUNCTION [dbo].[isLike](@fieldType varchar(50))
RETURNS  bit AS  
BEGIN 
 return case when @fieldType in ('float','int','bit','money','bigint','datetime') then 0 else 1 end
END




GO 

CREATE FUNCTION [dbo].[IsString](@fieldType varchar(50))
RETURNS bit  AS
BEGIN
return case when @fieldType in ('float','int','bit','money','bigint') then 0 else 1 end
END



GO 
create function [dbo].[Letter_Archived](@letterID int )
returns bit
begin
if exists(SELECT     *
FROM         LetterArchiveFolder INNER JOIN
                      ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
WHERE     (ArchiveFolder.UserID = 0) AND (LetterArchiveFolder.LetterID =@letterID ))
return(1)

return(0)
end






GO 



CREATE FUNCTION [dbo].[MiladiLeapyear](@y int)
RETURNS int AS
BEGIN
     if ((@y%4=0) and (@y%100<>0)) or ((@y%100=0) and ((@y/100)%4=0))
return 1

return 0

END

GO








CREATE FUNCTION [dbo].[newIndicatorid](@letter_type int,@LetterFormat int,@myear int,@SecretariatID int)
RETURNS int AS  
BEGIN
declare @RecivedInd int ,@SentInd  int,@innerind int,@newIndicatorid int

Select @RecivedInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=1 

Select @SentInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=2 


 Select @innerind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=3

  if @RecivedInd<dbo.GetSystemValue(3)
    set  @RecivedInd=dbo.GetSystemValue(3)


  if @SentInd<dbo.GetSystemValue(3) 
    set  @SentInd=dbo.GetSystemValue(3)

  if @innerind<dbo.GetSystemValue(3) 
    set  @innerind=dbo.GetSystemValue(3)


if @letter_type=3 
  return(@innerind)
  

 if dbo.GetSystemValue(5)=0
  begin
     if @SentInd>@RecivedInd 
        set @newIndicatorid=@SentInd
       else
        set @newIndicatorid=@RecivedInd

  end

 if dbo.GetSystemValue(5)=1
   begin
    if @letter_type=1 
     set @newIndicatorid=@RecivedInd
    if @letter_type=2
     set @newIndicatorid=@SentInd
   end

 if dbo.GetSystemValue(5)=2
  begin
   if @letter_type=2
      set @newIndicatorid=2*(1+(@SentInd-1)/2)

   if @letter_type=1
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)+1
  end

 if dbo.GetSystemValue(5)=3
  begin
   if @letter_type=1
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)

   if @letter_type=2
      set @newIndicatorid=2*(1+(@SentInd -1)/2)+1
  end
return(@newIndicatorid) 
END




GO 

CREATE  function [dbo].[Number_Of_Inbox](@SecretariatID int, @LetterFormat tinyint,@OrgID int,
@Proceeded bit,@myear tinyint,@Letter_Type int)
returns int

begin

return( SELECT count(Letter.letterID)
FROM ReCommites
INNER JOIN Letter  ON ReCommites.LetterID = Letter.LetterID
where (Letter.myear= @myear)
and (SecretariatID=@SecretariatID or @SecretariatID=0)
and (LetterFormat =@LetterFormat or  @LetterFormat=0)
and (OrgID =@OrgID )
and (Proceeded = @Proceeded)
and ( Letter_Type=@Letter_Type or @Letter_Type=0))

end




GO 
CREATE FUNCTION [dbo].[Number_Of_Week] (@D datetime)
RETURNS tinyint
 AS
BEGIN
declare @r tinyint
if (datepart(month,@d)>3) or (datepart(month,@d)=3 and datepart(day,@d)>20)
select @r=datepart(week,@d)-11 --if getdate>='Mar 21'
else
select @r=datepart(week,@d)+41--if getdate<'Mar 21'
return(@r)
END



GO 


CREATE FUNCTION [dbo].[NumberOfPage_ByMaxSize] (@letterID int ,@MaxSize int)
RETURNS int AS
BEGIN
declare @result int
set @result=-1
select top 1 @result=Pagenumber
from letterdata ld
where (select sum(datalength(image)) from letterData where letterid=@letterID and pagenumber<=ld.Pagenumber)<=1000*@MaxSize
order by Pagenumber desc
return(@result)
END




GO 



CREATE FUNCTION [dbo].[ParentId] (@ID int)
RETURNS int AS
BEGIN
 declare @i int,@PI int,@CurID int
 set @i=0
 set @CurID=@id
 while @i<10
   begin
    select @PI=ParentID from FromOrganizations where id=@CurID
    if @PI=1 return(@CurID)   else set @CurID=@PI

    set @i=@i+1
   end
return(@PI)
END




GO

CREATE  FUNCTION [dbo].[Recommite_DeadLine](@RecommiteID int,@today char(10))
RETURNS int AS
BEGIN
declare @letterid int, @deadlinedate char(10),@parentID int,@proceeded bit

select @parentID=id ,@letterid=letterid,@proceeded=proceeded,@deadlinedate=deadlinedate from recommites where  RecommiteID=@RecommiteID

if @proceeded=1
select @deadlinedate=min(deadlinedate)
from recommites
where letterid=@LetterID and Parentid=@ParentID and proceeded=0

if isnull(@deadlinedate,'')='' return(null)

return(dbo.ShamsiDatediff(@today,@deadlinedate))
END


GO
CREATE  FUNCTION [dbo].[Recommite_FirstProceed](@RecommiteID int)
RETURNS  varchar(10) AS
BEGIN

declare @result char(10)
declare @id int,@letterid int
select @id=id,@Letterid=Letterid
from [ReCommites]
where (RecommiteID=@RecommiteID )

select @result=Proceeddate from  ReCommites
where Letterid=@Letterid and parentid=@id

set @result=isnull(@result,'-')
return(@result)
END




GO


CREATE  FUNCTION [dbo].[Recommite_FirstView](@RecommiteID 	[int])
RETURNS  varchar(10) AS
BEGIN
declare @result char(10)
declare @id int,@letterid int
select @id=id,@Letterid=Letterid
from [ReCommites]
where (RecommiteID=@RecommiteID )

select @result=Viewdate from  ReCommites
where Letterid=@Letterid and parentid=@id

set @result=isnull(@result,'-')
return(@result)
END



GO

CREATE function [dbo].[Recommite_has_done](@RecommiteID int)
returns tinyint
begin
declare   @LetterID int, @ID int, @Type int

SELECT     @LetterID=LetterID, @ID=ID,@Type=Type
FROM         ReCommites
WHERE     (RecommiteID = @RecommiteID)
declare @all int ,@done int

if exists (select *
from  ReCommites
WHERE     LetterID=@LetterID and Type=@Type and id>@id and proceeded=0)  return(2)

return(1)

end




GO


CREATE  FUNCTION [dbo].[Recommites_by_indicator](@LetterID int )
RETURNS nvarchar(500) AS
BEGIN


declare @res nvarchar(500)
set @res=''

SELECT       @res=@res+','+FromOrganizations.Title+'  '+recommitedate
FROM         ReCommites  INNER JOIN
                      FromOrganizations ON ReCommites.OrgID = FromOrganizations.ID
WHERE     (ReCommites.LetterID = @LetterID)

if @res<>'' set @res=substring(@res,2,len(@res)-1)

return(@res)

END




GO

--------Datas----------------------------------------------------------------------------------------------------------------------------------------------
if Not Exists(Select * from ApplicationForms Where [ID] = 7 )
begin
   Insert into ApplicationForms([ID],Title)
   Values(7,'›—„ «”ò‰ ‰«„Â')
end
go
if Not Exists(Select * from ApplicationForms Where [ID] = 8 )
   Insert into ApplicationForms([ID],Title)  Values(8,' ò«— «»· ')
go
delete sys_AppMessage
go
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (2, '‘„« »Â «Ì‰  ﬁ«»·Ì  œ” —”Ì ‰œ«—Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (3, '«Ì‰ ‰«„Â ÅÌ—Ê ‰œ«—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (4, '«Ì‰ ‰«„Â ⁄ÿ› ‰œ«—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (25, '¬Ì« «“ Œ—ÊÃ „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (26, 'ﬁ»·« »«Ìœ ‰«„Â —« –ŒÌ—Â ﬂ‰Ìœ¬Ì« «Ì‰ ﬂ«— —« «‰Ã«„ œÂ„')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (27, '¬Ì« «ÿ·«⁄«  –ŒÌ—Â ‘Êœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (28, '‘„« ò«— «»· ‰œ«—Ìœ Ê ›ﬁÿ „Ì  Ê«‰Ìœ «“ ‰“„ «›“«“ œ»Ì— Œ«‰Â «” ›«œÂ ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (29, ' êÌ—‰œÂ ‰«„Â ‰„Ì  Ê«‰œ Œ«·Ì »„«‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (30, '⁄‰Ê«‰  —« Ê«—œ ‰ò—œÂ «Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (31, '«„—Ê“')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (32, '«”  ¬Ì« „«Ì·Ìœ ‰”ŒÂ Å‘ Ì»«‰  ÂÌÂ ‰„«ÌÌœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (33, '¬Ì« «“ ›⁄«· ﬂ—œ‰ ‰«„Â „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (34, ' ¬Ì« »Â ‰«„Â ÅÌ‘ ‰ÊÌ”  »« ‘„«—Â')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (35, '‘„«—Â œ»Ì—Œ«‰Â «Œ ’«’ „Ì œÂÌœø')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (36, '¬Ì« «“ Õ–› ”„ ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (37, '„ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (38, '¬Ì« «“ Õ–› ‰«„Â „ÿ„∆‰ Â” Ìœø')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (39, '¬Ì« «“ Õ–› „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (40, '¬Ì« «“ Õ–› „Ê÷Ê⁄')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (41, '¬Ì« «“ Õ–› “Ê‰ﬂ‰')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (42, '¬Ì« «“ œ—Ã ﬁ«·» ÃœÌœ „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (43, '¬Ì« «“ Õ–› ﬁ«·»  ‰«„Â  »« ⁄‰Ê«‰')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (44, '¬Ì« «“ ç«Å „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (45, '¬Ì« «Ì‰ ‘„«—Â —« –ŒÌ—Â „Ì ﬂ‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (46, '¬Ì« „ÿ„∆‰ Â” Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (47, '«Ì‰ ‰”ŒÂ «“ ‰—„ «›“«— «Ì‰ «„ò«‰ —« Å‘ Ì»«‰Ì ‰„Ì ò‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (48, '‘„« »Â «Ì‰ ﬁ«»·Ì  œ” —”Ì ‰œ«—Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (49, '«Ì‰ ‰”ŒÂ «“ ‰—„ «›“«— «Ì‰ «„ò«‰ —« Å‘ Ì»«‰Ì ‰„Ì ò‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (50, '«Ì‰ ‰«„Â ⁄ÿ› ‰œ«—œ ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (51, '«Ì‰ ‰«„Â ÅÌ—Ê ‰œ«—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (52, '«Ì‰ ﬁ”„  œ— «Ì‰ ‰”ŒÂ Å‘ Ì»«‰Ì ‰„Ì ‘Êœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (53, '›«Ì· word »—«Ì «Ì‰ ‰«„Â ÊÃÊœ ‰œ«—œﬁ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (54, '‘„«—Â «Ì‰ ‰«„Â »Â ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (55, ' €ÌÌ— Ì«› ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (56, '‰«„ ò«—»— Ì« ò·„Â ⁄»Ê— «‘ »«Â „Ì »«‘œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (57, '›ﬁÿ ﬂ«—»—Ì ﬂÂ ﬁ»·« Ê«—œ ‘œÂ «”  „Ì  Ê«‰œ ﬁ›· —« »«“ ﬂ‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (58, '‘„« ò«—„‰œ œ»Ì—Œ«‰Â ‰Ì” Ìœ Ê ›ﬁÿ œ” —”Ì »Â ò«— «»· œ«—Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (59, '‘„« »Â ÂÌç œ»Ì—Œ«‰Â «Ì œ” —”Ì ‰œ«—Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (60, 'Œÿ« œ— À»  «ÿ·«⁄« ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (61, '«» œ« “Ì— „Ã„Ê⁄Â Â«Ì «Ì‰ ”„  —« Õ–› ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (62, 'Õœ «ﬁ· Ìò ‰«„Â Ì« «—Ã«⁄ »—«Ì «Ì‰ ”„  À»  ‘œÂ «”  ·–« ‰„Ì  Ê«‰ ¬‰—« Õ–› ò—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (63, '‰«„Â ﬁ»·Ì —« –ŒÌ—Â ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (64, ' «Ì‰ òœ œ— ”«“„«‰ Â«Ì ÿ—› „ò« »Â ÊÃÊœ ‰œ«—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (65, ' ›—” ‰œÂ ‰«„Â ‰„Ì  Ê«‰œ Œ«·Ì »„«‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (66, ' „÷„Ê‰ ‰«„Â ‰„Ì  Ê«‰œ Œ«·Ì »„«‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (67, '‰«„Â —« –ŒÌ—Â ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (69, '‘„«—Â ‰«„Â ‰„Ì  Ê«‰œ Œ«·Ì »„«‰œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (70, 'Œÿ«: «Õ „«·« œÊ ⁄‰Ê«‰ Ìò”«‰ —« «‰ Œ«» ò—œÂ «Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (72, ' ò—«— ò·„Â ⁄»Ê— »« ò·„Â ⁄»Ê— ÌòÌ ‰Ì” ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (73, '‘„«—Â —œÌ› »«Ìœ ⁄œœ »«‘œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (74, ' ‰«„Â œ— “Ê‰ò‰ :')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (75, ' »«Ìê«‰Ì ‘œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (76, 'Œÿ« œ— ›—«ŒÊ«‰Ì  ’ÊÌ—')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (77, '  ¬Ì« »Â ‰«„Â Õ–› ‘œÂ    »« ‘„«—Â')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (78, 'ò·„Â ⁄»Ê— ›⁄·Ì ŒÊœ —« œ—”  Ê«—œ ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (79, ' ò·„Â ⁄»Ê— ‘„« »« „Ê›ﬁÌ   €ÌÌ— ò—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (80, '¬Ì« «“ ›⁄«· ò—œ‰ «Ì‰ «—Ã«⁄ „ÿ„∆‰ Â” Ìœø')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (81, '¬Ì« «“ Õ–› „Ê÷Ê⁄  ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (82, '«» œ« “Ì—„Ã„Ê⁄Â Â«Ì «Ì‰ „Ê÷Ê⁄ —« Õ–› ﬂ‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (83, 'œ— «Ì‰ „Ê÷Ê⁄ ‰«„Â Â«ÌÌ »«Ìê«‰Ì ‘œÂ «”  ·–« ‰„Ì  Ê«‰ ¬‰ —« Õ–› ﬂ—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (84, ' ‰«„Â œ— «Ì‰ œ»Ì—Œ«‰Â ÊÃÊœ œ«—œ ·–« ‰„Ì  Ê«‰ ¬‰ —« Õ–› ﬂ—œ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (85, 'ò«—»— œÌê—Ì »« òœ ò«—»—Ì ‘„« Ê«—œ ”Ì” „ ‘œÂ «”  ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (86, '‰«„Â œÌê—Ì œ— Õ«· ÊÌ—«Ì‘ «”  ·–« ‰„Ì  Ê«‰ «Ì‰ ‰«„Â —« ŒÊ«‰œ ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (87, '„ ‰ «—Ã«⁄ —« „‘Œ’ ò‰Ìœ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (88, '¬Ì« «“ Õ–› ê—ÊÂ ')
INSERT INTO sys_AppMessage(ID, FarsiMessage)
VALUES     (89, 'ﬁ«·»  œ— «Ì‰ ê—ÊÂ ÊÃÊœ œ«—œ ·–« ‰„Ì  Ê«‰ «‰ —« Õ–› ò—œ')
go





if not exists (select * from fields where fieldname='Org_PreCode')
INSERT INTO Fields ( FieldName,TableID,Description,IsWhere,ISString,IsLike,EveryLike,VisibleInGrid)
 VALUES ('Org_PreCode',1,'ÅÌ‘ òœ',1,1,1,1,1)
GO
  /*
declare @userid int
select @userid=max(id)
from users

set @userid=isnull(@userid,1)


insert into settings(userid,variableid,value)
select id,variableid,value
from users,settings
where userid=@userID
and str(id)+str(variableid)
not in (select str(userid)+str(variableid) from settings) */

GO
if not exists(select * from SendStatus where SendStatusID=1 )
insert into SendStatus(SendStatusID,SendStatusTitle) values(1,'⁄«œÌ')

go
if not exists(select * from SendStatus where SendStatusID=2 )
insert into SendStatus(SendStatusID,SendStatusTitle) values(2,'¬„«œÂ «—”«·')
go
if not exists(select * from SendStatus where SendStatusID=3 )
insert into SendStatus(SendStatusID,SendStatusTitle) values(3,'«—”«· ‘œÂ')
go
if not exists(select * from SendStatus where SendStatusID=4 )
insert into SendStatus(SendStatusID,SendStatusTitle) values(4,'œ—Ì«›  ‘œÂ')
go

if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle=' „«”  ·›‰Ì'
)  insert into FollowUpType(FollowUpTypeTitle) values(' „«”  ·›‰Ì')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«—”«· ÅÌ«„')
 insert into FollowUpType(FollowUpTypeTitle) values('«—”«· ÅÌ«„')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«—”«· ‰«„Â œ«Œ·Ì')
 insert into FollowUpType(FollowUpTypeTitle) values('«—”«· ‰«„Â œ«Œ·Ì')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«ﬁœ«„ —ÊÌ ‰«„Â')
 insert into FollowUpType(FollowUpTypeTitle) values('«ﬁœ«„ —ÊÌ ‰«„Â')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='ÃÊ«» ‰«„Â Ê«—œÂ')
 insert into FollowUpType(FollowUpTypeTitle) values('ÃÊ«» ‰«„Â Ê«—œÂ')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«—”«· ‰«„Â ’«œ—Â')
insert into FollowUpType(FollowUpTypeTitle) values('«—”«· ‰«„Â ’«œ—Â')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«—”«· ›«ò”')
 insert into FollowUpType(FollowUpTypeTitle) values('«—”«· ›«ò”')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='«—”«· e-mail')
 insert into FollowUpType(FollowUpTypeTitle) values('«—”«· e-mail')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='SMS')
 insert into FollowUpType(FollowUpTypeTitle) values('SMS')
if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='ÅÌêÌ—Ì Å«”Œ ‰«„Â')
insert into FollowUpType(FollowUpTypeTitle) values('ÅÌêÌ—Ì Å«”Œ ‰«„Â')

if not exists (SELECT *  FROM FollowUpType where FollowUpTypeTitle='”«Ì— «ﬁœ«„« ')
insert into FollowUpType(FollowUpTypeTitle) values('”«Ì— «ﬁœ«„« ')
GO
if not exists (select * from ActionType where ActionTypeid=1 )
insert into ActionType values(1,'«—Ã«⁄');
if not exists (select * from ActionType where ActionTypeid=2 )
insert into ActionType values(2,'«—Ã«⁄ ‘œÂ');
if not exists (select * from ActionType where ActionTypeid=3 )
insert into ActionType values(3,'«ﬁœ«„ Ê »«Ìê«‰Ì');
if not exists (select * from ActionType where ActionTypeid=4 )
insert into ActionType values(4,' ÂÌÂ ÅÌ‘ ‰ÊÌ”');
if not exists (select * from ActionType where ActionTypeid=5 )
insert into ActionType values(5,'ÃÊ«» œ«œÂ ‘œ');

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---
GO
if not exists (select * from  lifetips where id=1)
insert into lifetips values(1,'»Â —Ì‰ ò«—Â« ”Â ò«— «” : Ê«÷⁄ »Â‰ê«„ œÊ· ° ⁄›Ê Â‰ê«„ ﬁœ—  Ê »Œ‘‘ »œÊ‰ „‰ ')
GO
if not exists (select * from  lifetips where id=2)
insert into lifetips values(2,' „Ì«‰Âù—ÊÌ œ— Œ—Ã Ìò ‰Ì„Â „⁄Ì‘  «” ')
GO
if not exists (select * from  lifetips where id=3)
insert into lifetips values(3,'† œ”  »êÌ—° ‘„« —« «“ œÌê—«‰ Ãœ« „Ì ò‰œ° œ”  »œÂ « Õ«œ «ÌÃ«œ „Ì ò‰œ.')
GO
if not exists (select * from  lifetips where id=4)
insert into lifetips values(4,'´«» œ«  Ê —« ‰«œÌœÂ „Ì êÌ—‰œ° ”Å” „”Œ—Â «  „Ì ò‰‰œ Ê »⁄œ »«  Ê „Ì Ã‰ê‰œ. Ê·Ì œ— ‰Â«Ì  ÅÌ—Ê“Ì «“ ¬‰  Ê” ª')
GO
if not exists (select * from  lifetips where id=5)
insert into lifetips values(5,'´«—“‘ «Œ·«ﬁÌ° »” Â »Â  ⁄œ«œ ÊŸ«Ì›Ì «”  òÂ ¬œ„Ì «‰Ã«„ „Ì œÂœªò —Ì‰ê')
GO
if not exists (select * from  lifetips where id=6)
insert into lifetips values(6,'´«ê— “‰œêÌ »«  Ê ”— ‰«”«“ê«—Ì œ«—œ  Ê »« «Ê ”«“‘ ò‰ª - «”Å«— ')
GO
if not exists (select * from  lifetips where id=7)
insert into lifetips values(7,'´«‰”«‰ Â„ „Ì Ê«‰œ œ«Ì—Â »«‘œ Â„ Ìò Œÿ —«” . ‘„« „Ì ŒÊ«ÂÌœ çÂ ﬂ«— ﬂ‰ÌœÌ Ö « «»œ œÊ— ŒÊœ «‰ »ç—ŒÌœ Ì«  « »Ì ‰Â«Ì  «œ«„Â 
»œÂÌœÌª„Ê—Ì” „ —·Ì‰ê')
GO
if not exists (select * from  lifetips where id=8)
insert into lifetips values(8,'´»— Â— çÂ Â„Ì ·—“Ì „Ìùœ«‰ òÂ Â„«‰ «—“Ì')
GO
if not exists (select * from  lifetips where id=9) 
insert into lifetips values(9,'´»—œ»«—Ì »Â ⁄‰Ê«‰ Ì«—Ì ò‰‰œÂ ò«›Ì «”  Ê «ê— »—œ»«— ‰Ì” Ì ŒÊœ —« »Â »—œ»«—Ì Ê«œ«— ò‰ª')
GO
if not exists (select * from  lifetips where id=10)
insert into lifetips values(10,'´ ›ò— «‰”«‰ „«‰‰œ Ìò ç — ‰Ã«  „Ì »«‘œ Ì⁄‰Ì  ‰Â« “„«‰Ì „Ì  Ê«‰œ ò«— ò‰œ òÂ »«“ »«‘œª')
GO
if not exists (select * from  lifetips where id=11) 
insert into lifetips values(11,'´‘⁄«— ê«·Ì·Âª: ò«— ò‰Ìœ  « Â„Â €’ÂùÂ« Ê Å—Ì‘«‰ÌÂ«Ì ŒÊœ —« ›—«„Ê‘ ò‰Ìœ.')
GO
if not exists (select * from  lifetips where id=12) 
insert into lifetips values(12,'´„‰ ¬Ì‰œÂ —« œÊ”  œ«—„ “Ì—« »ﬁÌÂ ⁄„—„ —« »«Ìœ œ— ¬‰ »ê–—«‰„ª')
GO
if not exists (select * from  lifetips where id=13)
insert into lifetips values(13,'´„Ê›ﬁÌ ª »œ” ù¬Ê—œ‰ çÌ“Ì «”  òÂ œÊ”  œ«—Ì Ê ´ŒÊ‘»Œ Ìª œÊ”  œ«‘ ‰ çÌ“Ì «”  òÂ »œ” ù¬Ê—œÂù«Ì.')
GO
if not exists (select * from  lifetips where id=14)
insert into lifetips values(14,'´ÂÌç Êﬁ  »« ÌÂ ¬œ„ «Õ„ﬁ œÂ‰ »Â œÂ‰ ‰‘Ê. çÊ‰ ﬂ”«‰Ì ﬂÂ «“ »Ì—Ê‰ ‰Ÿ«—Âùê— «Ì‰ œ⁄Ê« Â” ‰œ° «Õ„ﬁù — «“ «Ê‰Ì Â” ‰œ ﬂÂ » Ê‰‰ 
 ‘ŒÌ’ »œ‰ Õﬁ »«  Ê∆Â Ì« «Ê‰.ª')
GO
if not exists (select * from  lifetips where id=15) 
insert into lifetips values(15,'´Ìò «‰”«‰ »« Ã—«  Ìò Ã„⁄Ì  «” ª')
GO
if not exists (select * from  lifetips where id=16) 
insert into lifetips values(16,'¬œ„ Â«Ì »“—ê »Â ŒÊ‘Ì Â«Ì òÊ «Â Â‰ê«„  ‰ ‰„Ì œÂ‰œ .')
GO
if not exists (select * from  lifetips where id=17) 
insert into lifetips values(17,'¬œ„Ì „Ì  Ê«‰œ »«—Â« Ê »«—Â« »Â ‘ÌÊÂ Â«Ì êÊ‰«êÊ‰ ﬁÂ—„«‰ ‘Êœ .')
GO
if not exists (select * from  lifetips where id=18) 
insert into lifetips values(18,'¬‰òÂ „ÌùŒÊ«Âœ —Ê“Ì Å—Ìœ‰ ¬„Ê“œ° ‰Œ”  „Ìù»«Ìœ «Ì” «œ‰° —«Â —› ‰° œÊÌœ‰ Ê »«·«—› ‰ ¬„Ê“œ. Å—Ê«“ —« »« Å—Ê«“ ¬€«“ ‰„Ìùò‰‰œ.†† ‰ÌçÂ')
GO
if not exists (select * from  lifetips where id=19) 
insert into lifetips values(19,'«“ «Ì‰ òÂ „‰ ò«‘ „ Ê œÌê—«‰ »—œ«‘ ‰œ ê·Â «Ì ‰œ«—„. Å‘Ì„«‰Ì ›ﬁÿ Êﬁ Ì „⁄‰Ì œ«—œ òÂ »ò«—Ì„ «„« ò”Ì œ—Ê ‰ò‰œ.')
GO
if not exists (select * from  lifetips where id=20) 
insert into lifetips values(20,'«“ ⁄«Ã“ —Ì‰ „—œ„ ò”Ì «”  òÂ ‰ Ê«‰œ œÊ”  ÅÌœ« ò‰œ Ê «“ «Ê ⁄«Ã“ — ¬‰òÂ œÊ” ‘ —« «“ ŒÊœ œÊ— ò‰œ. «„«„ ⁄·Ì(⁄)')
GO
if not exists (select * from  lifetips where id=21) 
insert into lifetips values(21,'«‘ »«Â —« „ÕòÊ„ ò‰ ‰Â ¬‰òÂ «‘ »«Â «“ «Ê ”— “œÂ . ´‘ò”ÅÌ—ª')
GO
if not exists (select * from  lifetips where id=22) 
insert into lifetips values(22,'«‘ »«Â«  «‰”«‰Â«Ì »“—ê ﬁ«»· «Õ —«„ «”  . “Ì—« À„— »Œ‘  — «“ Õﬁ«Ìﬁ «‰”«‰Â«Ì òÊçò «” . ´›—œ—Ì‘ ‰ÌçÂª')
GO
if not exists (select * from  lifetips where id=23) 
insert into lifetips values(23,'«ê— ¬œ„ ŒÊ»Ì »«  Ê »œÌ ò—œ°ç‰«‰ Ê«‰„Êœ ò‰ òÂ ‰›Â„ÌœÂù«Ì. «Ê  ÊÃÂ ŒÊ«Âœ ò—œ Ê „œ  “Ì«œÌ „œÌÊ‰  Ê ŒÊ«Âœ »Êœ.† ÌÊÂ«‰ Ê·›ê«‰ê êÊ Â')
GO
if not exists (select * from  lifetips where id=24) 
insert into lifetips values(24,'«ê— ¬œ„ ŒÊ»Ì »Â  Ê »œÌ ò—œ ç‰«‰ Ê«‰„Êœ ò‰ òÂ ‰›Â„ÌœÂ «Ì «Ê “„«‰ “Ì«œÌ —« „œÌÊ‰  Ê ‰ŒÊ«Âœ „«‰œ. «›·«ÿÊ‰')
GO
if not exists (select * from  lifetips where id=25) 
insert into lifetips values(25,'«ê— ¬—„«‰ ‘„« œ— Œœ„  œÌê—«‰ ‰Ì” ° ·«»œ ¬—„«‰Ì ÕﬁÌ— «” .')
GO
if not exists (select * from  lifetips where id=26) 
insert into lifetips values(26,'«ê— «“ ò”Ì „ ‰›—Ì «“ ﬁ”„ Ì «“ ŒÊœ  œ— «Ê „ ‰›—Ì° çÌ“Ì òÂ «“ „« ‰Ì”  ‰„Ìù Ê«‰œ «›ò«— „« —« „€‘Ê‘ ò‰œ.††† Â—„«‰ Â”Â')
GO
if not exists (select * from  lifetips where id=27) 
insert into lifetips values(27,'«ê— «„—Ê“ ŒÊ«” Ì Ê ‰ Ê«‰” Ì ° òÂ „⁄–Ê—Ì ... Ê·Ì «ê— —Ê“Ì  Ê«‰” Ì Ê ‰ŒÊ«” Ì ° „‰ Ÿ— —Ê“Ì »«‘ òÂ »ŒÊ«ÂÌ Ê ‰ Ê«‰Ì . ´ ›—œ—Ì‘ 
‰ÌçÂª')
GO
if not exists (select * from  lifetips where id=28) 
insert into lifetips values(28,'«ê— Œ·ﬁ Ê ŒÊÌ ŒÊœ —« ò‰ —· ‰ò‰Ìœ° »—‰œÂ ‰ŒÊ«ÂÌœ ‘œ.')
GO
if not exists (select * from  lifetips where id=29) 
insert into lifetips values(29,'«ê— œ”   ﬁœÌ— Ê ”—‰Ê‘  —« ›—«„Ê‘ ò‰Ì„ Å” «“ ÅÌ‘—›  ‰Ì“ «›”—œÂ Ê —‰ÃÊ— ŒÊ«ÂÌ„ ‘œ .')
GO
if not exists (select * from  lifetips where id=30) 
insert into lifetips values(30,'«ê— œÊ”  œ«—Ì «“ ·ÕŸ«  ŒÊœ «” ›«œÂ ò‰Ì .·–  ŒÊœ Ê «” ›«œÂ ŒÊœ —« «“ Â„«‰ œﬁ«Ìﬁ Ê À«‰ÌÂ Â« »œ«‰. «›·«ÿÊ‰')
GO
if not exists (select * from  lifetips where id=31) 
insert into lifetips values(31,'«ê— “‰œêÌ «  œ— Œÿ— ‰Ì” . ŒÊœ —« »Â ” Ì“ „Ì›ò‰.')
GO
if not exists (select * from  lifetips where id=32) 
insert into lifetips values(32,'«ê— ﬁ—«— »«‘œ »«Ì” Ì Ê »Â ÿ—› Â— ”êÌ òÂ Å«—” „Ìùò‰œ ”‰ê Å— «» ò‰Ì° Â—ê“ »Â „ﬁ’œ ‰„Ìù—”Ì.†† ·«—‰” «” —‰')
GO
if not exists (select * from  lifetips where id=33) 
insert into lifetips values(33,'«ê— „ÌùŒÊ«ÂÌœ œ— “‰œêÌ œÊ” «‰ Ê›«œ«— Ê Ì«—«‰ €„ŒÊ«— œ«‘ Âù»«‘Ìœ° ò„ Ê ŒÌ·Ì œÌ— »« „—œ„ œÊ”  ‘ÊÌœ .´Â—‘·ª')
GO
if not exists (select * from  lifetips where id=34) 
insert into lifetips values(34,'«ê— „Ìùœ«‰” ‰œ  « ﬂ‰Ê‰ ç‰œ »«— Õ—›Â«Ì œÌê—«‰ —« »œ ›Â„ÌœÂù«‰œ° ÂÌçﬂ” œ— Ã„⁄ «Ì‰Â„Â Å— Õ—›Ì ‰„Ìùﬂ—œ. ÌÊÂ«‰ Ê·›ê«‰ê êÊ Â')
GO
if not exists (select * from  lifetips where id=35) 
insert into lifetips values(35,'«ê— Â„Ê«—Â „«‰‰œ ê–‘ Â »Ì‰œÌ‘Ìœ° Â„Ì‘Â Â„«‰ çÌ“Â«ÌÌ —« »Âùœ”  „Ìù¬Ê—Ìœ ﬂÂ  « »Õ«· ﬂ”» ﬂ—œÂù«Ìœ .›«Ì‰„‰')
GO
if not exists (select * from  lifetips where id=36) 
insert into lifetips values(36,'«‰”«‰ »—«Ì ÅÌ—Ê“Ì ¬›—ÌœÂ ‘œÂ «” ° «Ê —« „Ì Ê«‰ ‰«»Êœ ò—œ Ê·Ì ‰„Ì Ê«‰ ‘ò”  œ«œ. ´„«ÂÌêÌ— Êœ—Ì«ª† «—‰”  Â„Ì‰êÊÌ')
GO
if not exists (select * from  lifetips where id=37) 
insert into lifetips values(37,'«‰”«‰ ‰ﬁÿÂ «Ì «”  »Ì‰ œÊ »Ì ‰Â«Ì .»Ì ‰Â«Ì  ·Ã‰ Ê »Ì ‰Â«Ì  ›—‘ Â .†"† ´œò — ‘—Ì⁄ Ìª')
GO
if not exists (select * from  lifetips where id=38) 
insert into lifetips values(38,'«Ì‰†‘ÌÊÂ ”ê «”  òÂ†»Â  ·«›Ì ”‰êÌ òÂ »Â «Ê “œÂù«‰œ° ”ê œÌê—Ì —« ê«“ „ÌùêÌ—œ. ´“Â«—ª')
GO
if not exists (select * from  lifetips where id=39) 
insert into lifetips values(39,'»«ÿ‰ Ê”Ì—  „—œ„ —« œ— ÕÌ‰ »œ»Œ Ì ¬‰«‰ „Ìù Ê«‰ ‘‰«Œ .††† œ«‰Ì«· ‰»Ì')
GO
if not exists (select * from  lifetips where id=40) 
insert into lifetips values(40,'»«·« — «“ Â„Â çÌ“ «Ì‰ù«” ùòÂ »« ŒÊœ„«‰ ’«œﬁ »«‘Ì„. ´ÊÌ·Ì«„ ‘ò”ÅÌ—ª')
GO
if not exists (select * from  lifetips where id=41)
insert into lifetips values(41,'»œ —Ì‰ Ê Œÿ—‰«ò —Ì‰ ò·„«  «Ì‰” : ´Â„Â «Ì‰ ÃÊ—‰œª.  Ê·” ÊÌ')
GO
if not exists (select * from  lifetips where id=42)
insert into lifetips values(42,'»œÊ‰ œ«‘ ‰ »«“Ìò‰ Â«Ì »“—ê «„ò«‰ »—œ‰ ÊÃÊœ œ«—œ «„« »« œ«‘ ‰ »«“Ìò‰ Â«Ì »“—ê Â„ „Ì  Ê«‰ „Ìœ«‰ —« »Â Õ—Ì› Ê«ê–«— ò—œ.')
GO
if not exists (select * from  lifetips where id=43) 
insert into lifetips values(43,'»—«Ì «“œÊ«Ã ò—œ‰ ·ÕŸÂù«Ì œ—‰ê ‰ò‰Ìœ. «ê— “‰ ŒÊ»Ì ‰’Ì» «‰ ‘Êœ° ŒÊ‘»Œ  „Ìùê—œÌœ Ê «ê— “‰ »œÌ êÌ— «‰ ¬„œ [„À· „‰] ›Ì·”Ê› 
„Ìù‘ÊÌœ. ´”ﬁ—«ÿª')
GO
if not exists (select * from  lifetips where id=44) 
insert into lifetips values(44,'»—«Ì  —»Ì  «—«œÂ »Â —Ì‰ “„«‰ «Ì«„ ÃÊ«‰Ì «” . ´›ÌÀ«€Ê—Àª')
GO
if not exists (select * from  lifetips where id=45)
insert into lifetips values(45,'»“—ê  —Ì‰ œ” «Ê—œÂ«Ì  «—ÌŒ ò«— «‰”«‰ Â«ÌÌ »ÊœÂ òÂ ›ﬁÿ «‰œòÌ «“ «‰»ÊÂ Â„ «Ì«‰ ŒÊœ ÅÌ‘  — »ÊœÂ «‰œ.')
GO
if not exists (select * from  lifetips where id=46) 
insert into lifetips values(46,'»“—ê —Ì‰ œ—” “‰œêÌ «Ì‰” ùòÂ ê«ÂÌ «Õ„ﬁùÂ« Â„ œ—”  „ÌùêÊÌ‰œ. ÊÌ‰” Ê‰ ç—çÌ·')
GO
if not exists (select * from  lifetips where id=47) 
insert into lifetips values(47,'»‰œÂ ¬‰Ì òÂ œ— »‰œ ¬‰Ì. ´«»Ê”⁄Ìœ «»Êù«·ŒÌ—ª')
GO
if not exists (select * from  lifetips where id=48) 
insert into lifetips values(48,'»Â Ã«Ì «Ì‰ ﬂÂ ”⁄Ì ﬂ‰Ìœ „—œ „Ê›ﬁÌ  »«‘Ìœ° ”⁄Ì ﬂ‰Ìœ „—œ «—“‘Â« »«‘Ìœ.¬·»—  «‰Ì‘ Ì‰')
GO
if not exists (select * from  lifetips where id=49) 
insert into lifetips values(49,'»Â —Ì‰ œÊ”   Ê ¬‰”  òÂ «‘ »«Â«   Ê —« ›—«„Ê‘ ò‰œ Ê ŒÊ»ÌÂ«Ì  —« »Â Ì«œ œ«‘ Â »«‘œ.«„«„ Õ”‰ ⁄”ê—Ì(⁄)')
GO
if not exists (select * from  lifetips where id=50) 
insert into lifetips values(50,'»Â —Ì‰ ò«—° ò«—Ì «”  òÂ «“ «‰Ã«„ ¬‰ ·–  „Ì »—Ì„. ‘€·Ì —« »Å–Ì— òÂ ⁄«‘ﬁ ¬‰ »«‘Ì.')
GO
if not exists (select * from  lifetips where id=51) 
insert into lifetips values(51,'ÅÊ· ŒÊ‘»Œ Ì ‰„Ìù¬Ê—œ ... «„« ‘ò· œ·Å–Ì— —Ì «“ »œ»Œ Ì —« »—«Ì «‰ ›—«Â„ „Ìù”«“œ. ´«”Å«Ìò „Ì·Ìê«‰ª')
GO
if not exists (select * from  lifetips where id=52) 
insert into lifetips values(52,'ÅÌ—Ê“Ì ¬‰ ‰Ì”  òÂ Â—ê“ “„Ì‰ ‰ŒÊ—Ì° ¬‰” òÂ »⁄œ«“ Â— “„Ì‰ ŒÊ—œ‰Ì »—ŒÌ“Ì.† ê«‰œÌ')
GO
if not exists (select * from  lifetips where id=53) 
insert into lifetips values(53,' ›«Ê  »—‰œÂ Ê »«“‰œÂ œ— ⁄„· Ê »Ì ⁄„·Ì «” ')
GO
if not exists (select * from  lifetips where id=54) 
insert into lifetips values(54,' ‰Â« 99 œ—’œ „—œÂ« Â” ‰œ òÂ »«⁄À »œ‰«„Ì 1 œ—’œ »«ﬁÌ „«‰œÂ „Ì ‘Ê‰œ !')
GO
if not exists (select * from  lifetips where id=55) 
insert into lifetips values(55,' ‰Â« ›—ﬁ »Ì‰ „Ê›ﬁÌ  Ê ‘ò” ° ‰Ê⁄ ‰ê«Â «” .')
GO
if not exists (select * from  lifetips where id=56) 
insert into lifetips values(56,'ç‰«‰ »«‘ òÂ »Â Â„Â » Ê«‰Ì »êÊ∆Ì çÊ‰ „‰ »«‘ ! ´ò«‰ ª')
GO
if not exists (select * from  lifetips where id=57) 
insert into lifetips values(57,'çÂ«— —Ê‘ »—«Ì « ·«› Êﬁ  ÊÃÊœ œ«—œ: ò«—ù‰ò—œ‰° ò„ ò«—ùò—œ‰° »œ ò«—ùò—œ‰ Ê ò«— »ÌÂÊœÂù ò—œ‰.†´¬»ÂùœÊ·«ù—Ê‘ª†')
GO
if not exists (select * from  lifetips where id=58) 
insert into lifetips values(58,'Õ Ì „Ì„Ê‰Â« ‰Ì“ ê«ÂÌ «“ œ—Œ  „Ìù«› ‰œ. ´÷—»ù«·„À·ùé«Å‰Ìª')
GO
if not exists (select * from  lifetips where id=59) 
insert into lifetips values(59,'ÕﬁÌﬁ  »—«Ì ¬œ„Ì° Â„«‰”  ﬂÂ «“ «Ê Ìﬂ ¬œ„ „Ìù”«“œ. ´“„Ì‰ «‰”«‰Â«ª¬‰ Ê«‰ ”‰  «ê“ÊÅ—Ì')
GO
if not exists (select * from  lifetips where id=60) 
insert into lifetips values(60,'ÕﬁÌﬁ  çÌ“Ì ‰Ì”  òÂ ‰Ê‘ Â „Ìù‘Êœ .. ¬‰ çÌ“Ì «”  òÂ ”⁄Ì „Ìù‘Êœ Å‰Â«‰ »„«‰œ!')
GO
if not exists (select * from  lifetips where id=61) 
insert into lifetips values(61,'Œœ«Ê‰œ ¬“«œÌ†—« ¬›—Ìœ†Ê »‘— »‰œêÌ —«. ´¬‰œ—Â ‘Ì‰Âª†')
GO
if not exists (select * from  lifetips where id=62) 
insert into lifetips values(62,'Œ—œ„‰œ »Â ò«— ŒÊÌ‘  òÌÂ „Ìò‰œ Ê ‰«œ«‰ »Â ¬—“ÊÌ ŒÊÌ‘ . ´Õ÷—  ⁄·Ì (⁄)ª')
GO
if not exists (select * from  lifetips where id=63) 
insert into lifetips values(63,'Œ‰œÂ ›—«Ê«‰ Ê »·‰œ Ê ÅÌêÌ— ° ‰›Ì— ›—« —”Ìœ‰ Â‰ê«„Â —‰Ã Ê ”Œ Ì «” .')
GO
if not exists (select * from  lifetips where id=64) 
insert into lifetips values(64,'ŒÊ» êÊ‘ ò—œ‰ —« Ì«œ »êÌ—Ì„ ... ê«Â ›—’ Â« »”Ì«— ¬Â” Â œ— „Ì “‰‰œ . "')
GO
if not exists (select * from  lifetips where id=65) 
insert into lifetips values(65,'œ— »Ì‰  „«„Ì „—œ„  ‰Â« ⁄ﬁ· «”  ﬂÂ »Â ⁄œ«·   ﬁ”Ì„ ‘œÂ “Ì—« Â„Â ›ﬂ— „Ìùﬂ‰‰œ »Â «‰œ«“Â ﬂ«›Ì ⁄«ﬁ·‰œ.† —‰Â œﬂ«— ')
GO
if not exists (select * from  lifetips where id=66) 
insert into lifetips values(66,'œ— ÃÂ«‰  ‰Â« œÊ ê—ÊÂ «“ „—œ„ Â” ‰œ òÂ Â—ê“  €ÌÌ— ‰„ÌùÌ«»‰œ∫ »— —Ì‰ Œ—œ„‰œ«‰ Ê Å” ù —Ì‰ »ÌùŒ—œ«‰.')
GO
if not exists (select * from  lifetips where id=67) 
insert into lifetips values(67,'œ—Ê€ „À· »—› «” ° Â— çÂ ¬‰—« »€· «‰Ìœ »“—ê — „Ì ‘Êœ. †"')
GO
if not exists (select * from  lifetips where id=68) 
insert into lifetips values(68,'œ· »Ì œÊ”  œ—Œ  »Ì À„— «” . Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=69)
insert into lifetips values(69,'œ‰Ì« —« ‰êÂùœ«—Ìœ. „ÌùŒÊ«Â„ ÅÌ«œÂ ‘Ê„. ´¬‰ Ê‰Ì ‰ÌÊ·Ìª')
GO
if not exists (select * from  lifetips where id=70)
insert into lifetips values(70,'œÊ”  Â— ò” Œ—œ Ê œ«‰‘ «Ê Ê œ‘„‰‘ ÃÂ· Ê ‰«œ«‰Ì «Ê” . «„«„ —÷«(⁄)')
GO
if not exists (select * from  lifetips where id=71) 
insert into lifetips values(71,'œÊ” «‰ ÃœÌœ ÅÌœ« ò‰Ìœ «„« œÊ” «‰ ﬁœÌ„Ì —« Â„ Õ›Ÿ ò‰Ìœ° «Ì‰Â« ‰ﬁ—Â Ê ¬‰Â« ÿ·« Â” ‰œ. ´Å—„Êœ«» —«ª')
GO
if not exists (select * from  lifetips where id=72) 
insert into lifetips values(72,'œÊ” «‰ ›—«Ê«‰ ‰‘«‰ œÂ‰œÂ ò«„Ì«»Ì œ— “‰œêÌ ‰Ì”  ° »·òÂ ‰‘«‰ ‰«»ÊœÌ “„«‰ ° »Â êÊ‰Â «Ì ê” —œÂ «” .')
GO
if not exists (select * from  lifetips where id=73) 
insert into lifetips values(73,'œÊ” Ì »« „—œ„ Ìò ‰Ì„Â ⁄ﬁ· Ê ŒÊ» Å—”Ìœ‰ Ìò ‰Ì„Â œ«‰‘.´—”Ê·ù«ò—„(’)ª')
GO
if not exists (select * from  lifetips where id=74) 
insert into lifetips values(74,'œÌÊ«‰êÌ »‘— ¬‰ç‰«‰ ÷—Ê—Ì «”  òÂ œÌÊ«‰Â ‰»Êœ‰ ŒÊœ ‘ò· œÌê—Ì «“ œÌÊ«‰êÌ «” . †Å«”ò«·')
GO
if not exists (select * from  lifetips where id=75) 
insert into lifetips values(75,'—«“ „Êﬁ⁄ œÊ” Ì —« “„«‰ œ‘„‰Ì «»—«“ ò—œ‰∫ œÊ— «“ ÃÊ«‰„—œÌ «‰”«‰Ì  Ê „—œ«‰êÌ «” .«„«„ Ã⁄›— ’«œﬁ(⁄)')
GO
if not exists (select * from  lifetips where id=76) 
insert into lifetips values(76,'“‰ »Êœ‰ ò«— »”Ì«— ‘«ﬁÌ «”  ° çÊ‰ „⁄„Ê·« „” ·“„ ”— Ê ò·Â “œ‰ »« „—œÂ«” ')
GO
if not exists (select * from  lifetips where id=77) 
insert into lifetips values(77,'“‰ “‘  œ— œ‰Ì« ÊÃÊœ ‰œ«—œ ›ﬁÿ »—ŒÌ «“ “‰«‰ Â” ‰œ òÂ ‰„Ìù Ê«‰‰œ ŒÊœ —« “Ì»« Ã·ÊÂ œÂ‰œ.††† »—‰«—œ ‘«Ê')
GO
if not exists (select * from  lifetips where id=78) 
insert into lifetips values(78,'“‰Â«ÌÌ òÂ »Â œ‰»«· »—«»—Ì »« „—œÂ« Â” ‰œ ¬—“ÊÌ »”Ì«— òÊçòÌ œ«—‰œ !  Ì„Ê Ì ·Ì—Ì')
GO
if not exists (select * from  lifetips where id=79) 
insert into lifetips values(79,'“Ì‰ —ÊÌ œ· ⁄«‘ﬁ «“ ⁄—‘ ›“Ê‰ »«‘œ.ª „Ê·ÊÌ:')
GO
if not exists (select * from  lifetips where id=80) 
insert into lifetips values(80,'”—⁄  ÅŒ‘ ‰ê—‘ »œ »Ì‘  — «“ ‰ê—‘ ŒÊ» «” .')
GO
if not exists (select * from  lifetips where id=81) 
insert into lifetips values(81,'”òÊ  ÃÊ«»Ì €Ì—ﬁ«»· Å«”Œ «” .††† Ã. ò. ç” — Ê‰')
GO
if not exists (select * from  lifetips where id=82) 
insert into lifetips values(82,'‘«œÌÂ«Ì ‘„« Â„«‰ €„Â«Ì ‘„«”  òÂ ‰ﬁ«»‘ —« »—œ«‘ Â «‰œ . Ê ç«ÂÌ òÂ Œ‰œÂ Â«Ì «‰ «“ ¬‰ „Ì ÃÊ‘œ Â„«‰ «”  òÂ «“ «‘òÂ«Ì «‰ Å— 
‘œÂ «” . "† ´Ã»—«‰ Œ·Ì· Ã»—«‰ª')
GO
if not exists (select * from  lifetips where id=83) 
insert into lifetips values(83,'‘„« „„ò‰ «”  » Ê«‰Ìœ ê·Ì —« “Ì— Å« ·êœ„«· ò‰Ìœ° «„« „Õ«· «”  » Ê«‰Ìœ ⁄ÿ— ¬‰—« œ— ›÷« „ÕÊ ”«“Ìœ. ´Ê· —∫ ‰ÊÌ”‰œÂ ›—«‰”ÊÌ ÌÌÌÌ-
ÌÌÌÌª')
GO
if not exists (select * from  lifetips where id=84) 
insert into lifetips values(84,'‘ÊÂ—„ ê›  »Â ›÷«Ì »Ì‘ —Ì «Õ Ì«Ã œ«—œ ° „‰ Â„ «Ê —«»Â »Ì—Ê‰ Œ«‰Â ›—” «œ„ Ê œ— —« Å‘  ”—‘ ﬁ›· ò—œ„ "—“ ¬‰Ì')
GO
if not exists (select * from  lifetips where id=85) 
insert into lifetips values(85,'‘òÊÂ œ‰ÌÊÌ Â„çÊ‰ œ«Ì—Âù«Ì «”  »— ”ÿÕ ¬» òÂ ·ÕŸÂ »Â ·ÕŸÂ »Â »“—êÌ ¬‰ «›“ÊœÂ „Ìù‘Êœ Ê ”Å” œ— ‰Â«Ì  »“—êÌ ÂÌç „Ìùù‘Êœ. ´
ÊÌ·Ì«„ ‘ò”ÅÌ—ª')
GO
if not exists (select * from  lifetips where id=86) 
insert into lifetips values(86,'⁄‘ﬁ  ‰Â« »Â ç‘„«‰ ÌòœÌê— ŒÌ—Â ‘œ‰ ‰Ì” ° »·òÂ „ ›ﬁ« »Â »Ì—Ê‰° »Â ÃÂ  „⁄Ì‰Ì ‰ê«Â ò—œ‰ «” .´œò —  «„”.¬.Â—Ì”ª')
GO
if not exists (select * from  lifetips where id=87) 
insert into lifetips values(87,'⁄‘ﬁ ⁄Ì‰ò ”»“Ì «”  òÂ »« ¬‰ «‰”«‰ ò«Â —« ÌÊ‰ÃÂ „Ìù»Ì‰œ.† „«—ò  Ê«Ì‰')
GO
if not exists (select * from  lifetips where id=88) 
insert into lifetips values(88,'›—ﬁ „« »« œÌÊ«‰Â Â« œ— «Ì‰ «”  òÂ „« œ— «òÀ—Ì  Â” Ì„. ´„Ì‘· ›ÊòÊª')
GO
if not exists (select * from  lifetips where id=89) 
insert into lifetips values(89,'›ò— „Ì ò‰Ìœ ﬁ»· «“ «Ì‰òÂ Ìò „—œ «⁄ —«› ò‰œ òÂ ê„ ‘œÂ «”  ç‰œ —«Â œÌê— —« »«Ìœ »«·« Ê Å«ÌÌ‰ »—Êœ Ì!')
GO
if not exists (select * from  lifetips where id=90) 
insert into lifetips values(90,'ﬁ·»Ì œ«‘ Â »«‘ òÂ Â—ê“ ”Œ Ì ”‰ê —« »Â ŒÊœ ‰êÌ—œ Ê «Õ”«”Ì œ«‘ Â »«‘ òÂ Â—ê“ ¬“«— œÂ‰œÂ ‰»«‘œ . "†´ç«—·“ œÌò‰“ª')
GO
if not exists (select * from  lifetips where id=91) 
insert into lifetips values(91,'ﬁÂ—„«‰«‰ ¬‰«‰Ì Â” ‰œ òÂ „Ì œ«‰‰œ òÌ” ‰œ.')
GO
if not exists (select * from  lifetips where id=92) 
insert into lifetips values(92,'ê«Â ¬‰ ﬁœ— ”—ê—„  „Ì“ ò—œ‰ „€«“Â „Ì ‘ÊÌ„ òÂ ›—«„Ê‘ „Ì ò‰Ì„ œ— —« »Â —ÊÌ „‘ —Ì«‰ »«“ ò‰Ì„.')
GO
if not exists (select * from  lifetips where id=93) 
insert into lifetips values(93,'ê«ÂÌ  ‰Â« —«Â œ—„«‰ —Ê«‰Â«Ì Å—Ì‘«‰ ° ›—«„Ê‘Ì «” .')
GO
if not exists (select * from  lifetips where id=94) 
insert into lifetips values(94,'ê› êÊ »« ¬œ„Ì«‰  —”Ê ° ŒÊ«—Ì »œ‰»«· œ«—œ.')
GO
if not exists (select * from  lifetips where id=95) 
insert into lifetips values(95,'·ÕŸ«  —« ê–—«‰œÌ„  « »Â ŒÊ‘»Œ Ì »—”Ì„ «„« œ—Ì€ «“ ¬‰òÂ ·ÕŸ« Ì —« òÂ ê–—«‰œÌ„ Â„«‰ ·ÕŸ«  ŒÊ‘»Œ Ì »Êœ. «›·«ÿÊ‰')
GO
if not exists (select * from  lifetips where id=96) 
insert into lifetips values(96,'„«œ— ‘«Âò«— ÿ»Ì⁄  «” . ´êÊ Âª')
GO
if not exists (select * from  lifetips where id=97)
insert into lifetips values(97,'„œ Â« ÅÌ‘ ¬„ÊŒ „ òÂ ‰»«Ìœ »« ŒÊò ò‘ Ì ê—› ° ŒÌ·Ì òÀÌ› „Ìùù‘ÊÌ Ê „Â„ù — ¬‰òÂ ŒÊò «— «Ì‰ ò«— ·–  „Ìù»—œ.')
GO
if not exists (select * from  lifetips where id=98)
insert into lifetips values(98,'„—«ﬁ» »«‘Ìœ çÌ“Â«ÌÌ —« òÂ œÊ”  œ«—Ìœ »œ” ù¬Ê—Ìœ Êê—‰Â ‰«ç«—ŒÊ«ÂÌœ »Êœ çÌ“Â«ÌÌ —« òÂ »œ”  ¬Ê—œÂù«Ìœ œÊ”  œ«‘ Âù»«‘Ìœ† Ã—Ã »—‰«—œ 
‘«Ê')
GO
if not exists (select * from  lifetips where id=99) 
insert into lifetips values(99,'„—œ„«‰  Ê«‰„‰œ œ— ŒÊ«» ‰Ì“ ° —Â”Å«— Ã«œÂ ÅÌ‘—› ‰œ .')
GO
if not exists (select * from  lifetips where id=100) 
insert into lifetips values(100,'„—œÂ« «“ ’›  ÃÊ«‰ »—«Ì “‰Â«Ì “Ì— 18 ”«· Ê „—œÂ«Ì “Ì— 80 ”«· «” ›«œÂ „Ì ò‰‰œ !!! "‰«‰”Ì ·Ì‰ œ“„Ê‰œ')
GO
if not exists (select * from  lifetips where id=101) 
insert into lifetips values(101,'„—œÂ« œ«—«Ì ﬁÊÂ Ì »Ì‰«ÌÌ Â” ‰œ Ê·Ì “‰Â« «“ »Ì‰‘ »—ŒÊ—œ«—‰œ . ÊÌò Ê— ÂÊêÊ')
GO
if not exists (select * from  lifetips where id=102) 
insert into lifetips values(102,'„—œÂ« —« ‘Ã«⁄  »Â Ã·Ê „Ìù—«‰œ Ê “‰Â« —« Õ”«œ . »—‰«—œ ‘«Ê')
GO
if not exists (select * from  lifetips where id=103) 
insert into lifetips values(103,'„‰ ” «Ì‘ê— „⁄·„Ì Â” „ òÂ «‰œÌ‘Ìœ‰ —« »Â „‰ »Ì«„Ê“œ ‰Â «‰œÌ‘Â Â« —«. ´«” «œ „ÿÂ—Ìª')
GO
if not exists (select * from  lifetips where id=104) 
insert into lifetips values(104,'‰Œ” Ì‰ ‰‘«‰Â ›”«œ  —ò ’œ«ﬁ  «” . ´„Ì‘· œÊ „Ê‰ Ìª')
GO
if not exists (select * from  lifetips where id=105) 
insert into lifetips values(105,'‰ﬁÌ÷ Ìò ﬁ÷ÌÂ ’«œﬁ Ìò ﬁ÷ÌÂ ò«–» «” ° «„« ‰ﬁÌ÷ Ìò ÕﬁÌﬁ  é—› ê«ÂÌ ÕﬁÌﬁ  é—› œÌê—Ì «” . ´‰Ì·” »Ê—ª')
GO
if not exists (select * from  lifetips where id=106) 
insert into lifetips values(106,'‰ê«Â „« »Â “‰œêÌ Ê ò—œ«— „«  ⁄ÌÌ‰ ò‰‰œÂ Ì ÕÊ«œÀÌ «”  òÂ »— „« „Ì ê–—œ.')
GO
if not exists (select * from  lifetips where id=107) 
insert into lifetips values(107,'‰ê—‘ Â« Ê«êÌ—œ«— Â” ‰œ.')
GO
if not exists (select * from  lifetips where id=108) 
insert into lifetips values(108,'‰„Ìù Ê«‰Ì„ ò«—Ì ò‰Ì„ òÂ „—€«‰ €„ »«·«Ì ”— „« Å—Ê«“ ‰ò‰‰œ «„« „Ìù Ê«‰Ì„ ‰ê–«—Ì„ òÂ —ÊÌ ”— „« ¬‘Ì«‰Â »”«“‰œ. ´÷—»ù«·„À· çÌ‰Ìª')
GO
if not exists (select * from  lifetips where id=109) 
insert into lifetips values(109,'‰Â «“ ŒÊœ   ⁄—Ì› ò‰ Ê ‰Â »œêÊÌÌ. «ê— «“ ŒÊœ   ⁄—Ì› ò‰Ì ﬁ»Ê· ‰„Ìùò‰‰œ Ê «ê— »œêÊÌÌ ò‰Ì »Ì‘ «“ ¬‰çÂ «ŸÂ«— œ«‘ Ì  Ê —« »œ ŒÊ«Â‰œ 
Å‰œ«‘ . † ò‰›Ê”ÌÊ”')
GO
if not exists (select * from  lifetips where id=110) 
insert into lifetips values(110,'Â— çÂ „Ê«‰⁄ ÃœÌ  — Ê ”Œ   — »«‘œ , ·–   ·«‘ Ê ÅÌ—Ê“Ì »Ì‘ — «”  . ´«—Ìﬂ »« —ÊÊ— ª')
GO
if not exists (select * from  lifetips where id=111) 
insert into lifetips values(111,'Â—ê“ œ— „Ì«‰ „ÊÃÊœ«  „Œ·ÊﬁÌ ﬂÂ »—«Ì ﬂ»Ê — ‘œ‰ ¬›—ÌœÂ ‘œÂ ﬂ—ﬂ” ‰„Ì‘Êœ. «Ì‰ Œ’·  œ— „Ì«‰ ÂÌç Ìﬂ «“ „Œ·Êﬁ«  ‰Ì”  Ã“ 
¬œ„Ì«‰. ´ÊÌﬂ Ê—ÂÊêÊ∫ »Ì‰Ê«Ì«‰ª')
GO
if not exists (select * from  lifetips where id=112) 
insert into lifetips values(112,'Â—ê“ „—œÌ Ê·Ê »”Ì«— ‰«œ«‰ —« ‰œÌœ„ òÂ «“ ÊÌ çÌ“Ì ‰ Ê«‰” Âù«„ »Ì«„Ê“„.† ê«·Ì·Â')
GO
if not exists (select * from  lifetips where id=113) 
insert into lifetips values(113,'Â„ —‰ê œÌê— ò”«‰ ‘œ‰ ° »«Ê— ÂÌç òœ«„ «“ »“—ê«‰ ‰»ÊœÂ «”  .')
GO
if not exists (select * from  lifetips where id=114) 
insert into lifetips values(114,'Â„Â „—œ„ —« ´»⁄÷Ì „Ê«ﬁ⁄ª „Ìù Ê«‰ ›—Ì›  Ê »⁄÷Ì «“ „—œ„ —« »—«Ì ´Â„Â ⁄„—ª. ·Ìò‰ ‰„Ì Ê«‰ Â„Â „—œ„ —« »—«Ì Â„Â ⁄„— ›—Ì» œ«œ.')
GO
if not exists (select * from  lifetips where id=115) 
insert into lifetips values(115,'Â„Ì‘Â œ—  “‰œêÌ «  Âœ› Ê »—‰«„Â —Ì“Ì œ«‘ Â »«‘. «›·«ÿÊ‰')
GO
if not exists (select * from  lifetips where id=116) 
insert into lifetips values(116,'ÂÌç çÌ“ »Â — «“ ò«— ò—œ‰ »Ã«Ì €’Â ŒÊ—œ‰° ¬œ„Ì —« »Â ŒÊ‘»Œ Ì ‰“œÌò ‰„Ìù”«“œ. ´„Ê—Ì” „ —·Ì‰êª')
GO
if not exists (select * from  lifetips where id=117) 
insert into lifetips values(117,'ÂÌç ‘⁄—Ì ‘«⁄— ‰œ«—œ° Â— ŒÊ«‰‰œÂùÌ ‘⁄—Ì ‘«⁄— ¬‰ ·ÕŸÂùÌ ‘⁄— «” .† †Å«»·Ê ‰—Êœ«')
GO
if not exists (select * from  lifetips where id=118) 
insert into lifetips values(118,'ÂÌçÊﬁ  »« ¬œ„Â«Ì »œ Ê „‰›Ì Â„’Õ»  ‰»«‘ Ê »« «Ê‰Â« —«»ÿÂ ‰œ«‘ Â »«‘. «êÂ  Ê ŒÊ»Ì  Ê —« »Â —«Â »œ „Ìò‘‰œ.')
GO
if not exists (select * from  lifetips where id=119) 
insert into lifetips values(119,'ÂÌçÊﬁ  ‰„Ìù Ê«‰Ìœ »« „‘  ê—Âùò—œÂ œ”  ò”Ì —« »Â ê—„Ì »›‘«—Ìœ.† ê«‰œÌ')
GO
if not exists (select * from  lifetips where id=120) 
insert into lifetips values(120,'ÊÃœ«‰ ’œ«Ì Œœ«Ê‰œÌ «” . ´·«„«— Ì‰ª')
GO
if not exists (select * from  lifetips where id=121) 
insert into lifetips values(121,'ÊŸÌ›Â »«⁄À „Ìù‘Êœ  « ò«—Â« —« »ÂùŒÊ»Ì «‰Ã«„ œÂÌ° «„« ⁄‘ﬁ ò„ò „Ìùò‰œ  « ¬‰ùÂ« —« “Ì»« «‰Ã«„ œÂÌ. ´÷—» «·„À· òÊ»«ÌÌª')
GO
if not exists (select * from  lifetips where id=122) 
insert into lifetips values(122,'Êﬁ Ì «‰”«‰ œÊ”  Ê«ﬁ⁄Ì œ«—œ ﬂÂ ŒÊœ‘ Â„ œÊ”  Ê«ﬁ⁄Ì »«‘œ. ´«„—”Ê‰ª')
GO
if not exists (select * from  lifetips where id=123) 
insert into lifetips values(123,'Êﬁ Ì ÃÊ«‰ — »Êœ„ Â„Â çÌ“ —« »Â Œ«ÿ— „Ìù¬Ê—œ„° Õ«·« „ÌùŒÊ«”  « ›«ﬁ «› «œÂ »«‘œ Ì« ‰Â!´ „«—ò  Ê«Ì‰ª')
GO
if not exists (select * from  lifetips where id=124) 
insert into lifetips values(124,'Êﬁ Ì ﬂ»Ê —Ì ‘—Ê⁄ »Â „⁄«‘—  »« ﬂ·«€Â« „Ìﬂ‰œ Å—Â«Ì‘ ”›Ìœ „Ì„«‰œ° Ê·Ì ﬁ·»‘ ”Ì«Â „Ì‘Êœ. ´„«—ﬂ  Ê«Ì‰ª')
GO
if not exists (select * from  lifetips where id=125)
insert into lifetips values(125,'Êﬁ Ì ‰Â«· ¬“«œÌ —Ì‘Â ê—›  »Â ”—⁄  —‘œ Ê‰„Ê „Ìùò‰œ. ´ÃÊ—Ã Ê«‘‰ê ‰ª')
GO
if not exists (select * from  lifetips where id=126)
insert into lifetips values(126,'Êﬁ Ì Â„Â »« „‰ Â„ù⁄ﬁÌœÂ „Ìùù‘Ê‰œ  «“Â «Õ”«” „Ìùò‰„ òÂ «‘ »«Â ò—œÂù«„. ´«”ò«— Ê«Ì·œª')
GO
if not exists (select * from  lifetips where id=127) 
insert into lifetips values(127,'Ì.Œ«‰Â »œÊ‰ “‰ ⁄›Ì›° êÊ—” «‰ «” . ´»«·“«ﬂª')
GO
if not exists (select * from  lifetips where id=128) 
insert into lifetips values(128,'Ì« ç‰«‰ ‰„«Ì òÂ Â” Ì° Ì« ç‰«‰ »«‘ òÂ „Ìù‰„«ÌÌ†´»«Ì“Ìœ »”ÿ«„Ìª')
GO
if not exists (select * from  lifetips where id=129) 
insert into lifetips values(129,'ò«—«ÌÌ «”«” »ﬁ« «” . «À—»Œ‘Ì «”«” „Ê›ﬁÌ  «” .')
GO
if not exists (select * from  lifetips where id=130) 
insert into lifetips values(130,'ò«—„‰œ«‰ ‰«»ò«— ° «“ œ“œ«‰ Ê ¬‘Ê»ê—«‰ »Ì‘ — »Â ò‘Ê— ¬”Ì» „Ì —”«‰‰œ.')
GO
if not exists (select * from  lifetips where id=131) 
insert into lifetips values(131,'ò”Ì òÂ »Â „‰ «⁄ „«œ „Ì ò‰œ° «“ ò”Ì ﬂÂ „—« œÊ”  œ«—œ ê«„Ì ›—« — ‰Â«œÂ «” .')
GO
if not exists (select * from  lifetips where id=132) 
insert into lifetips values(132,'ò”Ì òÂ “Ì«œ Õ“› „Ìù“‰œ°†Ì« “Ì«œ „Ìùœ«‰œ Ì« “Ì«œ œ—Ê€ „ÌùêÊÌœ.')
GO
if not exists (select * from  lifetips where id=133) 
insert into lifetips values(133,'ò”Ì òÂ „ÌùŒÊ«Âœ —«“Ì —« Õ›Ÿ ò‰œ »«Ìœ «Ì‰ Ê«ﬁ⁄Ì  —« òÂ —«“Ì œ«—œ° ò „«‰ ò‰œ.† †êÊ Â')
GO
if not exists (select * from  lifetips where id=134) 
insert into lifetips values(134,'ò”ÌùòÂ Õ›Ÿ Ã«‰ —« „ﬁœ„ »— ¬“«œÌ »œ«‰œ° ·Ì«ﬁ  ¬“«œÌ —« ‰œ«—œ. ´»‰Ã«„Ì‰ ›—«‰ò·Ì‰ª')
GO
if not exists (select * from  lifetips where id=135) 
insert into lifetips values(135,'ç‰«‰ ‰Ì”  òÂ Â— ê—› «— »Â »·«ÌÌ ﬁ«»· „·«„  »«‘œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=136) 
insert into lifetips values(136,'«„Ê— ç‰«‰  ”·Ì„ „ﬁœ—«  Â” ‰œ òÂ Õ Ì ê«ÂÌ  œ»Ì— „ÊÃ» „—ê „Ì ‘Êœ.      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=137) 
insert into lifetips values(137,'Â— ò” òÂ «›”«—‘ —« »Â ¬—“ÊÌ‘ »”Å«—œ ° »Â Ê”Ì·Â «Ã· «“ Å«Ì œ— „Ì ¬Ìœ.      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=138) 
insert into lifetips values(138,'Â—ò” òÂ ⁄„·‘ «Ê—« ⁄ﬁ» »Ì‰œ«“œ ‰é«œ Ê ‰”»‘ ‰„Ì  Ê«‰œ «Ê —« ÅÌ‘ »»—œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=139) 
insert into lifetips values(139,'„«œ«„Ì òÂ œ—œ  »«  Ê „Ì ”«“œ  Ê Â„ »« œ—œ  »”«“.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=140) 
insert into lifetips values(140,'»Â —Ì‰ Å«—”«ÌÌ Å‰Â«‰ œ«‘ ‰ Å«—”«ÌÌ «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=141) 
insert into lifetips values(141,'¬œ„ ‰ÌòÊò«— «“ ŒÊœ ò«— »Â — Ê ⁄«„· ‘— «“ ŒÊœ ‘— »œ  — «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=142) 
insert into lifetips values(142,'» —”Ìœ «“ Õ„·Â ‘Œ’ ò—Ì„ „Êﬁ⁄Ì òÂ ê—”‰Â ‘Êœ Ê «‰”«‰ Å”  „Êﬁ⁄Ì òÂ ”Ì— ‘Êœ.      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=143) 
insert into lifetips values(143,'⁄Ì»  Ê „«œ«„Ì òÂ œ‰Ì« »Â  Ê —ÊÌ ¬Ê—œÂ «”  ÅÊ‘ÌœÂ «” .      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=144) 
insert into lifetips values(144,'»Ì ‰Ì«“Ì œ— €—»  Êÿ‰ «”  Ê ‰Ì«“„‰œÌ œ— Êÿ‰ €—» .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=145) 
insert into lifetips values(145,'“»«‰ ÕÌÊ«‰Ì œ—‰œÂ «”  «ê— —Â« ‘Êœ „Ì ê“œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=146) 
insert into lifetips values(146,'‰«œ«‰ —« ‰ŒÊ«ÂÌ œÌœ „ê— Ì« «›—«ÿ ê— Ì«  ›—Ì ê—.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=147) 
insert into lifetips values(147,'Â‰ê«„Ì òÂ ⁄ﬁ· ò«„· ê‘  ”Œ‰ ò„ „Ì ‘Êœ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=148) 
insert into lifetips values(148,'‰›” ò‘Ìœ‰ «‰”«‰ ﬁœ„ Â«Ì «Ê »Â ”ÊÌ „—ê «” .      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=149) 
insert into lifetips values(149,'Â—çÌ“Ì òÂ ﬁ«»· ‘„«—‘ «”  Å«Ì«‰ „Ì Å–Ì—œ Ê Â— ¬‰çÂ „Ê—œ «‰ Ÿ«— «”  ›—« „Ì —”œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=150) 
insert into lifetips values(150,'«“ œ”  œ«œ‰ ›—’  „ÊÃ» ‰œ«„  Ê «‰œÊÂ «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=151) 
insert into lifetips values(151,'⁄Ÿ„  Œ«·ﬁ œ— ‰“œ  Ê ° „Œ·Êﬁ«  —« œ—ç‘„  òÊçò „Ì ò‰œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=152) 
insert into lifetips values(152,'Ã·» „Õ»  ‰’› Œ—œ «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=153)
insert into lifetips values(153,'Ì«—Ì Œœ« »Â ﬁœ— ‰Ì«“ ‰«“· „Ì ê—œœ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=154)
insert into lifetips values(154,'œç«—  ‰êœ” Ì ‰‘œ Â—ò” òÂ œ— “‰œêÌ «ﬁ ’«œ —« œ— ÅÌ‘ ê—› .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=155) 
insert into lifetips values(155,'€’Â ‰’› ÅÌ—Ì «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=156) 
insert into lifetips values(156,'ò„Ì ⁄«∆·Â ÌòÌ «“ œÊ  Ê«‰ê—Ì «” .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=157) 
insert into lifetips values(157,'¬œ„Ì œ— “Ì— “»«‰‘ ‰Â› Â «” .      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=158) 
insert into lifetips values(158,'Â·«ò ‘œ ò”Ì òÂ «—“‘ ŒÊœ —«‰‘‰«Œ .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=159) 
insert into lifetips values(159,'¬œ„ ’»Ê— ÅÌ—Ê“Ì —« «“ œ”  ‰„Ì œÂœ. «ê— çÂ »Â œ—«“« »ò‘œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=160) 
insert into lifetips values(160,'Â—ò” »Â „·ò —”Ìœ „‰Õ’—« ŒÊœ —« œÌœ Ê œÌê—«‰ —« ‰«œÌœÂ «‰ê«‘ .      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=161)
insert into lifetips values(161,'›ﬁ— Ê  ‰êœ” Ì »“—ê —Ì‰ „—ê «” .      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=162)
insert into lifetips values(162,'„—ê ‰“œÌò «”  Ê Â„‰‘Ì‰Ì «‰œò.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=163)
insert into lifetips values(163,'„—œ„ œ‘„‰ çÌ“Ì Â” ‰œ òÂ ¬‰ —« ‰„Ì œ«‰‰œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=164)
insert into lifetips values(164,'»«„œ«œ »—«Ì ¬‰«‰Ì òÂ ç‘„ »Ì‰« œ«—‰œ —Ê‘‰ «” .      .Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=165)
insert into lifetips values(165,'·Ã«Ã  Ê „ﬁ«Ê„  »Ì œ·Ì·  œ»Ì— Ê «‰œÌ‘Â —« «“ »Ì‰ „Ì »—œ.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=166)
insert into lifetips values(166,'«Ì ›—“‰œ ¬œ„ °¬‰çÂ »Ì‘ — «“ „⁄«‘  «‰œÊŒ Â «Ì  Ê œ— «‰ Œ“«‰Â œ«— œÌê—Ì Â” Ì.      Õ÷—  ⁄·Ì (⁄)')
GO
if not exists (select * from  lifetips where id=167)
insert into lifetips values(167,'«“ œ”   ‰—› Â „«·Ì òÂ »Â  Ê Å‰œÌ œ«œÂ «” .      .Õ÷—  ⁄·Ì (⁄)')
go

if not exists (select * from TemplateGroup)
 begin
  insert into TemplateGroup(TemplateGroupTitle) values ('ò·ÌÂ ﬁ«·» Â« ')
  declare @id  int
  select @id=max(TemplateGroupID) from TemplateGroup
  update lettertemplate set TemplateGroupID=@id where TemplateGroupID=1
  insert into UserTemplateGroup(TemplateGroupID,UserID)
     select @id,id from users where
        id not in (select userid from UserTemplateGroup where TemplateGroupID=@id)
end
Go

if not exists (select *
from sysindexes
where name ='UserShortcut_altkey_idx')
CREATE UNIQUE
  INDEX [UserShortcut_altkey_idx] ON [dbo].[UserShortCut] ([UserID], [altKey]) ON [PRIMARY]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Tr_Ins_ArchiveFolder]'))
DROP TRIGGER [dbo].[Tr_Ins_ArchiveFolder]
GO
INSERT INTO ArchiveFolder  ( ParentFolderID , Title , UserID)
select 0 ,'»«Ìê«‰Ì' ,ID
from users
where  ID not in (select distinct userid from ArchiveFolder)
GO

-------

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[insert_newActionsAccess]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[insert_newActionsAccess]
GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE [dbo].[insert_newActionsAccess]
AS

delete from ActionsAccess where str(formtag)+ActionID not in (select str(formtag)+ID from
actions)

INSERT INTO [dbo].[ActionsAccess] 
	 ( [AccessID],
	 [ActionID],
	 [FormTag],
	 [HasAccess])

SELECT     Accesses.ID,  Actions.ID,Actions.FormTag,1 
FROM         Accesses,Actions 
where str(accesses.id)+actions.id not in
 (select str(accesses.id)+actionid  from dbo.ActionsAccess)


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO
------


Insert into UserAccArchive(UserID,SecID,ArchiveFolderID,IsAccess)
Select US.UserID, S.SecID ,AF.FolderID,1
From Secretariats S ,ArchiveFolder AF,UserSecretariats US
Where(S.SecID = US.Secid) and  AF.ArchiveCenterID>0 and 
not Exists(Select * From UserAccArchive 
Where UserID = us.UserID And SecID =s.SecID And  ArchiveFolderID=AF.FolderID)
 
GO  
If Not Exists(Select * From ReceiveTypes Where(Id=7)) 
Insert into ReceiveTypes
Values(7,'«Ì„Ì·')
Go
Update ArchiveFolder set ArchiveCenterID=UserID/10000 where userid>=10000 or userid=0
Go

DROP INDEX Actions.IX_Actions_ID
GO
ALTER TABLE dbo.ActionsAccess DROP CONSTRAINT PK_ActionsAccess
GO
alter table dbo.Actions alter column ID nvarchar(50) not null
GO
alter table dbo.ActionsAccess alter column ActionID nvarchar(50) not null
GO

Update Actions set ID = 'AAbout' where ID = '1048'
 Update Actions set ID = 'AActiveUser' where ID = '1051'
 Update Actions set ID = 'AAddExtention' where ID = '1056'
 Update Actions set ID = 'AaddLetterData' where ID = '1030'
 Update Actions set ID = 'AAnswer' where ID = '1008'
 Update Actions set ID = 'AARCHIVE' where ID = '1006'
 Update Actions set ID = 'AArchiveFolders' where ID = '1043'
 Update Actions set ID = 'ABackup' where ID = '1013'
 Update Actions set ID = '' where ID = '1015'
 Update Actions set ID = 'AChangeColor' where ID = '1007'
 Update Actions set ID = 'AchangePassword' where ID = '1041'
 Update Actions set ID = 'Aclose' where ID = '1005'
 Update Actions set ID = 'Action1' where ID in( '1054', '5003')
 Update Actions set ID = 'Action14' where ID = '1055'
 Update Actions set ID = 'Action2' where ID = '1044'
 Update Actions set ID = 'Action3' where ID = '1049'
 Update Actions set ID = 'Action4' where ID = '1045'
 Update Actions set ID = 'ACustomizeGrid' where ID = '1061'
 Update Actions set ID = 'Adailyrep' where ID = '1038'
 Update Actions set ID = 'ADarftIns' where ID = '1026'
 Update Actions set ID = 'ADelete' where ID = '1078'
 Update Actions set ID = 'Adeleted_toLetter' where ID = '1012'
 Update Actions set ID = 'adeleteScan' where ID = '1058'
 Update Actions set ID = 'adeleteWord' where ID = '1052'
 Update Actions set ID = 'ADraftToLetter' where ID = '1027'
 Update Actions set ID = 'AEditSecs' where ID = '1034'
 Update Actions set ID = 'AErrorMsg' where ID = '1035'
 Update Actions set ID = 'AexportData' where ID = '1046'
 Update Actions set ID = 'AExpotToWord' where ID = '1024'
 Update Actions set ID = 'AfillLetterData' where ID = '1039'
 Update Actions set ID = 'Afix' where ID = '1004'
 Update Actions set ID = 'AFollow' where ID = '1009'
 Update Actions set ID = 'AFromOrganize' where ID = '1010'
 Update Actions set ID = 'AFulltext' where ID = '1032'
 Update Actions set ID = 'AinnerLetter' where ID = '1060'
 Update Actions set ID = 'AInsert' where ID = '5004'
 Update Actions set ID = 'ALetterReport' where ID = '1028'
 Update Actions set ID = 'AloadPDF' where ID = '1062'
 Update Actions set ID = 'alock' where ID = '1042'
 Update Actions set ID = 'AOtherReceivers' where ID = '1020'
 Update Actions set ID = 'Apicture' where ID = '1021'
 Update Actions set ID = 'ArecDraftIns' where ID = '1057'
 Update Actions set ID = 'Arecommite' where ID = '1003'
 Update Actions set ID = 'ARecommiteGroup' where ID = '1053'
 Update Actions set ID = 'ArestorLtterData' where ID = '1047'
 Update Actions set ID = 'AretroAction' where ID = '1011'
 Update Actions set ID = 'AsecChange' where ID = '1033'
 Update Actions set ID = 'ASendToOtherSec' where ID = '1059'
 Update Actions set ID = 'ASentense' where ID = '1031'
 Update Actions set ID = 'AshortCut' where ID = '1040'
 Update Actions set ID = 'AShrinck' where ID = '1014'
 Update Actions set ID = 'Astatistic' where ID = '1037'
 Update Actions set ID = 'ASystemSetting' where ID = '1036'
 Update Actions set ID = 'ATemplate' where ID = '1023'
 Update Actions set ID = 'ATemplateGroup' where ID = '1050'
 Update Actions set ID = 'ATExactCopy' where ID = '1019'
 Update Actions set ID = 'AUpdateFax' where ID = '1063'
 Update Actions set ID = 'AUsers' where ID = '1017'
 Update Actions set ID = 'AUserSetting' where ID = '1018'
 Update Actions set ID = 'AviewAllletter' where ID = '1016'
 Update Actions set ID = 'AWordMain' where ID = '1025'
 Update Actions set ID = 'ChangeYear' where ID = '1022'
 Update Actions set ID = 'DataSetCancel' where ID in( '2005','3005')
 Update Actions set ID = 'DataSetDelete1' where ID = '5001'
 Update Actions set ID = 'DataSetEdit' where ID in ('2003','3003')
 Update Actions set ID = 'DataSetInsert' where ID IN ( '2001','3001')
 Update Actions set ID = 'DataSetPost' where ID IN( '2004','3004')
 Update Actions set ID = 'LockOldYear' where ID = '2099'
 Update Actions set ID = 'ReceiveInsert' where ID = '1001'
 Update Actions set ID = 'SendInsert' where ID = '1002'
GO


if not exists(select * from Actions where FormTag=8 and id='Arecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Arecommite','”Ê«»ﬁ «—Ã«⁄')

if not exists(select * from Actions where FormTag=8 and id='AChangeColor')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AChangeColor',' €ÌÌ— Ÿ«Â— ”Ì” „')

if not exists(select * from Actions where FormTag=8 and id='AAnswer')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AAnswer','ÃÊ«»')

if not exists(select * from Actions where FormTag=8 and id='AFollow')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AFollow','ÅÌ—Ê')

if not exists(select * from Actions where FormTag=8 and id='AretroAction')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AretroAction','⁄ÿ›')

if not exists(select * from Actions where FormTag=8 and id='AviewAllletter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AviewAllletter','Ã“∆Ì«  ‰«„Â')

if not exists(select * from Actions where FormTag=8 and id='AUserSetting')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AUserSetting',' ‰ŸÌ„«  ò«—»—Ì')

if not exists(select * from Actions where FormTag=8 and id='Apicture')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Apicture',' ’ÊÌ—')

if not exists(select * from Actions where FormTag=8 and id='AEdit')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AEdit','ÊÌ—«Ì‘  ‰«„Â')

if not exists(select * from Actions where FormTag=8 and id='ChangeYear')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ChangeYear',' €ÌÌ— ”«· Ã«—Ì')

if not exists(select * from Actions where FormTag=8 and id='AExpotToWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AExpotToWord','«—”«· »Â Word')

if not exists(select * from Actions where FormTag=8 and id='AWordMain')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AWordMain','ŒÊ«‰œ‰ ›«Ì· word')

if not exists(select * from Actions where FormTag=8 and id='ADarftIns')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ADarftIns','À»  ÅÌ‘‰ÊÌ”')

if not exists(select * from Actions where FormTag=8 and id='AsecChange')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AsecChange',' €ÌÌ— œ»Ì—Œ«‰Â Ã«—Ì')

if not exists(select * from Actions where FormTag=8 and id='ADoCommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ADoCommite','«ﬁœ«„ Ê »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=8 and id='AnewRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AnewRecommite','«—Ã«⁄ ‰«„Â')

if not exists(select * from Actions where FormTag=8 and id='AshortCut')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AshortCut','ò·Ìœ Â«Ì „Ì«‰»—')

if not exists(select * from Actions where FormTag=8 and id='AchangePassword')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AchangePassword',' €ÌÌ— ﬂ·„Â ⁄»Ê—')

if not exists(select * from Actions where FormTag=8 and id='AActivate')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AActivate','›⁄«· ﬂ—œ‰ «Ì‰ «—Ã«⁄')

if not exists(select * from Actions where FormTag=8 and id='AArchive')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AArchive','»«Ìê«‰Ì ‘Œ’Ì')

if not exists(select * from Actions where FormTag=8 and id='aarchiveOrganize')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'aarchiveOrganize','Å—Ê‰œÂ Â«Ì »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=8 and id='AswitchUser')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AswitchUser','Œ—ÊÃ «“ ‰—„ «›“«— Ê Ê—Êœ ò«—»— œÌê—')

if not exists(select * from Actions where FormTag=8 and id='AviewArchiveNote')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AviewArchiveNote','ÊÌ—«Ì‘ „ ‰ »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=8 and id='AnotePad')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AnotePad','Ì«œœ«‘  Â«')

if not exists(select * from Actions where FormTag=8 and id='Action2')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action2','ò«—»—«‰ ›⁄«· œ— ‘»òÂ')

if not exists(select * from Actions where FormTag=8 and id='SendToSecretariat')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'SendToSecretariat','«—”«· »—«Ì œ»Ì—Œ«‰Â')

if not exists(select * from Actions where FormTag=8 and id='ALoadPDF')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ALoadPDF','PDF')

if not exists(select * from Actions where FormTag=8 and id='AviewRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AviewRecommite','„‘«ÂœÂ «—Ã«⁄')

if not exists(select * from Actions where FormTag=8 and id='ACustomizeGrid')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ACustomizeGrid',' ‰ŸÌ„«  ” Ê‰ Â«Ì ÃœÊ·')

if not exists(select * from Actions where FormTag=8 and id='AinnerLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AinnerLetter','À»  ‰«„Â œ«Œ·Ì')

if not exists(select * from Actions where FormTag=8 and id='ASendMessage')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ASendMessage','«—”«· ÅÌ€«„')

if not exists(select * from Actions where FormTag=8 and id='AGetMessage')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AGetMessage','œ—Ì«›  ÅÌ«„')

if not exists(select * from Actions where FormTag=8 and id='AEditSubject')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AEditSubject','„‘Œ’«  »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=8 and id='ABrowsArchive')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ABrowsArchive','»——”Ì ”«»ﬁÂ »— «”«”  Ê÷ÌÕ« ')

if not exists(select * from Actions where FormTag=8 and id='Action3')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action3','Õ«·  «‰ Ÿ«—')

if not exists(select * from Actions where FormTag=8 and id='Action4')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action4','Ê—Êœ ò«—»— œÌê—')

if not exists(select * from Actions where FormTag=8 and id='AaddLetterData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AaddLetterData','ÅÌÊ”  Â«Ì ‰«„Â')

if not exists(select * from Actions where FormTag=8 and id='AdeleteWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AdeleteWord','  Word Õ–›')

if not exists(select * from Actions where FormTag=8 and id='LetterFollowUp')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'LetterFollowUp','«ÌÃ«œ “‰ÃÌ—Â ÅÌêÌ—Ì ‰«„Â')

if not exists(select * from Actions where FormTag=8 and id='Action7')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action7','«ÌÃ«œ ÅÌêÌ—Ì')

if not exists(select * from Actions where FormTag=8 and id='Action8')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action8','‰„«Ì‘ Å‰Ã—Â ÅÌêÌ—Ì')

if not exists(select * from Actions where FormTag=8 and id='Action1')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action1','ê“«—‘ «“ «ﬁœ«„«  Ê «—Ã«⁄« ')

if not exists(select * from Actions where FormTag=8 and id='Action6')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action6','¬„«— «“ «ﬁœ«„«  Ê «—Ã«⁄« ')

if not exists(select * from Actions where FormTag=8 and id='AAddAlternativeUser')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AAddAlternativeUser',' ⁄ÌÌ‰ Ã«‰‘Ì‰ „Êﬁ ')

if not exists(select * from Actions where FormTag=8 and id='AChangeOrgID')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'AChangeOrgID','œÌœ‰ ò«— «»· Â«Ì œÌê—')

if not exists(select * from Actions where FormTag=8 and id='Action9')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action9','–ŒÌ—Â œ— ›«Ì·')

if not exists(select * from Actions where FormTag=8 and id='aLoadFile')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'aLoadFile','ŒÊ«‰œ‰ ”—Ì⁄ ›«Ì· Â« ')

if not exists(select * from Actions where FormTag=8 and id='Action5')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Action5','‰„«Ì‘ ·Ì”  Œ»—Â«')

if not exists(select * from Actions where FormTag=8 and id='Email')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Email','«Ì„Ì·')

if not exists(select * from Actions where FormTag=8 and id='Act_WorkGroup')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'Act_WorkGroup',' ⁄—Ì› ê—ÊÂ ò«—Ì')

if not exists(select * from Actions where FormTag=8 and id='ActPhone')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ActPhone','œ› —çÂ  ·›‰')

if not exists(select * from Actions where FormTag=8 and id='ADraftToLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(8 ,'ADraftToLetter','«Œ ’«’ ‘„«—Â œ»Ì—Œ«‰Â')

if not exists(select * from Actions where FormTag=1 and id='ALetterChainFollow')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ALetterChainFollow','«ÌÃ«œ “‰ÃÌ—Â ÅÌêÌ—Ì ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AddFollow')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddFollow','«ÌÃ«œ ÅÌêÌ—Ì')

if not exists(select * from Actions where FormTag=1 and id='AShowFollow')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AShowFollow','‰„«Ì‘ Å‰Ã—Â ÅÌêÌ—Ì')

if not exists(select * from Actions where FormTag=1 and id='ReceiveInsert')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ReceiveInsert','À»  Ê«—œÂ')

if not exists(select * from Actions where FormTag=1 and id='SendInsert')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'SendInsert','À»  ’«œ—Â')

if not exists(select * from Actions where FormTag=1 and id='Arecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Arecommite','«—Ã«⁄«  ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='Afix')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Afix','ÊÌ—«Ì‘ Ê ”«“„«‰œÂÌ «ÿ·«⁄«  À«» ')

if not exists(select * from Actions where FormTag=1 and id='AARCHIVE')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AARCHIVE','“Ê‰ò‰ ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AChangeColor')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AChangeColor',' €ÌÌ— Ÿ«Â— ”Ì” „')

if not exists(select * from Actions where FormTag=1 and id='AAnswer')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AAnswer','ÃÊ«» ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AShowFollowLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AShowFollowLetter','ÅÌ—Ê')

if not exists(select * from Actions where FormTag=1 and id='AFromOrganize')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AFromOrganize','ÊÌ—«Ì‘ Ê ”«“„«‰œÂÌ ç«—  ”«“„«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='AretroAction')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AretroAction','⁄ÿ›')

if not exists(select * from Actions where FormTag=1 and id='Adeleted_toLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Adeleted_toLetter','»«“Ì«»Ì ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ABackup')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ABackup',' ÂÌÂ ›«Ì· Å‘ Ì»«‰')

if not exists(select * from Actions where FormTag=1 and id='AShrinck')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AShrinck','»ÂÌ‰Â ”«“Ì ›«Ì·Â«Ì »«‰ﬂ «ÿ·«⁄« Ì')

if not exists(select * from Actions where FormTag=1 and id='access')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'access',' ⁄—Ì› ”ÿÕ œ” —”Ì')

if not exists(select * from Actions where FormTag=1 and id='AviewAllletter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AviewAllletter','ÊÌ—«Ì‘ ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AUsers')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AUsers',' ⁄—Ì› ﬂ«—»—')

if not exists(select * from Actions where FormTag=1 and id='AUserSetting')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AUserSetting',' ‰ŸÌ„«  ﬂ«—»—Ì')

if not exists(select * from Actions where FormTag=1 and id='ATExactCopy')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ATExactCopy','‰„«Ì‘ —Ê‰Ê‘  ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AOtherReceivers')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AOtherReceivers',' ‰„«Ì‘ œÌê—  êÌ—‰œê«‰')

if not exists(select * from Actions where FormTag=1 and id='Apicture')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Apicture',' ’ÊÌ—')

if not exists(select * from Actions where FormTag=1 and id='ChangeYear')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ChangeYear',' €ÌÌ— ”«· Ã«—Ì')

if not exists(select * from Actions where FormTag=1 and id='ATemplate')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ATemplate','«÷«›Â ﬂ—œ‰ ﬁ«·»  Â«Ì ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AExpotToWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AExpotToWord','Word')

if not exists(select * from Actions where FormTag=1 and id='AWordMain')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AWordMain','word ŒÊ«‰œ‰ ›«Ì· ')

if not exists(select * from Actions where FormTag=1 and id='ADarftIns')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ADarftIns','À»  ÅÌ‘‰ÊÌ”')

if not exists(select * from Actions where FormTag=1 and id='ADraftToLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ADraftToLetter','«Œ ’«’ ‘„«—Â œ»Ì—Œ«‰Â')

if not exists(select * from Actions where FormTag=1 and id='ALetterReport')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ALetterReport',' ê“«—‘ «“ ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='AaddLetterData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AaddLetterData','ÅÌÊ”  Â«Ì ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AFulltext')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AFulltext','Ã” ÃÊ Ì „›ÂÊ„Ì œ— „ ‰ ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='AsecChange')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AsecChange',' €ÌÌ— œ»Ì—Œ«‰Â Ã«—Ì')

if not exists(select * from Actions where FormTag=1 and id='AEditSecs')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AEditSecs','œ»Ì—Œ«‰Â Â«Ì „ÊÃÊœ œ— ‰—„ «›“«—')

if not exists(select * from Actions where FormTag=1 and id='AErrorMsg')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AErrorMsg','„œÌ—Ì  ÅÌ€«„ Â«Ì Œÿ«')

if not exists(select * from Actions where FormTag=1 and id='ASystemSetting')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ASystemSetting',' ‰ŸÌ„«  œ»Ì—Œ«‰Â')

if not exists(select * from Actions where FormTag=1 and id='Astatistic')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Astatistic','¬„«— Â«')

if not exists(select * from Actions where FormTag=1 and id='Adailyrep')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Adailyrep','ê“«—‘ —Ê“«‰Â')

if not exists(select * from Actions where FormTag=1 and id='AfillLetterData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AfillLetterData','«Œ ’«’   ’ÊÌ— ‰«„Â Â« »Â ’Ê—  ê—ÊÂÌ')

if not exists(select * from Actions where FormTag=1 and id='AshortCut')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AshortCut','ò·Ìœ Â«Ì „Ì«‰»—')

if not exists(select * from Actions where FormTag=1 and id='AchangePassword')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AchangePassword',' €ÌÌ— ﬂ·„Â ⁄»Ê—')

if not exists(select * from Actions where FormTag=1 and id='AArchiveFolders')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AArchiveFolders','ÊÌ—«Ì‘ Ê ”«„«‰œÂÌ Å—Ê‰œÂ Â«Ì »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='AloadImages')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AloadImages','›—«ŒÊ«‰Ì  ’ÊÌ— ‰«„Â Â« Ê À»  »Â ’Ê—  ÅÌ‘ ‰ÊÌ”')

if not exists(select * from Actions where FormTag=1 and id='LoginLogoutReport')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'LoginLogoutReport','ê“«—‘ Ê—Êœ Ê Œ—ÊÃ ﬂ«—»—«‰')

if not exists(select * from Actions where FormTag=1 and id='AexportData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AexportData','»«Ìê«‰Ì  ’«ÊÌ— ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='ArestorLtterData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ArestorLtterData','»—ê—œ«‰œ‰  ’«ÊÌ— ‰«„Â Â«Ì »«Ìê«‰Ì ‘œÂ')

if not exists(select * from Actions where FormTag=1 and id='AchangeLetterProperties')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AchangeLetterProperties',' €ÌÌ— „‘Œ’«  «”«”Ì ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ATemplateGroup')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ATemplateGroup','  ⁄—Ì› ê—ÊÂ«Ì ﬁ«·» ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='AActiveUser')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AActiveUser','ê“«—‘ ò«—»—«‰ ›⁄«·')

if not exists(select * from Actions where FormTag=1 and id='adeleteWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'adeleteWord','Word Õ–›')

if not exists(select * from Actions where FormTag=1 and id='ARecommiteGroup')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ARecommiteGroup','«—Ã«⁄ ê—ÊÂÌ')

if not exists(select * from Actions where FormTag=1 and id='AGroupRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AGroupRecommite','—Ê‰Ê‘  ê—ÊÂÌ')

if not exists(select * from Actions where FormTag=1 and id='AAddExtention')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AAddExtention',' ⁄—Ì› «‰Ê«⁄ ›«Ì· Â«Ì ÅÌÊ” ')

if not exists(select * from Actions where FormTag=1 and id='ArecDraftIns')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ArecDraftIns','ÅÌ‘ ‰ÊÌ” Ê«—œÂ')

if not exists(select * from Actions where FormTag=1 and id='AnewRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AnewRecommite','«—Ã«⁄ ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ADoCommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ADoCommite','«ﬁœ«„ Ê »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='AloadPDF')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AloadPDF','PDF')

if not exists(select * from Actions where FormTag=1 and id='ACustomizeGrid')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ACustomizeGrid',' ‰ŸÌ„«  ” Ê‰ Â«Ì ÃœÊ·')

if not exists(select * from Actions where FormTag=1 and id='AinnerLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AinnerLetter','À»  ‰«„Â œ«Œ·Ì')

if not exists(select * from Actions where FormTag=1 and id='ASendToOtherSec')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ASendToOtherSec','«—”«· »Â œ»Ì—Œ«‰Â Â«Ì œÌê—')

if not exists(select * from Actions where FormTag=1 and id='adeleteScan')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'adeleteScan','Õ–›  ’ÊÌ— ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ARelatedSecretariat')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ARelatedSecretariat',' ‰ŸÌ„ œ»Ì—Œ«‰Â Â«Ì „— »ÿ »« ”«“„«‰')

if not exists(select * from Actions where FormTag=1 and id='AllowEditWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AllowEditWord','ﬁ«»·Ì  ÊÌ—«Ì‘ ›«Ì· Â«Ì word')

if not exists(select * from Actions where FormTag=1 and id='Aimport')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Aimport','›—«ŒÊ«‰Ì «ÿ·«⁄«  ‰—„ «›“«— Â«Ì œÌê—')

if not exists(select * from Actions where FormTag=1 and id='AmonitorTables')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AmonitorTables','„œÌ—Ì  «ÿ·«⁄«  ›—«ŒÊ«‰Ì ‘œÂ')

if not exists(select * from Actions where FormTag=1 and id='ARecommiteList')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ARecommiteList','·Ì”  «—Ã«⁄«  »—«Ì ç«Å')

if not exists(select * from Actions where FormTag=1 and id='ALetterNoSetting')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ALetterNoSetting',' ‰ŸÌ„ ‘ò· ‘„«—Â ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='AUserTable')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AUserTable',' ⁄—Ì› ›—„ Â«Ì «œ«—Ì')

if not exists(select * from Actions where FormTag=1 and id='AInputRefferenceTable')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AInputRefferenceTable',' ⁄—Ì› Ãœ«Ê· „—Ã⁄')

if not exists(select * from Actions where FormTag=1 and id='aReportUserTable')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'aReportUserTable','ê“«—‘ «“ ›—„ Â«Ì «œ«—Ì')

if not exists(select * from Actions where FormTag=1 and id='AARchiveLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AARchiveLetter','¬—‘ÌÊ ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='Aadd_Externaldata')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Aadd_Externaldata','»—Ê“ —”«‰Ì «ÿ·«⁄«   ò„Ì·Ì')

if not exists(select * from Actions where FormTag=1 and id='aSENDMessage')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'aSENDMessage','«—”«· ÅÌ«„')

if not exists(select * from Actions where FormTag=1 and id='AgetMessage')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AgetMessage','œ—Ì«›  ÅÌ«„')

if not exists(select * from Actions where FormTag=1 and id='AEditSubject')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AEditSubject','«Œ ’«’ „‘Œ’«  »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='ABrowsArchive')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ABrowsArchive','»——”Ì ”«»ﬁÂ »— «”«”  Ê÷ÌÕ« ')

if not exists(select * from Actions where FormTag=1 and id='EditLetterText')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'EditLetterText','ÊÌ—«Ì‘ „ ‰ »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='AddNote')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddNote','Ì«œœ«‘  Â«')

if not exists(select * from Actions where FormTag=1 and id='ASendLetterToSec')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ASendLetterToSec','«—”«· ÅÌ‘‰ÊÌ” »—«Ì œ»Ì—Œ«‰Â')

if not exists(select * from Actions where FormTag=1 and id='ViewRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ViewRecommite','„‘«ÂœÂ «—Ã«⁄')

if not exists(select * from Actions where FormTag=1 and id='ActivateRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ActivateRecommite','›⁄«· ò—œ‰ «Ì‰ «—Ã«⁄')

if not exists(select * from Actions where FormTag=1 and id='ADelete')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ADelete','Õ–› ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ASwitchUser')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ASwitchUser','Ê—Êœ ò«—»— œÌê—')

if not exists(select * from Actions where FormTag=1 and id='ALetterHistory')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ALetterHistory','”Ê«»ﬁ ‰«„Â œ— ò·ÌÂ œ»Ì—Œ«‰Â Â«')

if not exists(select * from Actions where FormTag=1 and id='AArchiveCenter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AArchiveCenter',' ⁄—Ì› „—«ò“ »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=1 and id='AddLetterSubject')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddLetterSubject',' ⁄—Ì› „Ê÷Ê⁄«  ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ARecommiteReport')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ARecommiteReport','ê“«—‘ «“ «ﬁœ«„«  Ê «—Ã«⁄« ')

if not exists(select * from Actions where FormTag=1 and id='ARecommiteStat')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ARecommiteStat','¬„«— «“ «ﬁœ«„«  Ê «—Ã«⁄« ')

if not exists(select * from Actions where FormTag=1 and id='AddDocument')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddDocument','À»  ”‰œ Â«Ì €Ì— «“ ‰«„Â')

if not exists(select * from Actions where FormTag=1 and id='ScanL')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ScanL','ê“«—‘ «“ «”ò‰ ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='ASaveWord')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ASaveWord','–ŒÌ—Â œ— ›«Ì·')

if not exists(select * from Actions where FormTag=1 and id='ExactCopy')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ExactCopy','—Ê‰Ê‘ ')

if not exists(select * from Actions where FormTag=1 and id='LockOldYear')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'LockOldYear','»” Â ‘œ‰ ‰«„Â Â«Ì ”«· ﬁ»·')

if not exists(select * from Actions where FormTag=1 and id='AAccessField')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AAccessField',' ‰ÿÌ„ ”ÿÕ œ” —”Ì ›—„ Â«')

if not exists(select * from Actions where FormTag=1 and id='AUpdateFax')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AUpdateFax','»—Ê“ —”«‰Ì ›ò” Â«')

if not exists(select * from Actions where FormTag=1 and id='AloadFile')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AloadFile','ŒÊ«‰œ‰ ”—Ì⁄ ›«Ì· ÅÌÊ” Ì ')

if not exists(select * from Actions where FormTag=1 and id='Areport_userLog')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Areport_userLog','»——”Ì «⁄„«· «‰Ã«„ ‘œÂ ò«—»—«‰')

if not exists(select * from Actions where FormTag=1 and id='APrintFish')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'APrintFish','ç«Å —”Ìœ')

if not exists(select * from Actions where FormTag=1 and id='Act_WorkGroup')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Act_WorkGroup',' ⁄—Ì› ê—ÊÂ ò«—Ì')

if not exists(select * from Actions where FormTag=1 and id='AddGroupNews')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddGroupNews',' ⁄—Ì› ê—ÊÂ Œ»—Ì')

if not exists(select * from Actions where FormTag=1 and id='AddNews')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddNews',' ⁄—Ì› Œ»—')

if not exists(select * from Actions where FormTag=1 and id='NewsList')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'NewsList','‰„«Ì‘ ·Ì”  Œ»—Â«')

if not exists(select * from Actions where FormTag=1 and id='ReportRelatedLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ReportRelatedLetter','‰„«Ì‘ «— »«ÿ »Ì‰ ‰«„Â Â«')

if not exists(select * from Actions where FormTag=1 and id='Email')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'Email','«Ì„Ì·')

if not exists(select * from Actions where FormTag=1 and id='ActPhone')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ActPhone','œ› —çÂ  ·›‰')

if not exists(select * from Actions where FormTag=1 and id='ConvertEmailToLetter')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'ConvertEmailToLetter','À»  ‰«„Â Â«Ì Ê«—œÂ «“ «Ì„Ì·')

if not exists(select * from Actions where FormTag=1 and id='AddSysEmail')
INSERT INTO Actions(FormTag,ID,Title) VALUES(1 ,'AddSysEmail','À»  «Ì„Ì· Â«Ì ”Ì” „')

if not exists(select * from Actions where FormTag=3 and id='DataSetInsert')
INSERT INTO Actions(FormTag,ID,Title) VALUES(3 ,'DataSetInsert','ÃœÌœ')

if not exists(select * from Actions where FormTag=3 and id='DataSetEdit')
INSERT INTO Actions(FormTag,ID,Title) VALUES(3 ,'DataSetEdit','ÊÌ—«Ì‘ ')

if not exists(select * from Actions where FormTag=3 and id='DataSetPost')
INSERT INTO Actions(FormTag,ID,Title) VALUES(3 ,'DataSetPost','–ŒÌ—Â')

if not exists(select * from Actions where FormTag=3 and id='AmakeRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(3 ,'AmakeRecommite','«—Ã«⁄«  ‰«„Â')

if not exists(select * from Actions where FormTag=2 and id='DataSetInsert')
INSERT INTO Actions(FormTag,ID,Title) VALUES(2 ,'DataSetInsert','ÃœÌœ')

if not exists(select * from Actions where FormTag=2 and id='DataSetEdit')
INSERT INTO Actions(FormTag,ID,Title) VALUES(2 ,'DataSetEdit','ÊÌ—«Ì‘ ')

if not exists(select * from Actions where FormTag=2 and id='DataSetPost')
INSERT INTO Actions(FormTag,ID,Title) VALUES(2 ,'DataSetPost','–ŒÌ—Â')

if not exists(select * from Actions where FormTag=5 and id='DataSetDelete1')
INSERT INTO Actions(FormTag,ID,Title) VALUES(5 ,'DataSetDelete1','Õ–› ')

if not exists(select * from Actions where FormTag=5 and id='Action1')
INSERT INTO Actions(FormTag,ID,Title) VALUES(5 ,'Action1','Œ—ÊÃ')

if not exists(select * from Actions where FormTag=5 and id='AInsert')
INSERT INTO Actions(FormTag,ID,Title) VALUES(5 ,'AInsert','ÃœÌœ')

if not exists(select * from Actions where FormTag=5 and id='AArchiveRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(5 ,'AArchiveRecommite','«—Ã«⁄ »Â »«Ìê«‰Ì')

if not exists(select * from Actions where FormTag=5 and id='AtypeRecommite')
INSERT INTO Actions(FormTag,ID,Title) VALUES(5 ,'AtypeRecommite','«—”«· »—«Ì  «ÌÅ')

if not exists(select * from Actions where FormTag=7 and id='Apost')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'Apost','–ŒÌ—Â')

if not exists(select * from Actions where FormTag=7 and id='NewPage')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'NewPage','’›ÕÂ ÃœÌœ')

if not exists(select * from Actions where FormTag=7 and id='AEDit')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'AEDit','ÊÌ—«Ì‘')

if not exists(select * from Actions where FormTag=7 and id='Aprintt')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'Aprintt','ç«Å')

if not exists(select * from Actions where FormTag=7 and id='AClear')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'AClear','Å«ﬂ')

if not exists(select * from Actions where FormTag=7 and id='Scan')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'Scan','«”ﬂ‰')

if not exists(select * from Actions where FormTag=7 and id='OpenFile')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'OpenFile','ŒÊ«‰œ‰ «“ ›«Ì·')

if not exists(select * from Actions where FormTag=7 and id='Adelete')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'Adelete','Õ–›')

if not exists(select * from Actions where FormTag=7 and id='SaveAs')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'SaveAs','–ŒÌ—Â œ— ›«Ì·')

if not exists(select * from Actions where FormTag=7 and id='SignPic')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'SignPic','œ—Ã «„÷«')

if not exists(select * from Actions where FormTag=7 and id='ActSaveAll')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'ActSaveAll','–ŒÌ—Â Â„Â  ’«ÊÌ—')

if not exists(select * from Actions where FormTag=7 and id='ASBDelAllData')
INSERT INTO Actions(FormTag,ID,Title) VALUES(7 ,'ASBDelAllData','Õ–› Â„Â  ’«ÊÌ—')
GO
delete     Actions
WHERE     (isnumeric( ID) = 1)
GO


Update ActionsAccess set ActionID = 'AAbout' where ActionID = '1048'
 Update ActionsAccess set ActionID = 'AActiveUser' where ActionID = '1051'
 Update ActionsAccess set ActionID = 'AAddExtention' where ActionID = '1056'
 Update ActionsAccess set ActionID = 'AaddLetterData' where ActionID = '1030'
 Update ActionsAccess set ActionID = 'AAnswer' where ActionID = '1008'
 Update ActionsAccess set ActionID = 'AARCHIVE' where ActionID = '1006'
 Update ActionsAccess set ActionID = 'AArchiveFolders' where ActionID = '1043'
 Update ActionsAccess set ActionID = 'ABackup' where ActionID = '1013'
 Update ActionsAccess set ActionID = 'access' where ActionID = '1015'
 Update ActionsAccess set ActionID = 'AChangeColor' where ActionID = '1007'
 Update ActionsAccess set ActionID = 'AchangePassword' where ActionID = '1041'
 Update ActionsAccess set ActionID = 'Aclose' where ActionID = '1005'
 Update ActionsAccess set ActionID = 'Action1' where ActionID in( '1054', '5003')
 Update ActionsAccess set ActionID = 'Action14' where ActionID = '1055'
 Update ActionsAccess set ActionID = 'Action2' where ActionID = '1044'
 Update ActionsAccess set ActionID = 'Action3' where ActionID = '1049'
 Update ActionsAccess set ActionID = 'Action4' where ActionID = '1045'
 Update ActionsAccess set ActionID = 'ACustomizeGrid' where ActionID = '1061'
 Update ActionsAccess set ActionID = 'Adailyrep' where ActionID = '1038'
 Update ActionsAccess set ActionID = 'ADarftIns' where ActionID = '1026'
 Update ActionsAccess set ActionID = 'ADelete' where ActionID = '1078'
 Update ActionsAccess set ActionID = 'Adeleted_toLetter' where ActionID = '1012'
 Update ActionsAccess set ActionID = 'adeleteScan' where ActionID = '1058'
 Update ActionsAccess set ActionID = 'adeleteWord' where ActionID = '1052'
 Update ActionsAccess set ActionID = 'ADraftToLetter' where ActionID = '1027'
 Update ActionsAccess set ActionID = 'AEditSecs' where ActionID = '1034'
 Update ActionsAccess set ActionID = 'AErrorMsg' where ActionID = '1035'
 Update ActionsAccess set ActionID = 'AexportData' where ActionID = '1046'
 Update ActionsAccess set ActionID = 'AExpotToWord' where ActionID = '1024'
 Update ActionsAccess set ActionID = 'AfillLetterData' where ActionID = '1039'
 Update ActionsAccess set ActionID = 'Afix' where ActionID = '1004'
 Update ActionsAccess set ActionID = 'AFollow' where ActionID = '1009'
 Update ActionsAccess set ActionID = 'AFromOrganize' where ActionID = '1010'
 Update ActionsAccess set ActionID = 'AFulltext' where ActionID = '1032'
 Update ActionsAccess set ActionID = 'AinnerLetter' where ActionID = '1060'
 Update ActionsAccess set ActionID = 'AInsert' where ActionID = '5004'
 Update ActionsAccess set ActionID = 'ALetterReport' where ActionID = '1028'
 Update ActionsAccess set ActionID = 'AloadPDF' where ActionID = '1062'
 Update ActionsAccess set ActionID = 'alock' where ActionID = '1042'
 Update ActionsAccess set ActionID = 'AOtherReceivers' where ActionID = '1020'
 Update ActionsAccess set ActionID = 'Apicture' where ActionID = '1021'
 Update ActionsAccess set ActionID = 'ArecDraftIns' where ActionID = '1057'
 Update ActionsAccess set ActionID = 'Arecommite' where ActionID = '1003'
 Update ActionsAccess set ActionID = 'ARecommiteGroup' where ActionID = '1053'
 Update ActionsAccess set ActionID = 'ArestorLtterData' where ActionID = '1047'
 Update ActionsAccess set ActionID = 'AretroAction' where ActionID = '1011'
 Update ActionsAccess set ActionID = 'AsecChange' where ActionID = '1033'
 Update ActionsAccess set ActionID = 'ASendToOtherSec' where ActionID = '1059'
 Update ActionsAccess set ActionID = 'ASentense' where ActionID = '1031'
 Update ActionsAccess set ActionID = 'AshortCut' where ActionID = '1040'
 Update ActionsAccess set ActionID = 'AShrinck' where ActionID = '1014'
 Update ActionsAccess set ActionID = 'Astatistic' where ActionID = '1037'
 Update ActionsAccess set ActionID = 'ASystemSetting' where ActionID = '1036'
 Update ActionsAccess set ActionID = 'ATemplate' where ActionID = '1023'
 Update ActionsAccess set ActionID = 'ATemplateGroup' where ActionID = '1050'
 Update ActionsAccess set ActionID = 'ATExactCopy' where ActionID = '1019'
 Update ActionsAccess set ActionID = 'AUpdateFax' where ActionID = '1063'
 Update ActionsAccess set ActionID = 'AUsers' where ActionID = '1017'
 Update ActionsAccess set ActionID = 'AUserSetting' where ActionID = '1018'
 Update ActionsAccess set ActionID = 'AviewAllletter' where ActionID = '1016'
 Update ActionsAccess set ActionID = 'AWordMain' where ActionID = '1025'
 Update ActionsAccess set ActionID = 'ChangeYear' where ActionID = '1022'
 Update ActionsAccess set ActionID = 'DataSetCancel' where ActionID in( '2005','3005')
 Update ActionsAccess set ActionID = 'DataSetDelete1' where ActionID = '5001'
 Update ActionsAccess set ActionID = 'DataSetEdit' where ActionID in ('2003','3003')
 Update ActionsAccess set ActionID = 'DataSetInsert' where ActionID IN ( '2001','3001')
 Update ActionsAccess set ActionID = 'DataSetPost' where ActionID IN( '2004','3004')
 Update ActionsAccess set ActionID = 'LockOldYear' where ActionID = '2099'
 Update ActionsAccess set ActionID = 'ReceiveInsert' where ActionID = '1001'
 Update ActionsAccess set ActionID = 'SendInsert' where ActionID = '1002'

GO
delete     ActionsAccess
WHERE     (isnumeric( ActionID) = 1)

GO
execute insert_newActionsAccess
GO

CREATE NONCLUSTERED INDEX [IX_Actions_ID] ON [dbo].[Actions]
(
	[ID] ASC
)

GO

ALTER TABLE dbo.ActionsAccess ADD CONSTRAINT
	PK_ActionsAccess PRIMARY KEY CLUSTERED
	(
	AccessID,
	ActionID,
	FormTag
	)

GO



update extention set extention='doc' where extentionid=3


GO

ALTER TABLE dbo.Settings  alter column VariableId int null
go
delete settings where
VariableId in (27,101,107,  --,50
108,109,110,111,207,208,209,311,411,512,701,709,723,724,725,730,
741,761,762,763,764,1001,771,772,1002,1003,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1110,
2000,2001,2005)

delete settings where userid=-1 and variableID in (10,11,12,14)



update settings set variablename='ShowLetterCenterNoPanel' where userid>=0 and variableID=1107
update settings set variablename='SelectedScanner' where userid>=0 and variableID=56
update settings set variablename='ConvertFaxToA4' where userid>=0 and variableID=77
update settings set variablename='IninitialSearchDate' where userid>=0 and variableID=745
update settings set variablename='PrinterIndex' where userid>=0 and variableID=2100
update settings set variablename='InsertSignInWord' where userid>=0 and variableID=746
update settings set variablename='AskValueForEmptyFieldInWordTemplate' where userid>=0 and variableID=747
update settings set variablename='DefaultEmailSubject' where userid>=0 and variableID=2050
update settings set variablename='EmailSendHost' where userid>=0 and variableID=2051
update settings set variablename='EmailReciveHost' where userid>=0 and variableID=2055
update settings set variablename='EmailSendPort' where userid>=0 and variableID=2052
update settings set variablename='EmailRecivePort' where userid>=0 and variableID=2053
update settings set variablename='EmailEmailConTime' where userid>=0 and variableID=2054
update settings set variablename='EmailReciveAddress' where userid>=0 and variableID=2056
update settings set variablename='EmailUserName' where userid>=0 and variableID=2057
update settings set variablename='EmailPassword' where userid>=0 and variableID=2058
update settings set variablename='EmailSSL' where userid>=0 and variableID=2059
update settings set variablename='EmailAutenticationType' where userid>=0 and variableID=2060
update settings set variablename='SkinFileName' where userid>=0 and variableID=2070
update settings set variablename='MemoFont' where userid>=0 and variableID=2007
update settings set variablename='FocusedColor' where userid>=0 and variableID=1013
update settings set variablename='RootFromOrg' where userid>=0 and variableID=318
update settings set variablename='SubjectOrder' where userid>=0 and variableID=627
Update settings set variablename='ArchiveList' where userid>=0 and variableID=626
update settings set variablename='Enterkey' where userid>=0 and variableID=714
update settings set variablename='ShowSubjectCodeInTree' where userid>=0 and variableID=726
update settings set variablename='ShowOriginalErrorMessage' where userid>=0 and variableID=715
update settings set variablename='InitialReceivedMode' where userid>=0 and variableID=742
update settings set variablename='InitialArchiveMode ' where userid>=0 and variableID=743
update settings set variablename='InitialDisplyMode  ' where userid>=0 and variableID=744
update settings set variablename='DefaultProceed ' where userid>=0 and variableID=1111
update settings set variablename='DefaultisCopy  ' where userid>=0 and variableID=1112
update settings set variablename='DefaultInnerCopy' where userid>=0 and variableID=1113
update settings set variablename='ReciveIsCopy ' where userid>=0 and variableID=1114
update settings set variablename='DefaultSClassificationID' where userid>=0 and variableID=202
update settings set variablename='DefaultSUrgencyID    ' where userid>=0 and variableID=203
update settings set variablename='DefaultSNumberOfAttachPages' where userid>=0 and variableID=204
update settings set variablename='DefaultSNumberOfPage ' where userid>=0 and variableID=205
update settings set variablename='DefaultSReceiveTypeID' where userid>=0 and variableID=206
update settings set variablename='DefaultSFromOrgId  ' where userid>=0 and variableID=213
update settings set variablename='DefualtSSigner     ' where userid>=0 and variableID=210
update settings set variablename='DefaultRClassificationID' where userid>=0 and variableID=102
update settings set variablename='DefaultRUrgencyID    ' where userid>=0 and variableID=103
update settings set variablename='DefaultRNumberOfAttachPages' where userid>=0 and variableID=104
update settings set variablename='DefaultRNumberOfPage ' where userid>=0 and variableID=105
update settings set variablename='DefaultRReceiveTypeID' where userid>=0 and variableID=106
update settings set variablename='DefaultRFromOrgId  ' where userid>=0 and variableID=113
update settings set variablename='ListFromorg' where userid>=0 and variableID=114
update settings set variablename='ChartOrderByTitle' where userid>=0 and variableID=115
update settings set variablename='HasJpg' where userid>=0 and variableID=25
update settings set variablename='ShowLetterPropertyPanel' where userid>=0 and variableID=1004
update settings set variablename='ShowLetterAttachPanel' where userid>=0 and variableID=1005
update settings set variablename='ShowLetterUserMemoPanel' where userid>=0 and variableID=1006

update settings set variablename='DeadlineForRecommite' where userid=-1 and variableID=1
update settings set variablename='MaxLetterToShow' where userid=-1 and variableID=2
update settings set variablename='BeginIndicator' where userid=-1 and variableID=3
update settings set variablename='EqualAnswerIndicator' where userid=-1 and variableID=4
update settings set variablename='UniqeIndicator' where userid=-1 and variableID=5
update settings set variablename='InsertLog' where userid=-1 and variableID=6
update settings set variablename='Version' where userid=-1 and variableID=7
update settings set variablename='DayInWeekForBackup ' where userid=-1 and variableID=8
update settings set variablename='FaxCartableOrgID' where userid=-1 and variableID=9
update settings set variablename='BackupMade' where userid=-1 and variableID= 13
update settings set variablename='UserMemoDisplay' where userid=-1 and variableID=15
update settings set variablename='OrgName' where userid=-1 and variableID=16
update settings set variablename='FullTextSearch' where userid=-1 and variableID=17
update settings set variablename='LetterHasArchiveCopy' where userid=-1 and variableID=18
update settings set variablename='BackupPath' where userid=-1 and variableID=19
update settings set variablename='FaxExtention' where userid=-1 and variableID=21
update settings set variablename='FaxDirectory' where userid=-1 and variableID=22
update settings set variablename='FaxUpdate' where userid=-1 and variableID=23
update settings set variablename='RelatedTableName' where userid=-1 and variableID=24
update settings set variablename='RelatedDisplayField' where userid=-1 and variableID=25
update settings set variablename='RelatedIDField' where userid=-1 and variableID=26
update settings set variablename='RefreshPriodTime' where userid=-1 and variableID=28
update settings set variablename='AllowMultiUser' where userid=-1 and variableID=29
update settings set variablename='RecommiteCopy' where userid=-1 and variableID=30
update settings set variablename='UseTemplate' where userid=-1 and variableID=31
update settings set variablename='ShowFarsiCaption' where userid=-1 and variableID=33
update settings set variablename='ServerID' where userid=-1 and variableID=34
update settings set variablename='LetterFormulaPart1' where userid=-1 and variableID=35
update settings set variablename='LetterFormulaPart2' where userid=-1 and variableID=36
update settings set variablename='LetterFormulaPart3' where userid=-1 and variableID=37
update settings set variablename='LetterFormulaPart4' where userid=-1 and variableID=38
update settings set variablename='LetterFormulaPart5' where userid=-1 and variableID=39
update settings set variablename='LetterFormulaPart6' where userid=-1 and variableID=40
update settings set variablename='ReplicatePriod' where userid=-1 and variableID=41
update settings set variablename='MaxReplicateAttachSize' where userid=-1 and variableID=42
update settings set variablename='ShowLifeTips' where userid=-1 and variableID=43
update settings set variablename='LetterFormulaSeperator' where userid=-1 and variableID=44
update settings set variablename='HasReplicate' where userid=-1 and variableID=45
update settings set variablename='EmailSubject' Where userid=-1 and variableID=70
update settings set variablename='EmailSendHost' where   userid=-1 and variableID=71
update settings set variablename='EmailReciveHost' where userid=-1 and variableID=72
update settings set variablename='EmailSendPort' where userid=-1 and variableID=73
update settings set variablename='EmailRecivePort' where userid=-1 and variableID=74
update settings set variablename='EmailConTime' where userid=-1 and variableID=75
update settings set variablename='EmailCoAddress' where userid=-1 and variableID=76
update settings set variablename='DefaultOrgPreCode' where userid=-1 and variableID=77
update settings set variablename='FaxUpdatePriod' where userid=-1 and variableID=78
update settings set variablename='99' where userid=-1 and variableID=99

if exists (select * from syscolumns  where name='description' and id=object_id('settings'))
begin

if not exists(select * from settings where variablename ='DefaultRecieverTitle')
INSERT INTO  Settings ([UserID]     ,[Value]  ,[VariableName])
SELECT    UserID,  Description,   'DefaultRecieverTitle'+cast(VariableId-14 as char(1))
FROM         Settings
WHERE     VariableId between 15 and 18 and userid>0

update settings set variablename='DefaultReciever1' where userid>=0 and variableID=15
update settings set variablename='DefaultReciever2' where userid>=0 and variableID=16
update settings set variablename='DefaultReciever3' where userid>=0 and variableID=17
update settings set variablename='DefaultReciever4' where userid>=0 and variableID=18
 alter table Settings drop column description
 --alter table Settings drop column variableID
 --exec SetsystemValue 'RecommiteOtherAfterAssignNo','1'
  exec SetSystemSetting 'RecommiteOtherAfterAssignNo','1'
end


GO


--------Triggers----------------------------------------------------------------------------------------------------------------------------------------------


if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Ins_ArchiveFolder]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Ins_ArchiveFolder]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Del_News]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Del_News]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Del_NewsGroupUsers]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Del_NewsGroupUsers]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Update_LetterRecommites]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Update_LetterRecommites]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_NotDel_SendStatus]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_NotDel_SendStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delete_Users]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Delete_Users]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Del_Users]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Del_Users]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[user_ins]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[user_ins]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Del_WorkGroupOrg]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Del_WorkGroupOrg]
GO

Create Trigger [dbo].[Tr_Ins_ArchiveFolder] on [dbo].[ArchiveFolder]
After Insert
As
Declare @ArchiveFolderID int
Declare @UserID int
Select Top 1 @ArchiveFolderID = FolderID , @UserID = UserID
From Inserted

Delete from UserAccArchive Where ArchiveFolderID = @ArchiveFolderID

Insert into UserAccArchive(SecID,UserID,ArchiveFolderID,ISAccess)
Select US.SecID , US.UserID  , @ArchiveFolderID , 1
from UserSecretariats US , Secretariats S ,Users U
Where US.SecID = S.SecID
  And US.UserID = U.ID and u.id=@UserID
Order By US.SecID , US.UserID
GO


Create Trigger Tr_Del_News
ON dbo.News
for Delete
As
  Set nocount on
  Declare @DeleteID int
  Select @DeleteID = NewsID From Deleted
  --if Exists(Select * from ImageData Where(TableName = 'News')And(TableID = @DeleteID))
  Delete From ImageData Where(TableName = 'News')And(TableID = @DeleteID)
  Delete From NewsUsers Where(NewsID = @DeleteID)
  Set nocount Off
GO



Create TRIGGER Tr_Del_NewsGroupUsers 
ON NewsGroup 
For DELETE 
AS
Set nocount on
Declare @DeleteID Int
Select top 1 @DeleteID = NewsGroupID From Deleted
if Exists(Select * from NewsGroupUsers Where(NewsGroupID = @DeleteID ))
   Delete From NewsGroupUsers Where(NewsGroupID = @DeleteID)
Set nocount off 
GO


CREATE TRIGGER Update_LetterRecommites ON dbo.ReCommites 
FOR INSERT, UPDATE, DELETE
AS
declare @Letterid int,@actionTypeID tinyint ,@Paraph nvarchar(500)


SELECT    @letterid=LetterID  ,@actionTypeID=actionTypeID
FROM         inserted

if @letterid is null
SELECT    @letterid=LetterID
FROM        deleted

select top 1 @paraph=isnull(Paraph,'') 
from Recommites
where letterid=@Letterid
order by recommitedate desc ,recommiteid desc 


UPDATE    Letter
SET    LetterRecommites =CAST(dbo.Recommites_by_indicator(LetterID)+'
¬Œ—Ì‰ Å«—«›: '+@paraph AS NVARCHAR(500))
 ,latestActionTypeid=@actionTypeID
where Letterid=@letterid

GO


CREATE Trigger Tr_NotDel_SendStatus
On SendStatus
instead of Delete
As
  Select * from SendStatus
  --RaisError('(Trigger) ÊÃÊœ ‰œ«—œ SendStatus «„ﬂ«‰ Õ–› «“ ÃœÊ· ', 16, 1)
GO







CREATE TRIGGER [Delete_Users] ON dbo.Users
FOR  DELETE
AS
set nocount on
declare  @ui int
select @ui=id from deleted
if @ui<>0
delete from settings
where userid=@ui

delete
FROM         UserSecretariats
where userid=@ui


delete
FROM         UserTemplateGroup
where userid=@ui

delete
FROM         UserExtention
where userid=@ui
GO


Create Trigger Tr_Del_Users
On dbo.Users
for Delete
As
  Delete From UserAccArchive
  Where UserID = (Select Top 1 ID from Deleted)


GO
CREATE TRIGGER [user_ins] ON dbo.Users
FOR INSERT
AS
set nocount on
declare  @ui int,@defSec int 
select @ui=id,@defSec= DefualtSecretariatID from inserted


delete from settings
where userid=@ui


insert into settings(userid,VariableName,Value)
SELECT @ui, VariableName, Value 
FROM Settings
where userid=0

delete
FROM         UserTemplateGroup
where userid=@ui
insert into     UserTemplateGroup
select @ui,TemplateGroupID
from TemplateGroup



delete
FROM         UserSecretariats
where userid=@ui
insert into     UserSecretariats
values(@ui,@defSec)


delete
FROM         UserExtention
where userid=@ui

insert into     UserExtention
(userid,extentionid)

select @ui,extentionid
from extention

if not exists (select * from ArchiveFolder where userid=@ui)
 INSERT INTO ArchiveFolder ( ParentFolderID , Title , UserID) values( 0 ,'»«Ìê«‰Ì' ,@ui)
set nocount off


GO

CREATE TRIGGER Tr_Del_WorkGroupOrg ON WorkGroup 
FOR DELETE 
AS
Declare @DeleteID Int
Select @DeleteID = WorkGroupID From Deleted

if Exists(Select * from WorkGroupOrg Where(WorkGroupID = @DeleteID ))
   Delete From WorkGroupOrg
   Where(WorkGroupID = @DeleteID)  




GO

--------Indexes----------------------------------------------------------------------------------------------------------------------------------------------

if not Exists(Select * from Sysindexes Where(Name like  'PK%')And(ID =object_id('Accesses')) )  
ALTER TABLE dbo.Accesses WITH NOCHECK ADD CONSTRAINT  
	PK_Accesses PRIMARY KEY CLUSTERED 
	(
	ID
	) ON [PRIMARY]

GO

if not Exists(Select * from Sysindexes Where(Name like  'PK%')And(ID =object_Id('Tables')) )  
ALTER TABLE dbo.Tables WITH NOCHECK ADD CONSTRAINT  
	PK_Tables PRIMARY KEY CLUSTERED 
	(
	TableId
	) ON [PRIMARY]

GO



if not Exists(Select * from Sysindexes Where(Name like  'PK%')And(ID =object_Id('Letter')) )
ALTER TABLE dbo.Letter ADD CONSTRAINT
	PK_Letter PRIMARY KEY CLUSTERED 
	(
	LetterID
	) ON [PRIMARY]


GO

if not Exists(Select * from Sysindexes Where(Name like  'pk%')And(ID =object_Id('Urgenceis')) )  
ALTER TABLE dbo.Urgenceis WITH NOCHECK ADD CONSTRAINT  
	PK_Urgenceis PRIMARY KEY CLUSTERED 
	(
	ID
	) WITH FILLFACTOR = 90 ON [PRIMARY]

GO

if not Exists(Select * from Sysindexes Where(Name like  'PK%')And(ID =object_Id('Secretariats')) )  
ALTER TABLE dbo.Secretariats WITH NOCHECK ADD CONSTRAINT  
	PK_Secretariats PRIMARY KEY CLUSTERED 
	(
	SecID
	) WITH FILLFACTOR = 90 ON [PRIMARY]

GO
 
 

if not Exists(Select * from Sysindexes Where(name like  'PK%')And(ID =object_Id('WorkGroupOrg')) )  --Ranjbar
ALTER TABLE dbo.WorkGroupOrg WITH NOCHECK ADD CONSTRAINT  
	PK_WorkGroupOrg PRIMARY KEY CLUSTERED 
	(
	WorkGroupOrgID
	) ON [PRIMARY]

GO


if not Exists(Select * from Sysindexes Where(name like  'PK%')And(ID =object_Id('RecommiteData')) )  --Ranjbar
ALTER TABLE dbo.RecommiteData WITH NOCHECK ADD CONSTRAINT  
	PK_RecommiteData_RecommiteDataID PRIMARY KEY CLUSTERED 
	(
	RecommiteDataID
	) ON [PRIMARY]

GO

 
 
if not exists ( select * from sysindexes where name ='userShortCut_user_idx')
 CREATE  CLUSTERED  INDEX [userShortCut_user_idx] ON [dbo].[UserShortCut]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Actions_ID')
   CREATE  INDEX [IX_Actions_ID] ON [dbo].[Actions]([ID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ApplicationForms_ID')   
   CREATE  INDEX [IX_ApplicationForms_ID] ON [dbo].[ApplicationForms]([ID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ArchiveFolder_ParentFolderID')     
 CREATE  INDEX [IX_ArchiveFolder_ParentFolderID] ON [dbo].[ArchiveFolder]([ParentFolderID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ArchiveFolder_Title')    
  CREATE  INDEX [IX_ArchiveFolder_Title] ON [dbo].[ArchiveFolder]([Title]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ArchiveFolder_UserID')   
   CREATE  INDEX [IX_ArchiveFolder_UserID] ON [dbo].[ArchiveFolder]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ErrorMessage_ErrorMessage')   
   CREATE  INDEX [IX_ErrorMessage_ErrorMessage] ON [dbo].[ErrorMessage]([ErrorMessage]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ErrorMessage_FarsiMessage')    
  CREATE  INDEX [IX_ErrorMessage_FarsiMessage] ON [dbo].[ErrorMessage]([FarsiMessage]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FieldAccess_FieldID')   
   CREATE  INDEX [IX_FieldAccess_FieldID] ON [dbo].[FieldAccess]([FieldID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FieldAccess_UserID')    
  CREATE  INDEX [IX_FieldAccess_UserID] ON [dbo].[FieldAccess]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FieldAccess_AccessTypeID')   
   CREATE  INDEX [IX_FieldAccess_AccessTypeID] ON [dbo].[FieldAccess]([AccessTypeID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Fields_TableID')    
  CREATE  INDEX [IX_Fields_TableID] ON [dbo].[Fields]([TableID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Fields_FieldName')    
  CREATE  INDEX [IX_Fields_FieldName] ON [dbo].[Fields]([FieldName]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Fields_FieldGroupID')   
   CREATE  INDEX [IX_Fields_FieldGroupID] ON [dbo].[Fields]([FieldGroupID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Fields_FieldTypeID')    
  CREATE  INDEX [IX_Fields_FieldTypeID] ON [dbo].[Fields]([FieldTypeID]) ON [PRIMARY]
GO


if not exists ( select * from sysindexes where name ='IX_Fields_ReferenceTableID')    
  CREATE  INDEX [IX_Fields_ReferenceTableID] ON [dbo].[Fields]([ReferenceTableID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FollowUp_StartFollowUpID')    
  CREATE  INDEX [IX_FollowUp_StartFollowUpID] ON [dbo].[FollowUp]([StartFollowUpID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FollowUp_FollowUPTypeID')   
   CREATE  INDEX [IX_FollowUp_FollowUPTypeID] ON [dbo].[FollowUp]([FollowUPTypeID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FollowUp_DoneStatusID')    
  CREATE  INDEX [IX_FollowUp_DoneStatusID] ON [dbo].[FollowUp]([DoneStatusID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FollowUp_UserID')    
  CREATE  INDEX [IX_FollowUp_UserID] ON [dbo].[FollowUp]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FollowUp_Letterid')   
   CREATE  INDEX [IX_FollowUp_Letterid] ON [dbo].[FollowUp]([Letterid]) ON [PRIMARY]
GO


if not exists ( select * from sysindexes where name ='IX_FromOrganizations_Title')   
   CREATE  INDEX [IX_FromOrganizations_Title] ON [dbo].[FromOrganizations]([Title]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FromOrganizations_ParentID')    
  CREATE  INDEX [IX_FromOrganizations_ParentID] ON [dbo].[FromOrganizations]([ParentID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_FromOrganizations')     
 CREATE  INDEX [IX_FromOrganizations] ON [dbo].[FromOrganizations]([Code]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='ind_idx')    
  CREATE  INDEX [ind_idx] ON [dbo].[Letter]([IndicatorID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='letter_idx')   
   CREATE  INDEX [letter_idx] ON [dbo].[Letter]([SecretariatID], [Letter_Type], [MYear], [letterformat], [IndicatorID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='myear_idx')    
  CREATE  INDEX [myear_idx] ON [dbo].[Letter]([MYear]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='secid_idx')    
  CREATE  INDEX [secid_idx] ON [dbo].[Letter]([SecretariatID]) ON [PRIMARY]
GO


if not exists ( select * from sysindexes where name ='letter_type_idx')     
 CREATE  INDEX [letter_type_idx] ON [dbo].[Letter]([Letter_Type]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='letterformat_idx')     
 CREATE  INDEX [letterformat_idx] ON [dbo].[Letter]([letterformat]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='incommingno_idx')  
    CREATE  INDEX [incommingno_idx] ON [dbo].[Letter]([IncommingNO]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='registrationdate_idx')   
   CREATE  INDEX [registrationdate_idx] ON [dbo].[Letter]([RegistrationDate]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='fromorgid_idx')    
  CREATE  INDEX [fromorgid_idx] ON [dbo].[Letter]([FromOrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='ToOrgid_idx')   
   CREATE  INDEX [ToOrgid_idx] ON [dbo].[Letter]([ToOrgID]) ON [PRIMARY]
GO
if not exists ( select * from sysindexes where name ='Letter_IDX_Indicator')
 CREATE  UNIQUE  INDEX [Letter_IDX_Indicator] ON [dbo].[Letter]([IndicatorID], [MYear], [SecretariatID], [Letter_Type], [letterformat]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_IndicatorID')    
  CREATE  INDEX [IX_Letter_IndicatorID] ON [dbo].[Letter]([IndicatorID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_Letter_Type')   
   CREATE  INDEX [IX_Letter_Letter_Type] ON [dbo].[Letter]([Letter_Type]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_letterformat')   
   CREATE  INDEX [IX_Letter_letterformat] ON [dbo].[Letter]([letterformat]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_IncommingNO')    
  CREATE  INDEX [IX_Letter_IncommingNO] ON [dbo].[Letter]([IncommingNO]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_FromOrgID')    
  CREATE  INDEX [IX_Letter_FromOrgID] ON [dbo].[Letter]([FromOrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_ToOrgID')   
   CREATE  INDEX [IX_Letter_ToOrgID] ON [dbo].[Letter]([ToOrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_Signerid')     
 CREATE  INDEX [IX_Letter_Signerid] ON [dbo].[Letter]([Signerid]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_ClassificationID')    
  CREATE  INDEX [IX_Letter_ClassificationID] ON [dbo].[Letter]([ClassificationID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_UrgencyID')    
  CREATE  INDEX [IX_Letter_UrgencyID] ON [dbo].[Letter]([UrgencyID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_UserID')   
   CREATE  INDEX [IX_Letter_UserID] ON [dbo].[Letter]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_MYear')   
   CREATE  INDEX [IX_Letter_MYear] ON [dbo].[Letter]([MYear]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_RegistrationDate')    
  CREATE  INDEX [IX_Letter_RegistrationDate] ON [dbo].[Letter]([RegistrationDate]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Letter_SecretariatID')    
  CREATE  INDEX [IX_Letter_SecretariatID] ON [dbo].[Letter]([SecretariatID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='Letterarchive_Folder_idx')   
   CREATE  INDEX [Letterarchive_Folder_idx] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='Letterarchive_Letter_Folder_idx')   
   CREATE  INDEX [Letterarchive_Letter_Folder_idx] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID], [LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='Letterarchive_Letter_idx')   
   CREATE  INDEX [Letterarchive_Letter_idx] ON [dbo].[LetterArchiveFolder]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterArchiveFolder_ArchiveFolderID')
      CREATE  INDEX [IX_LetterArchiveFolder_ArchiveFolderID] ON [dbo].[LetterArchiveFolder]([ArchiveFolderID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterArchiveFolder_LetterID')   
   CREATE  INDEX [IX_LetterArchiveFolder_LetterID] ON [dbo].[LetterArchiveFolder]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterArchiveFolder_UserID')    
  CREATE  INDEX [IX_LetterArchiveFolder_UserID] ON [dbo].[LetterArchiveFolder]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterData_LetterID')  
    CREATE  INDEX [IX_LetterData_LetterID] ON [dbo].[LetterData]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterData_extention')   
   CREATE  INDEX [IX_LetterData_extention] ON [dbo].[LetterData]([extention]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterFieldValue_LetterID')    
  CREATE  INDEX [IX_LetterFieldValue_LetterID] ON [dbo].[LetterFieldValue]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterFieldValue_FieldID')    
  CREATE  INDEX [IX_LetterFieldValue_FieldID] ON [dbo].[LetterFieldValue]([FieldID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterFieldValue_InsertUserID')   
   CREATE  INDEX [IX_LetterFieldValue_InsertUserID] ON [dbo].[LetterFieldValue]([InsertUserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterTemplate_Title')   
   CREATE  INDEX [IX_LetterTemplate_Title] ON [dbo].[LetterTemplate]([Title]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterText_LetterID')    
  CREATE  INDEX [IX_LetterText_LetterID] ON [dbo].[LetterText]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_LetterText_LetterFormat')   
   CREATE  INDEX [IX_LetterText_LetterFormat] ON [dbo].[LetterText]([LetterFormat]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ListItems_ListID')   
   CREATE  INDEX [IX_ListItems_ListID] ON [dbo].[ListItems]([ListID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ParaphTemplate_UserID')    
  CREATE  INDEX [IX_ParaphTemplate_UserID] ON [dbo].[ParaphTemplate]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ParaphTemplate_OrderID')    
  CREATE  INDEX [IX_ParaphTemplate_OrderID] ON [dbo].[ParaphTemplate]([OrderID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ParaphTemplate_Title')     
 CREATE  INDEX [IX_ParaphTemplate_Title] ON [dbo].[ParaphTemplate]([Title]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='recommite_idx')   
   CREATE  INDEX [recommite_idx] ON [dbo].[ReCommites]([LetterID], [ID], [Type], [ParentId], [OrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_LetterID') 
     CREATE  INDEX [IX_ReCommites_LetterID] ON [dbo].[ReCommites]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_ID')   
   CREATE  INDEX [IX_ReCommites_ID] ON [dbo].[ReCommites]([ID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_ParentId')  
    CREATE  INDEX [IX_ReCommites_ParentId] ON [dbo].[ReCommites]([ParentId]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_OrgID')  
    CREATE  INDEX [IX_ReCommites_OrgID] ON [dbo].[ReCommites]([OrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_UserID')  
    CREATE  INDEX [IX_ReCommites_UserID] ON [dbo].[ReCommites]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_DeadLineDate')    
  CREATE  INDEX [IX_ReCommites_DeadLineDate] ON [dbo].[ReCommites]([DeadLineDate]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReCommites_ActionTypeID')   
   CREATE  INDEX [IX_ReCommites_ActionTypeID] ON [dbo].[ReCommites]([ActionTypeID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReceiveTypes_Title')   
   CREATE  INDEX [IX_ReceiveTypes_Title] ON [dbo].[ReceiveTypes]([Title]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_RecommiteData_RecommiteID')   
   CREATE  INDEX [IX_RecommiteData_RecommiteID] ON [dbo].[RecommiteData]([RecommiteID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_RecommiteData_extention')   
   CREATE  INDEX [IX_RecommiteData_extention] ON [dbo].[RecommiteData]([extention]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReferenceTableData_TableID')   
   CREATE  INDEX [IX_ReferenceTableData_TableID] ON [dbo].[ReferenceTableData]([TableID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_ReferenceTableData_DataID')    
  CREATE  INDEX [IX_ReferenceTableData_DataID] ON [dbo].[ReferenceTableData]([DataID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_RelatedSecretariats_DestinationSecID')  
    CREATE  INDEX [IX_RelatedSecretariats_DestinationSecID] ON [dbo].[RelatedSecretariats]([DestinationSecID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_RelatedSecretariats_DestinationOrgID_inSource')     
 CREATE  INDEX [IX_RelatedSecretariats_DestinationOrgID_inSource] ON [dbo].[RelatedSecretariats]([DestinationOrgID_inSource]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Secretariats_ArchiveCenterID')    
  CREATE  INDEX [IX_Secretariats_ArchiveCenterID] ON [dbo].[Secretariats]([ArchiveCenterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Secretariats_Precode') 
     CREATE  INDEX [IX_Secretariats_Precode] ON [dbo].[Secretariats]([Precode]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Tables_TableType')   
   CREATE  INDEX [IX_Tables_TableType] ON [dbo].[Tables]([TableType]) ON [PRIMARY]
GO
if not exists ( select * from sysindexes where name ='User_extention_idx')
 CREATE  UNIQUE  INDEX [User_extention_idx] ON [dbo].[UserExtention]([UserId], [ExtentionID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserExtention_UserId')  
    CREATE  INDEX [IX_UserExtention_UserId] ON [dbo].[UserExtention]([UserId]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserExtention_ExtentionID')   
   CREATE  INDEX [IX_UserExtention_ExtentionID] ON [dbo].[UserExtention]([ExtentionID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_UserID')    
  CREATE  INDEX [IX_UserLog_UserID] ON [dbo].[UserLog]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_FormID')   
  CREATE  INDEX [IX_UserLog_FormID] ON [dbo].[UserLog]([FormID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_ActionID')  
    CREATE  INDEX [IX_UserLog_ActionID] ON [dbo].[UserLog]([ActionID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_LetterID')   
   CREATE  INDEX [IX_UserLog_LetterID] ON [dbo].[UserLog]([LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_User_Act_Form')   
   CREATE  INDEX [IX_UserLog_User_Act_Form] ON [dbo].[UserLog]([UserID], [ActionID], [FormID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLog_User_Act_Form_Letter')    
  CREATE  INDEX [IX_UserLog_User_Act_Form_Letter] ON [dbo].[UserLog]([UserID], [ActionID], [FormID], [LetterID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserLoginLogout_UserID')  
    CREATE  INDEX [IX_UserLoginLogout_UserID] ON [dbo].[UserLoginLogout]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='UserMessage_To_status_idx')    
  CREATE  INDEX [UserMessage_To_status_idx] ON [dbo].[UserMessage]([To_], [Status]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserNote_UserID')   
   CREATE  INDEX [IX_UserNote_UserID] ON [dbo].[UserNote]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='userShortCut_keytext_idx')    
  CREATE  INDEX [userShortCut_keytext_idx] ON [dbo].[UserShortCut]([keyText]) ON [PRIMARY]
GO
if not exists ( select * from sysindexes where name ='UserShortcut_altkey_idx') 
 CREATE  UNIQUE  INDEX [UserShortcut_altkey_idx] ON [dbo].[UserShortCut]([UserID], [altKey]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserTemplateGroup_TemplateGroupID')    
  CREATE  INDEX [IX_UserTemplateGroup_TemplateGroupID] ON [dbo].[UserTemplateGroup]([TemplateGroupID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_UserTemplateGroup_UserID')    
  CREATE  INDEX [IX_UserTemplateGroup_UserID] ON [dbo].[UserTemplateGroup]([UserID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Users_FromOrgID')     
 CREATE  INDEX [IX_Users_FromOrgID] ON [dbo].[Users]([FromOrgID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Users_AccessID')    
  CREATE  INDEX [IX_Users_AccessID] ON [dbo].[Users]([AccessID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Users_DefualtSecretariatID')   
   CREATE  INDEX [IX_Users_DefualtSecretariatID] ON [dbo].[Users]([DefualtSecretariatID]) ON [PRIMARY]
GO

if not exists ( select * from sysindexes where name ='IX_Users_SecondOrgID')   
   CREATE  INDEX [IX_Users_SecondOrgID] ON [dbo].[Users]([SecondOrgID]) ON [PRIMARY]
GO
if exists (select * from dbo.sysindexes where name = N'fromorganizations_idx' and id = object_id(N'[dbo].[FromOrganizations]'))
drop index [dbo].[FromOrganizations].[fromorganizations_idx]
GO



--------Procedures----------------------------------------------------------------------------------------------------------------------------------------------


IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetLetterIDByFollowID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetLetterIDByFollowID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SetSystemSetting]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetSystemSetting]
GO 
IF  EXISTS (SELECT * FROM sysobjects WHERE id  = OBJECT_ID(N'[dbo].[SetUserSetting]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[SetUserSetting]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetSystemSetting]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetSystemSetting]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetUserSetting]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetUserSetting]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetExtentionIDByName]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetExtentionIDByName]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetRecommiter]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetRecommiter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetfieldValueByLetterID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetfieldValueByLetterID]

GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Details_Follow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sp_Details_Follow]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Memo_Follow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sp_Memo_Follow]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Recommites_follow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sp_Recommites_follow]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Proceed_Follow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sp_Proceed_Follow]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_SentMail_Follow]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[Sp_SentMail_Follow]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetFollowCode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetFollowCode]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetCheckCode]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetCheckCode]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Activate_Letter]')) 
DROP PROCEDURE [dbo].[Activate_Letter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Activate_Recommite]')) 
DROP PROCEDURE [dbo].[Activate_Recommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[AnswerLetter]')) 
DROP PROCEDURE [dbo].[AnswerLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[AnswerNote]')) 
DROP PROCEDURE [dbo].[AnswerNote]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Check_duplicate_UserName]')) 
DROP PROCEDURE [dbo].[Check_duplicate_UserName]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_Accesses]')) 
DROP PROCEDURE [dbo].[delete_Accesses]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_Actions_ByFormID]'))
DROP PROCEDURE [dbo].[delete_Actions_ByFormID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_All_Secretariats_Of_User]'))
DROP PROCEDURE [dbo].[Delete_All_Secretariats_Of_User]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_All_TemplateGroup_Of_User]'))
DROP PROCEDURE [dbo].[Delete_All_TemplateGroup_Of_User]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_ArchiveFolder]'))
DROP PROCEDURE [dbo].[Delete_ArchiveFolder]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_Exported_LetterData]'))
DROP PROCEDURE [dbo].[Delete_Exported_LetterData]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_Extention]'))
DROP PROCEDURE [dbo].[delete_Extention]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_Letter]'))
DROP PROCEDURE [dbo].[Delete_Letter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_LetterArchiveFolder]'))
DROP PROCEDURE [dbo].[delete_LetterArchiveFolder]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_LetterData]'))
DROP PROCEDURE [dbo].[delete_LetterData]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_letterImage]'))
DROP PROCEDURE [dbo].[delete_letterImage]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_LetterWord]'))
DROP PROCEDURE [dbo].[delete_LetterWord]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_ParaphTemplate]'))
DROP PROCEDURE [dbo].[delete_ParaphTemplate]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_ReCommites]'))
DROP PROCEDURE [dbo].[delete_ReCommites]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Delete_Table]'))
DROP PROCEDURE [dbo].[Delete_Table]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_user]'))
DROP PROCEDURE [dbo].[delete_user]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[delete_UserTable]'))
DROP PROCEDURE [dbo].[delete_UserTable]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Deleted_to_Letter]'))
DROP PROCEDURE [dbo].[Deleted_to_Letter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Draft_to_SentLetter]'))
DROP PROCEDURE [dbo].[Draft_to_SentLetter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Duplicate_UserShortCut]'))
DROP PROCEDURE [dbo].[Duplicate_UserShortCut]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Export_LetterData]'))
DROP PROCEDURE [dbo].[Export_LetterData]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Folder_hasChild]'))
DROP PROCEDURE [dbo].[Folder_hasChild]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Folder_hasLetter]'))
DROP PROCEDURE [dbo].[Folder_hasLetter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Folder_hasRecommite]'))
DROP PROCEDURE [dbo].[Folder_hasRecommite]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_ActiveUser]'))
DROP PROCEDURE [dbo].[Get_ActiveUser]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_All_Letter]'))
DROP PROCEDURE [dbo].[Get_All_Letter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_ArchiveFolder_ByAccess]'))
DROP PROCEDURE [dbo].[Get_ArchiveFolder_ByAccess]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_ArchiveFolder_ByAccessAndTitle]'))
DROP PROCEDURE [dbo].[Get_ArchiveFolder_ByAccessAndTitle]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ArchiveFolder_byUserID]'))
DROP PROCEDURE [dbo].[get_ArchiveFolder_byUserID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ArchiveFolder_byUserID_and_Letterid]'))
DROP PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Letterid]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ArchiveFolder_byUserID_and_Place]'))
DROP PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Place]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ArchiveFolder_byUserID_and_Title]'))
DROP PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Title]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_DayID_InWeek]'))
DROP PROCEDURE [dbo].[get_DayID_InWeek]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_DestinationOrgID]'))
DROP PROCEDURE [dbo].[get_DestinationOrgID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_DraftReceivedLetter_count]'))
DROP PROCEDURE [dbo].[Get_DraftReceivedLetter_count]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_DraftLetter_count]'))
DROP PROCEDURE [dbo].[Get_DraftLetter_count]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FieldValue_by_LetterID_FieldID]'))
DROP PROCEDURE [dbo].[Get_FieldValue_by_LetterID_FieldID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FieldValues_by_LetterID]'))
DROP PROCEDURE [dbo].[Get_FieldValues_by_LetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FollowUP_Count]'))
DROP PROCEDURE [dbo].[Get_FollowUP_Count]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FromOrganizations_ByCode]'))
DROP PROCEDURE [dbo].[Get_FromOrganizations_ByCode]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FromOrganizationsID_ByCode]'))
DROP PROCEDURE [dbo].[Get_FromOrganizationsID_ByCode]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_FromOrganizationsTitle_ByID]'))
DROP PROCEDURE [dbo].[Get_FromOrganizationsTitle_ByID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_indicatorID_BySentLetterID]'))
DROP PROCEDURE [dbo].[get_indicatorID_BySentLetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_innerLetterMemo]'))
DROP PROCEDURE [dbo].[Get_innerLetterMemo]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_InnerOrganizations]'))
DROP PROCEDURE [dbo].[get_InnerOrganizations]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_LastIndicatorID]'))
DROP PROCEDURE [dbo].[get_LastIndicatorID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LastUserId]'))
DROP PROCEDURE [dbo].[Get_LastUserId]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_Letter_By_UserMemo]'))
DROP PROCEDURE [dbo].[Get_Letter_By_UserMemo]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_Letter_ByIndicator]'))
DROP PROCEDURE [dbo].[get_Letter_ByIndicator]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_Letter_PDF]'))
DROP PROCEDURE [dbo].[Get_Letter_PDF]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_letter_To_Transfer]'))
DROP PROCEDURE [dbo].[get_letter_To_Transfer]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterAbstract]'))
DROP PROCEDURE [dbo].[Get_LetterAbstract]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterAction_By_LetterID]'))
DROP PROCEDURE [dbo].[Get_LetterAction_By_LetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterAttachment]'))
DROP PROCEDURE [dbo].[Get_LetterAttachment]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterData_by_LetterDataID]'))
DROP PROCEDURE [dbo].[Get_LetterData_by_LetterDataID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterData_by_LetterID]'))
DROP PROCEDURE [dbo].[Get_LetterData_by_LetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterdataExtention]'))
DROP PROCEDURE [dbo].[Get_LetterdataExtention]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterDataIDs]'))
DROP PROCEDURE [dbo].[Get_LetterDataIDs]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_letterHistory_by_LetterID]'))
DROP PROCEDURE [dbo].[Get_letterHistory_by_LetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_LetterID_ByInCommingNo]'))
DROP PROCEDURE [dbo].[get_LetterID_ByInCommingNo]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_LetterID_ByIndicatorid]'))
DROP PROCEDURE [dbo].[get_LetterID_ByIndicatorid]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_LetterID_ByRetroActionNo]'))
DROP PROCEDURE [dbo].[get_LetterID_ByRetroActionNo]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterJpgFile]'))
DROP PROCEDURE [dbo].[Get_LetterJpgFile]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_LetterMemo_ByID]'))
DROP PROCEDURE [dbo].[get_LetterMemo_ByID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterTifFile]'))
DROP PROCEDURE [dbo].[Get_LetterTifFile]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LetterWordFile]'))
DROP PROCEDURE [dbo].[Get_LetterWordFile]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_LifeTip_byUserid]'))
DROP PROCEDURE [dbo].[Get_LifeTip_byUserid]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_MaxPage_ByLetterID]'))
DROP PROCEDURE [dbo].[get_MaxPage_ByLetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_MaxReferenceDataID_By_TableID]'))
DROP PROCEDURE [dbo].[get_MaxReferenceDataID_By_TableID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_NewOrgCode]'))
DROP PROCEDURE [dbo].[get_NewOrgCode]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_NewOrgID]'))
DROP PROCEDURE [dbo].[get_NewOrgID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_Nowdate]'))
DROP PROCEDURE [dbo].[get_Nowdate]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_NowTime]'))
DROP PROCEDURE [dbo].[get_NowTime]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_OrgPreCodeByID]'))
DROP PROCEDURE [dbo].[get_OrgPreCodeByID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_OrgTitleByID]'))
DROP PROCEDURE [dbo].[get_OrgTitleByID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_RecommiteJpgFile]'))
DROP PROCEDURE [dbo].[Get_RecommiteJpgFile]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ReferenceTable]'))
DROP PROCEDURE [dbo].[get_ReferenceTable]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_ReferenceTableData_by_tableID]'))
DROP PROCEDURE [dbo].[get_ReferenceTableData_by_tableID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_Related_Letters]'))
DROP PROCEDURE [dbo].[Get_Related_Letters]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_Subject]'))
DROP PROCEDURE [dbo].[get_Subject]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_sys_AppMessage]'))
DROP PROCEDURE [dbo].[Get_sys_AppMessage]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_tmp_LetterDataIDs]'))
DROP PROCEDURE [dbo].[Get_tmp_LetterDataIDs]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_UserExtention_by_UserID]'))
DROP PROCEDURE [dbo].[get_UserExtention_by_UserID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_userfields_by_tableID]'))
DROP PROCEDURE [dbo].[get_userfields_by_tableID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_UserMessageCount]'))
DROP PROCEDURE [dbo].[Get_UserMessageCount]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Get_UserSecretariat_Tree]'))
DROP PROCEDURE [dbo].[Get_UserSecretariat_Tree]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[get_userTable]'))
DROP PROCEDURE [dbo].[get_userTable]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetLastFormOrderByLetterID]'))
DROP PROCEDURE [dbo].[GetLastFormOrderByLetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetLetterTemplate_HeaderID]'))
DROP PROCEDURE [dbo].[GetLetterTemplate_HeaderID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetList]'))
DROP PROCEDURE [dbo].[GetList]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetNumberOfLetterAttach]'))
DROP PROCEDURE [dbo].[GetNumberOfLetterAttach]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetRecommiteById]'))
DROP PROCEDURE [dbo].[GetRecommiteById]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetUserLogout_status]'))
DROP PROCEDURE [dbo].[GetUserLogout_status]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[has_PDF]'))
DROP PROCEDURE [dbo].[has_PDF]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[hassame_orgtitle]'))
DROP PROCEDURE [dbo].[hassame_orgtitle]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Import_LetterData]'))
DROP PROCEDURE [dbo].[Import_LetterData]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_Actions]'))
DROP PROCEDURE [dbo].[insert_Actions]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_All_ReCommites]'))
DROP PROCEDURE [dbo].[insert_All_ReCommites]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_ArchiveFolder]'))
DROP PROCEDURE [dbo].[insert_ArchiveFolder]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_Extention]'))
DROP PROCEDURE [dbo].[insert_Extention]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_FieldAccess]'))
DROP PROCEDURE [dbo].[insert_FieldAccess]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_FieldAccess_by_TableID]'))
DROP PROCEDURE [dbo].[insert_FieldAccess_by_TableID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_Letter]'))
DROP PROCEDURE [dbo].[insert_Letter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_Letter_all]'))
DROP PROCEDURE [dbo].[insert_Letter_all]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_LetterArchiveFolder]'))
DROP PROCEDURE [dbo].[insert_LetterArchiveFolder]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_LetterData]'))
DROP PROCEDURE [dbo].[insert_LetterData]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_LetterText]'))
DROP PROCEDURE [dbo].[insert_LetterText]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_newActionsAccess]'))
DROP PROCEDURE [dbo].[insert_newActionsAccess]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Insert_ParaphTemplate]'))
DROP PROCEDURE [dbo].[Insert_ParaphTemplate]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_ReciveLetter]'))
DROP PROCEDURE [dbo].[insert_ReciveLetter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_ReCommites]'))
DROP PROCEDURE [dbo].[insert_ReCommites]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_ReCommites]'))
DROP PROCEDURE [dbo].[insert_ReCommites]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Insert_OtherRecievers]'))
DROP PROCEDURE [dbo].[Insert_OtherRecievers]

GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_ToOrganizations]'))
DROP PROCEDURE [dbo].[insert_ToOrganizations]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_UserLog]'))
DROP PROCEDURE [dbo].[insert_UserLog]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insert_UserLoginLogout]'))
DROP PROCEDURE [dbo].[insert_UserLoginLogout]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insertReCommites_autoID]'))
DROP PROCEDURE [dbo].[insertReCommites_autoID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[insertText]'))
DROP PROCEDURE [dbo].[insertText]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[letterContainText]'))
DROP PROCEDURE [dbo].[letterContainText]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Make_FieldValues_By_LetterID]'))
DROP PROCEDURE [dbo].[Make_FieldValues_By_LetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[min_page]'))
DROP PROCEDURE [dbo].[min_page]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Move_ParaphTemplate]'))
DROP PROCEDURE [dbo].[Move_ParaphTemplate]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[NewRecommiteID]'))
DROP PROCEDURE [dbo].[NewRecommiteID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Next_page]'))
DROP PROCEDURE [dbo].[Next_page]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[NextTag]'))
DROP PROCEDURE [dbo].[NextTag]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[NumberOfLetter_By_SecID]'))
DROP PROCEDURE [dbo].[NumberOfLetter_By_SecID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[NumberOfTemplate_By_TemplateGroupID]'))
DROP PROCEDURE [dbo].[NumberOfTemplate_By_TemplateGroupID]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Org_hasChild]'))
DROP PROCEDURE [dbo].[Org_hasChild]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[org_hasLetter]'))
DROP PROCEDURE [dbo].[org_hasLetter]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Org_is_Secretariat]'))
DROP PROCEDURE [dbo].[Org_is_Secretariat]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Recommite_has_JpgFile]'))
DROP PROCEDURE [dbo].[Recommite_has_JpgFile]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Recommite_Report]'))
DROP PROCEDURE [dbo].[Recommite_Report]
GO
 IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Report_Scan]')) 
DROP PROCEDURE [dbo].[Report_Scan]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Report_UserLog]'))
DROP PROCEDURE [dbo].[Report_UserLog]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Report_UserTable]'))
DROP PROCEDURE [dbo].[Report_UserTable]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SaveAs_Accesses]'))
DROP PROCEDURE [dbo].[SaveAs_Accesses]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_AlternativeInfo_ByUserID]'))
DROP PROCEDURE [dbo].[Select_AlternativeInfo_ByUserID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_CiticalLetterFields]'))
DROP PROCEDURE [dbo].[select_CiticalLetterFields]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_ExactCopy]'))
DROP PROCEDURE [dbo].[Select_ExactCopy]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_FieldAccess_by_TableID]'))
DROP PROCEDURE [dbo].[Select_FieldAccess_by_TableID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_Fields_by_TableID]'))
DROP PROCEDURE [dbo].[Select_Fields_by_TableID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_FolllowUp_ByLetterID]'))
DROP PROCEDURE [dbo].[Select_FolllowUp_ByLetterID]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_FollowUP_By_Date]'))
DROP PROCEDURE [dbo].[Select_FollowUP_By_Date]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_FollowUp_ByStart]'))
DROP PROCEDURE [dbo].[Select_FollowUp_ByStart]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_fromorganization]'))
DROP PROCEDURE [dbo].[select_fromorganization]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_Letter]'))
DROP PROCEDURE [dbo].[select_Letter]
GO
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_letter_details]'))
DROP PROCEDURE [dbo].[Select_letter_details]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_LetterReCommite]')) 
DROP PROCEDURE [dbo].[Select_LetterReCommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_LetterSubject]')) 
DROP PROCEDURE [dbo].[select_LetterSubject]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SELECT_ParaphTemplate]')) 
DROP PROCEDURE [dbo].[SELECT_ParaphTemplate]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_ReceivedLetters]')) 
DROP PROCEDURE [dbo].[select_ReceivedLetters]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_recommites_byLetterID]')) 
DROP PROCEDURE [dbo].[Select_recommites_byLetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_sentLetters]')) 
DROP PROCEDURE [dbo].[select_sentLetters]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[select_userLoginLogout]')) 
DROP PROCEDURE [dbo].[select_userLoginLogout]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_UserOrgid]')) 
DROP PROCEDURE [dbo].[Select_UserOrgid]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Select_UserSign]')) 
DROP PROCEDURE [dbo].[Select_UserSign]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[selectAddedInfo]')) 
DROP PROCEDURE [dbo].[selectAddedInfo]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SelectInfo]')) 
DROP PROCEDURE [dbo].[SelectInfo]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SelectLetter]'))
DROP PROCEDURE [dbo].[SelectLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[SendLetter_To_Other_sec]')) 
DROP PROCEDURE [dbo].[SendLetter_To_Other_sec]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[shrink_Files]')) 
DROP PROCEDURE [dbo].[shrink_Files]
GO


IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_Add_GroupRecommite]')) 
DROP PROCEDURE [dbo].[sp_Add_GroupRecommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_AddFileToDB]')) 
DROP PROCEDURE [dbo].[Sp_AddFileToDB]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_ArchivePlaces]')) 
DROP PROCEDURE [dbo].[sp_ArchivePlaces]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_board]')) 
DROP PROCEDURE [dbo].[sp_board]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_checkusernotes]')) 
DROP PROCEDURE [dbo].[sp_checkusernotes]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_CompleteFieldBook]')) 
DROP PROCEDURE [dbo].[sp_CompleteFieldBook]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_dailyRep]')) 
DROP PROCEDURE [dbo].[sp_dailyRep]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Del_NewsGroupUsers]')) 
DROP PROCEDURE [dbo].[Sp_Del_NewsGroupUsers]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Del_WorkGroupOrg]')) 
DROP PROCEDURE [dbo].[Sp_Del_WorkGroupOrg]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_DelayedLetter]')) 
DROP PROCEDURE [dbo].[Sp_DelayedLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_delphi_Proc]')) 
DROP PROCEDURE [dbo].[sp_delphi_Proc]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_delphi_proceByName]')) 
DROP PROCEDURE [dbo].[sp_delphi_proceByName]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_DistinctDate]')) 
DROP PROCEDURE [dbo].[Sp_DistinctDate]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_duplicateOrg]')) 
DROP PROCEDURE [dbo].[sp_duplicateOrg]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_FieldByTableCode]')) 
DROP PROCEDURE [dbo].[sp_FieldByTableCode]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_FillBlob]')) 
DROP PROCEDURE [dbo].[Sp_FillBlob]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_GetFromHelp]')) 
DROP PROCEDURE [dbo].[sp_GetFromHelp]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_GetTermCode]')) 
DROP PROCEDURE [dbo].[sp_GetTermCode]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_inbox]')) 
DROP PROCEDURE [dbo].[sp_inbox]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_Letter_Numbers]')) 
DROP PROCEDURE [dbo].[sp_Letter_Numbers]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_makeRecommited]')) 
DROP PROCEDURE [dbo].[sp_makeRecommited]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_recommite_report]')) 
DROP PROCEDURE [dbo].[sp_recommite_report]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_recommite_statistic]')) 
DROP PROCEDURE [dbo].[sp_recommite_statistic]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_Recommites_Number]')) 
DROP PROCEDURE [dbo].[sp_Recommites_Number]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_ReindexTables]')) 
DROP PROCEDURE [dbo].[sp_ReindexTables]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_Emails]')) 
DROP PROCEDURE [dbo].[Sp_Sel_Emails]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_ImageData]')) 
DROP PROCEDURE [dbo].[Sp_Sel_ImageData]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_News]')) 
DROP PROCEDURE [dbo].[Sp_Sel_News]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_NewsGroup]')) 
DROP PROCEDURE [dbo].[Sp_Sel_NewsGroup]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_Phone]')) 
DROP PROCEDURE [dbo].[Sp_Sel_Phone]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Sel_UserAccArchive]')) 
DROP PROCEDURE [dbo].[Sp_Sel_UserAccArchive]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Select_Receipt]')) 
DROP PROCEDURE [dbo].[Sp_Select_Receipt]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Sp_Select_WorkGroup]')) 
DROP PROCEDURE [dbo].[Sp_Select_WorkGroup]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_SetForeinKey]')) 
DROP PROCEDURE [dbo].[sp_SetForeinKey]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_Statistic]')) 
DROP PROCEDURE [dbo].[sp_Statistic]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[sp_stop_mytrace]')) 
DROP PROCEDURE [dbo].[sp_stop_mytrace]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_Letter_By_LetterID]')) 
DROP PROCEDURE [dbo].[Transfer_Get_Letter_By_LetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_Letterdata_By_LetterDataID]')) 
DROP PROCEDURE [dbo].[Transfer_Get_Letterdata_By_LetterDataID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_LetterData_By_LetterID]')) 
DROP PROCEDURE [dbo].[Transfer_Get_LetterData_By_LetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_LetterFieldValue_By_LetterID]')) 
DROP PROCEDURE [dbo].[Transfer_Get_LetterFieldValue_By_LetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_Recommites_By_LetterID]')) 
DROP PROCEDURE [dbo].[Transfer_Get_Recommites_By_LetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Get_SentLetter]')) 
DROP PROCEDURE [dbo].[Transfer_Get_SentLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_insert_LetterFieldValue]')) 
DROP PROCEDURE [dbo].[Transfer_insert_LetterFieldValue]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_insert_ReCommites]')) 
DROP PROCEDURE [dbo].[Transfer_insert_ReCommites]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Insert_SentLetter]')) 
DROP PROCEDURE [dbo].[Transfer_Insert_SentLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Insert_SharedLetter]')) 
DROP PROCEDURE [dbo].[Transfer_Insert_SharedLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_Sent_RelatedSecs]')) 
DROP PROCEDURE [dbo].[Transfer_Sent_RelatedSecs]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Transfer_shared_RelatedSecs]')) 
DROP PROCEDURE [dbo].[Transfer_shared_RelatedSecs]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Trunsfer_update_Letter]')) 
DROP PROCEDURE [dbo].[Trunsfer_update_Letter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Trunsfer_update_LetterFieldValue]')) 
DROP PROCEDURE [dbo].[Trunsfer_update_LetterFieldValue]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Trunsfer_update_ReCommites]')) 
DROP PROCEDURE [dbo].[Trunsfer_update_ReCommites]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Update_all_recommites]')) 
DROP PROCEDURE [dbo].[Update_all_recommites]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Update_Archived_letter]')) 
DROP PROCEDURE [dbo].[Update_Archived_letter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_ArchiveFolder]')) 
DROP PROCEDURE [dbo].[update_ArchiveFolder]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_FromOrganizations_Title]')) 
DROP PROCEDURE [dbo].[update_FromOrganizations_Title]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_Letter_Finalized]')) 
DROP PROCEDURE [dbo].[update_Letter_Finalized]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_Letter_Indicator]')) 
DROP PROCEDURE [dbo].[update_Letter_Indicator]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_letter_sendstatusID]')) 
DROP PROCEDURE [dbo].[update_letter_sendstatusID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_LetterText]')) 
DROP PROCEDURE [dbo].[update_LetterText]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Update_ParaphTemplate]')) 
DROP PROCEDURE [dbo].[Update_ParaphTemplate]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_ReCommites_proceed]')) 
DROP PROCEDURE [dbo].[update_ReCommites_proceed]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_ReCommites_viewDate]')) 
DROP PROCEDURE [dbo].[update_ReCommites_viewDate]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[update_UserLoginLogout]')) 
DROP PROCEDURE [dbo].[update_UserLoginLogout]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[UserChange_pass]')) 
DROP PROCEDURE [dbo].[UserChange_pass]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[UserLog_Report]')) 
DROP PROCEDURE [dbo].[UserLog_Report]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Web_Access]')) 
DROP PROCEDURE [dbo].[Web_Access]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_ArchiveRecommite]')) 
DROP PROCEDURE [dbo].[web_ArchiveRecommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_Get_Letter_by_LetterID]')) 
DROP PROCEDURE [dbo].[web_Get_Letter_by_LetterID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_Get_LetterData_by_LetterDataID]')) 
DROP PROCEDURE [dbo].[web_Get_LetterData_by_LetterDataID]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_GetLetterArchiveHistory]')) 
DROP PROCEDURE [dbo].[web_GetLetterArchiveHistory]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_GetLetterAttachment]')) 
DROP PROCEDURE [dbo].[web_GetLetterAttachment]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_GetRecommiteById]')) 
DROP PROCEDURE [dbo].[web_GetRecommiteById]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_AnswerLetter]')) 
DROP PROCEDURE [dbo].[web_insert_AnswerLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_DraftLetter]')) 
DROP PROCEDURE [dbo].[web_insert_DraftLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_innerLetter]')) 
DROP PROCEDURE [dbo].[web_insert_innerLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_Insert_LetterData]')) 
DROP PROCEDURE [dbo].[web_Insert_LetterData]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_NewReCommite]')) 
DROP PROCEDURE [dbo].[web_insert_NewReCommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_ReceivedLetter]')) 
DROP PROCEDURE [dbo].[web_insert_ReceivedLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_insert_sentLetter]')) 
DROP PROCEDURE [dbo].[web_insert_sentLetter]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_ProceedRecommite]')) 
DROP PROCEDURE [dbo].[web_ProceedRecommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[web_Select_LetterReCommite]')) 
DROP PROCEDURE [dbo].[web_Select_LetterReCommite]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[ysp_Backup]')) 
DROP PROCEDURE [dbo].[ysp_Backup]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[Ysp_create_Temp_Database]')) 
DROP PROCEDURE [dbo].[Ysp_create_Temp_Database]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[ysp_DELETE_Temp_Database]')) 
DROP PROCEDURE [dbo].[ysp_DELETE_Temp_Database]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[ysp_exists_Temp_Database]')) 
DROP PROCEDURE [dbo].[ysp_exists_Temp_Database]
GO

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[dbo].[ysp_shrink]')) 
DROP PROCEDURE [dbo].[ysp_shrink]
 
GO
 
GO


CREATE Proc [dbo].[GetLetterIDByFollowID]
@followID char(13),@LetterID int out
as
begin

declare @Secid int,@IndicatorID int ,@CorrectCheckCode char(3),@CheckCode char(3),@Letter_type int

if (substring(@followid,8,1)<>'/') or 
isnumeric(substring(@followid,1,7))=0 or
isnumeric(substring(@followid,9,5))=0
begin
  set @letterid=0
  return
end
 
set @secid=cast(substring(@followID,4,3) as int)
set @CheckCode=substring(@followID,1,3) 


set @Letter_type=cast(substring(@followID,7,1) as int)
set @IndicatorID=cast(substring(@followID,9,5) as int)

if exists (select * from letter where IndicatorID=@IndicatorID and SecretariatID=@secid and 
@Letter_type=Letter_type)
select @LetterID=max(LetterID) 
from letter 
where IndicatorID=@IndicatorID and SecretariatID=@secid and 
Letter_type=@Letter_type
else
select @LetterID=0 

execute GetCheckCode @LetterID, @CorrectCheckCode output

if @CorrectCheckCode<>@CheckCode
select @LetterID=0 


end



GO 
create proc [dbo].[Sp_Details_Follow]
@letterid int
as
SELECT L.IndicatorID, L.IncommingNO, L.RegistrationDate, FO.Title as fot FROM Letter AS L
 INNER JOIN FromOrganizations AS FO ON L.ToOrgID = FO.ID WHERE (L.LetterID = @letterid)



GO 
CREATE proc [dbo].[Sp_Memo_Follow]
@letterid int
as
SELECT [Memo] FROM [Letter] where letterid=@letterid

 
GO
CREATE proc [dbo].[Sp_Recommites_follow]
@letterID int
as
SELECT FO.title+'('+FO.responsiblestaffer+')' as fot, RC.Paraph FROM ReCommites RC 
inner join fromorganizations FO on
RC.orgid=FO.id where letterid=@letterid

 
GO
CREATE proc [dbo].[Sp_Proceed_Follow]
@letterID int
as

SELECT AT.actiontypetitle as att FROM Letter L inner join ActionType AT on
L.latestActionTypeID=AT.actiontypeid where L.letterid=@letterid

 
GO
CREATE proc [dbo].[Sp_SentMail_Follow]
@letterID int
as



declare @i int
set @i=(select sentletterid from letter where letterid=@letterid )
select indicatorid from letter where letterid=@i


GO 
CREATE Procedure [dbo].[GetFollowCode]
@letterID int,@Code varchar(100) output
as
declare @SecretariatID varchar(4),@IndicatorID varchar(5),@Check char(3), @LetterType char(1)

select @SecretariatID=Cast(SecretariatID AS VARCHAR(3)),@IndicatorID=Cast(IndicatorID as varchar(5)), @LetterType=Cast(Letter_Type as char(1))
from Letter
where LetterID=@LetterID

exec GetCheckCode @letterID,@Check output

while len(@SecretariatID)<3 
  set @SecretariatID='0'+@SecretariatID

while len(@IndicatorID)<5
  set @IndicatorID='0'+@IndicatorID

set @Code=@Check+@SecretariatID+@LetterType +'/'+@IndicatorID 
GO 

CREATE Procedure [dbo].[GetCheckCode]
@L int,@CheckCode char(3) out
 
as

declare @s varchar(8),@a1 int,@a2 int,@a3 int,@a4 int,@a5 int,@a6 int,@a7 int,@a8 int

set @s=cast(@l as varchar(8))

 while len(@s)<8
   set @s='0'+@s

set @a1=cast(substring(@s,1,1) as int)
set @a2=cast(substring(@s,2,1) as int)
set @a3=cast(substring(@s,3,1) as int)
set @a4=cast(substring(@s,4,1) as int)
set @a5=cast(substring(@s,5,1) as int)
set @a6=cast(substring(@s,6,1) as int)
set @a7=cast(substring(@s,7,1) as int)
set @a8=cast(substring(@s,8,1) as int)

set @CheckCode=cast(100+@a8+(@a4+@a5+8)*(@a3+@a6+3)*(@a2+@a7+5)*(@a1+@a8+7)%900 as char(3))
  GO

CREATE PROCEDURE [dbo].[Activate_Letter](@receivedMode bit,@indicatorID int ,@myear int, @secID int)
as
    if @receivedMode=1 
 update ReceievedLetters
                 set letter_type=1
                 where IndicatorID=@indicatorID
                 and  MYear=@myear
                 and  SecretariatID=@secID  
else
 update SentLetters
                 set letter_type=1
                 where IndicatorID=@indicatorID
                 and  MYear=@myear
                 and  SecretariatID=@secID

  delete from LetterFile
                 where LetterIndicatorID=@indicatorID
                 and  LetterMYear=@myear
                 and  SecID=@secid  


GO 

CREATE procedure  [dbo].[Activate_Recommite](
               @RecommiteID  int)
 AS
update  [dbo].[ReCommites] 
set proceeded=0,ActionTypeID=1
WHERE
	( RecommiteID	 = @RecommiteID)



GO 


CREATE Procedure [dbo].[AnswerLetter]( @LetterID int,@AnswerLetterID int,@Today char(10))
as

UPDATE Letter SET SentLetterID = @AnswerLetterID
 WHERE   LetterID=@LetterID
DECLARE @Letterformat int

select @letterFormat=letterFormat from letter
 WHERE   LetterID=@LetterID


if @letterFormat=1
begin
 UPDATE ReCommites
 SET Proceeded=1, ProceedDate = @today
 WHERE (Proceeded=0) AND (LetterID=@LetterID)

 UPDATE ReCommites SET ActionTypeID=5 WHERE  (LetterID=@LetterID)
 update letter set LatestActionTypeID=5 where letterid=@letterid

end


GO 

create proc [dbo].[AnswerNote]
@recommiteID int
as
update Recommites
set Staffmemo='ÅÌ‘ ‰ÊÌ” ’«œ—Â ¬„«œÂ ‘œ ',actiontypeid=4
where recommiteid=@recommiteID

 
GO

Create procedure [dbo].[Check_duplicate_UserName]
@UserName nvarchar(50),@result bit  output
as
if exists (SELECT *
  FROM  Users where ltrim(rtrim(username))=ltrim(rtrim(@UserName)))
set @result=1
else
set @result=0

GO 



CREATE PROCEDURE [dbo].[delete_Accesses]
	(@AccessID 	[tinyint])

AS DELETE [dbo].[Accesses] 

WHERE 
	( [ID]	 = @AccessID)







GO 



CREATE PROCEDURE [dbo].[delete_Actions_ByFormID]
	(@FormTag 	[tinyint])

AS DELETE [dbo].[Actions] 

WHERE (
	 [FormTag]	 = @FormTag)







GO 





create procedure [dbo].[Delete_All_Secretariats_Of_User](@userid int)
as
DELETE FROM UserSecretariats
WHERE     (UserId = @UserID)


 

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


create procedure [dbo].[Delete_All_TemplateGroup_Of_User](@userid int)
as
DELETE FROM UserTemplateGroup
WHERE     (UserId = @UserID)



 

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Delete_ArchiveFolder](@FolderID [int])  
AS

DELETE UserAccArchive  
WHERE( ArchiveFolderID = @FolderID)  
---
 
delete LetterArchiveFolder 
where ArchiveFolderID = @FolderID  

DELETE ArchiveFolder  
WHERE( FolderID = @FolderID)  



GO 


CREATE proc [dbo].[Delete_Exported_LetterData](@SecretariatID int, @myear tinyint)
as
delete     LetterData
FROM         LetterData 
INNER JOIN       Letter ON LetterData.LetterID = Letter.LetterID
WHERE     (Letter.SecretariatID = @SecretariatID) AND (Letter.MYear = @myear)







GO


CREATE PROCEDURE [dbo].[delete_Extention]
@ExtentionID int
AS
delete UserExtention where ExtentionID=@ExtentionID
delete Extention where ExtentionID=@ExtentionID





GO

CREATE PROCEDURE [dbo].[Delete_Letter]  
@LetterID int,@newInd int  
AS  
declare @letterformat tinyint  
select   @letterformat=letterformat  
from letter  
where letterid=@LetterID  
  
if @letterformat=1   
  UPDATE    Letter  
  SET        LetterFormat = 3 ,memo=memo +'('+cast(indicatorid as varchar(6)), indicatorid=@newind  
 WHERE     (LetterID = @LetterID)  
  
if @letterformat in (2,3)  
begin    
  DELETE [ReCommites]  WHERE     (LetterID = @LetterID)  
  DELETE [LetterText]  WHERE     (LetterID = @LetterID)  
  DELETE [LetterData]  WHERE     (LetterID = @LetterID)  
  DELETE from Letter WHERE     (LetterID = @LetterID)  
end


GO



CREATE PROCEDURE [dbo].[delete_LetterArchiveFolder]
	(@LetterArchiveID 	[int])

AS
declare @letterid int

select @letterid =letterid
from[LetterArchiveFolder]
where [LetterArchiveID]	 = @LetterArchiveID


DELETE [dbo].[LetterArchiveFolder]

WHERE
	( [LetterArchiveID]	 = @LetterArchiveID)

if not exists (select * from [LetterArchiveID] where letterid=@letterid) 
update letter
set Archived=0
where letterid=@letterid





GO

create proc [dbo].[delete_LetterData] (@LetterDataID int )
as
delete       LetterData
WHERE     (LetterDataID = @LetterDataID)






GO


create proc [dbo].[delete_letterImage]
@Letterdataid int
as
declare @pageNumber int,@Letterid int

select @pageNumber=pageNumber,@Letterid=Letterid from letterdata
WHERE     (Letterdataid = @Letterdataid)

DELETE FROM letterdata
WHERE     (Letterdataid = @Letterdataid)

update letterdata
set pageNumber=pageNumber-1
where @Letterid=Letterid and pageNumber>@pageNumber







GO

CREATE PROCEDURE [dbo].[delete_LetterWord]
	(@LetterID 	[int])

AS DELETE [dbo].[LetterData] 

WHERE 
	( [LetterID]	 = @LetterID AND
	 [extention]	 = 3)








GO 
Create Procedure [dbo].[delete_ParaphTemplate]
@ParaphTemplateID int
as
declare @OrderId tinyint,@Userid int


select @OrderID=Orderid,@Userid=Userid from ParaphTemplate Where ParaphTemplateID=@ParaphTemplateID

delete  ParaphTemplate Where ParaphTemplateID=@ParaphTemplateID


   update ParaphTemplate set OrderId=OrderID-1      where  Userid=@Userid and Orderid>@orderid


GO




CREATE PROCEDURE [dbo].[delete_ReCommites]
	(@RecommiteID 	[int])

AS DELETE [dbo].[ReCommites] 

WHERE 
	( [RecommiteID]	 = @RecommiteID)






GO


CREATE PROCEDURE [dbo].[Delete_Table](@tableID int)
as

declare @Tablename varchar(50)

select @tablename=Tablename
 from tables
where tableid=@tableid


  delete from tables
  where tableid=@tableid
  
  delete from Fields
  where tableid=@tableid

  exec('drop table '+@tablename)




 

GO



CREATE Procedure [dbo].[delete_user]
 @userid int 
as
exec sp_SetForeinKey 0



delete ArchiveFolder where UserID=@UserID
delete Emails where UsersID=@UserID
delete FieldAccess where UserID=@UserID
delete FollowUp where UserID=@UserID
delete LetterArchiveFolder where UserID=@UserID
delete NewsGroupUsers where UsersID=@UserID
delete NewsUsers where UsersID=@UserID
delete ParaphTemplate where UserID=@UserID
delete PhoneGroup where UsersID=@UserID
delete Settings where UserID=@UserID
delete UserAccArchive where UserID=@UserID
delete UserExtention where UserId=@UserID
delete UserLog where UserID=@UserID
delete UserLoginLogout where UserID=@UserID  
delete UserNote where UserID=@UserID
delete UserSecretariats where UserId=@UserID
delete UserShortCut where UserID=@UserID
delete UserSign where UserID=@UserID
delete UserTemplateGroup where UserID=@UserID
delete users where id=@UserID

GO


CREATE Procedure [dbo].[delete_UserTable]
 @TableID int
as


UPDATE    Letter
SET      UserTableID = NULL
from letter
inner join  LetterFieldValue on LetterFieldValue.letterid=letter.LetterID
inner join  Fields on Fields.id=LetterFieldValue.FieldID
WHERE TableID = @tableid

delete    LetterFieldValue
from LetterFieldValue
inner join  Fields on Fields.id=LetterFieldValue.FieldID
WHERE TableID = @tableid



DELETE FROM Fields
WHERE     (TableID = @tableid)


delete tables
WHERE     (TableID = @tableid)

GO


create PROCEDURE [dbo].[Deleted_to_Letter]
@LetterID int,@newInd int,@today char(10)
AS
   UPDATE   Letter
   SET        registrationdate=@today,      IndicatorID = @newInd,  LetterFormat = 1
 WHERE     (LetterID = @LetterID)



GO




Create PROCEDURE [dbo].[Draft_to_SentLetter]
@LetterID int,@newInd int,@today char(10),@IsCopy bit ,@Proceed bit
AS

declare @Letter_Type int
select @Letter_Type=Letter_type
from letter
WHERE     (LetterID = @LetterID)

  UPDATE   Letter
   SET        registrationdate=@today,      IndicatorID = @newInd,  LetterFormat = 1
  WHERE     (LetterID = @LetterID)


  if @Letter_Type<>1 
begin
if @Proceed=1   
 update recommites
    set proceeded=1 where letterid=@LetterID  and finallized=1

if @IsCopy=1   
 update recommites
    set IsCopy=1 where letterid=@LetterID  and finallized=1
end

declare @receivedLetter int

select top 1 @receivedLetter=Letterid
from letter where sentletterid=@LetterID

if @receivedLetter is not null
 begin
  update recommites
  set proceeded=1,ActionTypeid=5 where letterid=@receivedLetter
  update  letter set LatestActionTypeID=5 where letterid=@receivedLetter
 end


if not exists (select * from recommites where letterid=@LetterID)
 INSERT INTO dbo.ReCommites ( LetterID, ID, Type, ParentId, OrgID, Paraph, RecommiteDate, UserID, IsCopy, Proceeded,OrgStaff) 
select LetterID,1,3,0,fromorgid,'',registrationdate,userid,0,0 ,''
from letter
where letterid=@LetterID
declare @maxID int,@parent int

select @maxID=MAX(id)
from ReCommites
where LetterID=@LetterID and Type=3

if @maxID is null 
begin 
  set @maxID=1
  set @Parent=0
end
else
begin 
  set @Parent=@maxID
  set @maxID=@maxID+1
end
  if @Letter_Type<>1    
 INSERT INTO dbo.ReCommites ( LetterID, ID, Type, ParentId, OrgID, Paraph, RecommiteDate, UserID, IsCopy, Proceeded,OrgStaff) 
select LetterID,@maxID,3,@Parent,toorgid,'',registrationdate,userid,0,0 ,''
from letter
where letterid=@LetterID


update ReCommites
set Finallized=1
where letterid=@LetterID

  if @Letter_Type<>1 
begin
if @Proceed=1   
 update recommites
    set proceeded=1 where letterid=@LetterID  

if @IsCopy=1   
 update recommites
    set IsCopy=1 where letterid=@LetterID 
end


GO
Create Procedure [dbo].[Duplicate_UserShortCut]
@UserID int,
@altKey char(1),
@result bit output
as
if exists (SELECT *   FROM UserShortCut where UserID=@UserID and altKey=@altKey)
set @result=1
else
set @result=0


GO












CREATE proc [dbo].[Export_LetterData](@LetterdataID int)
as
if not exists (select * from yeganeh_tmp_db.dbo.sysobjects where name='LetterData')
begin
CREATE TABLE yeganeh_tmp_db.dbo.LetterData (
	LetterDataID int  NOT NULL ,
	LetterID int NOT NULL ,
	PageNumber tinyint NOT NULL ,
	Image image NULL ,
	extention tinyint NOT NULL,
	[Description] [nvarchar] (200)  NULL )
end
insert INTO yeganeh_tmp_db.DBO.LetterData (LetterDataID,LetterID,PageNumber,Image,extention)
SELECT     LetterDataID,LetterID,PageNumber,Image,extention
FROM         LetterData
WHERE     (LetterdataID = @LetterdataID)




 

GO







CREATE PROCEDURE [dbo].[Folder_hasChild]
	(@userid int ,@ParentID 	[int],@hasChild bit output)
AS 
if exists( SELECT     *
FROM         ArchiveFolder
WHERE     (ParentFolderID = @ParentID) and (UserID = @userid))
set @haschild=1
else
set @haschild=0








GO



create procedure [dbo].[Folder_hasLetter](@Folderid int,@hasLetter bit output)
as
if exists (SELECT     *
FROM         LetterArchiveFolder
inner join letter on letter.letterid= LetterArchiveFolder.letterid
WHERE     letterformat<=2 and (ArchiveFolderID = @Folderid)) set @hasLetter=1
else
set @hasLetter=0







GO
Create  procedure [dbo].[Folder_hasRecommite](@Folderid int,@hasLetter bit output)
as
if exists (SELECT     *
FROM         LetterArchiveFolder
where  ArchiveFolderID = @Folderid) set @hasLetter=1
else
set @hasLetter=0

GO 

CREATE  procedure [dbo].[Get_ActiveUser]
as
SELECT     UserID,MAX(UserLoginLogoutID) ID into #LastLogout

FROM         UserLoginLogout 
where  dbo.Shamsi(LoginTime)=dbo.Shamsi(getdate())
group by Userid
 
SELECT     Users.UserName,case when datepart(hh, LoginTime)<10 then '0'+cast(datepart(hh, LoginTime) as char(1)) else cast(datepart(hh, LoginTime) as 
char(2)) end +':'+
case when datepart(mi, LoginTime)<10 then '0'+cast(datepart(mi, LoginTime) as char(1)) else cast(datepart(mi, LoginTime) as char(2)) end  as logintime
FROM    #LastLogout
inner join  UserLoginLogout  on UserLoginLogout.UserLoginLogoutID=#LastLogout.ID
INNER JOIN   Users ON #LastLogout.UserID = Users.Id
where  datediff(ss,LogoutTime,getdate())<90  and (isSafeLogout=0)









GO

CREATE PROCEDURE [dbo].[Get_All_Letter]

@Secretariatid int,    
@myear tinyint,    
@Letter_Type int,    
@LetterFormat int,    
@where nvarchar(2000),    
@top smallint ,    
@archiveFolderID int,    
@ArchiveStatus tinyint ,-- 0 ,1 and 2(= all) 
@userid int   
as    
declare @sqlCommand nvarchar(4000)   ,@archiveLetter nvarchar(4000)
DECLARE @InnerNo NVARCHAR(500);    
declare @Delimeter char(1)    
set @Delimeter=dbo.GetSystemValue(44)    
set @InnerNo=case  dbo.GetSystemValue(35)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'    
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+    
    
             case  dbo.GetSystemValue(36)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'    
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+    
    
             case  dbo.GetSystemValue(37)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'    
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+    
    
             case  dbo.GetSystemValue(38)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'    
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+    
    
             case  dbo.GetSystemValue(39)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'                       when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+    
    
             case  dbo.GetSystemValue(40)    
                   when 0 then ''    
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'    
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'    
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'    
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'    
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'    
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'    
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'    
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end    
    
IF len(@InnerNo)>5    
if substring(@InnerNo,len(@InnerNo)-4,5)='+'''+@Delimeter+'''+'    
   set @InnerNo=substring(@InnerNo,1,len(@InnerNo)-5)    
    
if @innerno<>''    
set @InnerNo='replace(replace(ltrim(rtrim
('+@InnerNo+')),'''+@Delimeter+@Delimeter+''','''+@Delimeter+'''),'''+@Delimeter+@Delimeter+''','''+@Delimeter+''')'    
else    
set @innerno='cast(indicatorid as nvarchar(500))'    

set @archiveLetter='select  l.LetterID
from LETTER L
LEFT JOIN LetterArchiveFolder laf ON laf.Letterid=l.letterid
LEFT join archivefolder af  on laf.ArchiveFolderID=af.FolderID
LEFT join UserAccArchive uac on uac.ArchiveFolderID=af.FolderID and uac.secid=L.SecretariatID
where ISNULL(uac.UserID,'+cast(@userid as varchar(10))+')='+cast(@userid as varchar(10))+' and ISNULL(uac.ISAccess,1)=1'

    
set @sqlCommand='SELECT top  '+Cast(@top as varchar(5)) +'     Letter.LetterID, Letter.IndicatorID, Letter.MYear, Letter.SecretariatID,    
                      Letter.Letter_Type, Letter.letterformat, Letter.IncommingNO, Letter.FromOrgID,Letter.IncommingDate,    
                      Letter.ToOrgID, Letter.UrgencyID, Letter.Memo, Letter.RetroactionNo, Letter.RegistrationDate, Letter.FollowLetterNo,    
                      Letter.ToStaffer, Letter.SentLetterID, Letter.TemplateID, Letter.UserMemo,Letter.DeadLineDate, sender.Title AS SenderTitle,    
                      Deliver.Title AS DeliverTitle,dbo.has_Page(Letter.letterid) has_Page,    
dbo.has_WordPage(Letter.letterid) has_WordPage,dbo.has_file(letter.letterID) has_file, Letter.SubjectID,   
LetterTypes.Title LetterTypeTitle,LetterRecommites,sendstatusTitle,'+@innerno+'  InnerNo,Letter.Archived    
,ActionTypeTitle   
 , Letter.SignerID , (Select Title from FromOrganizations FO Where(FO.ID = Letter.SignerID)) as SignerTitle   
,Letter.ReceiveTypeID , letter.ClassificationID 
  
FROM Letter left  JOIN    
     FromOrganizations sender ON Letter.ToOrgID = sender.ID left JOIN    
     FromOrganizations Deliver ON Letter.FromOrgID = Deliver.ID    
     Left join LetterTypes on LetterTypes.ID=Letter.Letter_type    
     inner join sendstatus on sendstatus.sendstatusID=Letter.sendstatusID    
     inner join Secretariats on Secretariats.Secid=Letter.SecretariatID    
     left JOIN ActionType  ON ActionType.ActionTypeID = Letter.LatestActionTypeID'    
    
    
if @archiveFolderID>0    
set @sqlCommand=@sqlCommand+'    
Left join LetterArchiveFolder on LetterArchiveFolder.Letterid=Letter.LetterID '    
    
set @sqlCommand=@sqlCommand+' where letter.Finalized=1 '    
    
    
    
set @where=isnull(ltrim(rtrim(@where)),'')    
if @where <>'' set @where =' and '+@where    
    
if @Letter_Type<>0    
  set @where=@where+' and (Letter_Type = '+Cast(@Letter_Type as varchar(5))+')'    
    
if @Secretariatid<>0    
  set @where=@where+' and (Secretariatid = '+Cast(@Secretariatid as varchar(5))+')'    
    
if @Myear<>0    
  set @where=@where+' and (myear = '+Cast(@myear as varchar(5))+')'    
    
    
    
if @LetterFormat<>0    
  set @where=@where+' and (LetterFormat = '+Cast(@LetterFormat as varchar(5))+')'    
    
 
if @ArchiveStatus=0    
 set @where=@where+' and archived=0'
    
if @ArchiveStatus=1    
 set @where=@where+' and archived=1' 
    
set @archiveLetter=@archiveLetter+@where     
    
if @ArchiveStatus=2    
 begin    
   set @where=@where+' and    
       not exists (SELECT  * FROM   LetterArchiveFolder,ArchiveFolder Where
       LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID    
       and  (ArchiveFolder.UserID=0 or ArchiveFolder.Archivecenterid>0)  and Letterid =Letter.LetterID)  and archived=1'    
end    

   
if @archiveFolderID>0    
    set @where=@where+' and (archiveFolderID = '+Cast(@archiveFolderID as varchar(5))+')'     
set @where=@where +' and Letter.letterid in ('+@archiveLetter+')'
    
set @sqlCommand=@sqlCommand+@where + ' order by indicatorid desc '    
print @sqlcommand    
exec sp_executesql   @sqlCommand    

GO






CREATE PROCEDURE [dbo].[get_DayID_InWeek]
	(@DayID tinyint output)
AS 
SET DATEFIRST 6
select @DayID=datepart(dw,getdate())-1


GO 

CREATE procedure [dbo].[get_DestinationOrgID](@DestinationServerIP varchar(30),@DestinationServerDB varchar(50),@DestinationSecID 
int,@DestinationOrgID int output)
as

SELECT     @DestinationOrgID=DestinationOrgID_inSource
FROM         RelatedSecretariats
WHERE     (DestinationServerIP = @DestinationServerIP) AND (DestinationServerDB = @DestinationServerDB) and DestinationSecID=@DestinationSecID



GO


CREATE PROCEDURE [dbo].[Get_DraftReceivedLetter_count]
@Myear tinyint,@secretariatid int ,@count int output

AS
select @count=count(*)
from letter
where Myear=@Myear and letter_type=1 and letterformat=2 and secretariatid=@secretariatid

set @count=isnull(@Count,0)

GO


CREATE PROCEDURE [dbo].[Get_DraftLetter_count]
@Myear tinyint,@secretariatid int ,@count int output

AS
select @count=count(*)
from letter
where Myear=@Myear and letterformat=2 and secretariatid=@secretariatid     and finalized=1

set @count=isnull(@Count,0)
GO

create  procedure [dbo].[Get_FieldValue_by_LetterID_FieldID]
@LetterID int,@FieldID int ,@fieldValue nvarchar(2000) output
as
SELECT  @fieldValue=LetterFieldValue.FieldValue
FROM         LetterFieldValue
WHERE letterid=@LetterID
 and FieldID=@FieldID

set @fieldValue=isnull(@fieldValue,'')

 
GO




CREATE procedure [dbo].[Get_FieldValues_by_LetterID]
@LetterID int,@UserID int,@FormOrder tinyint
as
SELECT  LetterFieldValue.*,Fields.[order],
Fields.[Description],Fields.FieldTypeID,Fields.ReferenceTableID,
isnull(FieldAccess.AccessTypeID,1) AccessTypeID
FROM         LetterFieldValue
left join  Fields on Fields.ID = LetterFieldValue.FieldID
left join   FieldAccess on FieldAccess.FieldID=Fields.ID
WHERE    FormOrder = @FormOrder and LetterFieldValue.letterid=@LetterID
 and FieldAccess.UserID=@userID
ORDER BY Fields.[order]











GO 
CREATE Procedure [dbo].[Get_FollowUP_Count](@UserID int ,@BDate char(10), @Edate char(10),
@DonStatusID int,@Count int output)
as

SELECT     @Count=Count(*)
FROM  FollowUp
WHERE
    (@UserID = 0 or FollowUp.UserID = @UserID) AND
    (FollowUp.ToDoDate between  @BDate and @Edate)
and (@DonStatusID=0 or FollowUp.DoneStatusID = @DonStatusID)

set @Count=isnull(@Count,0)

GO 

CREATE PROCEDURE [dbo].[Get_FromOrganizations_ByCode] @Code nvarchar(10),@ID int output , @ResponsibleStaffer nvarchar(50) output
AS

select top 1 @ID= ID,@ResponsibleStaffer=ResponsibleStaffer
from dbo.FromOrganizations
WHERE 	Code	 = @Code and isactive=1

set @id=isnull(@id,0)
set @ResponsibleStaffer=isnull(@ResponsibleStaffer,'')


GO
CREATE PROCEDURE [dbo].[Get_FromOrganizationsID_ByCode] @Code nvarchar(10),@ID int output
AS

select top 1 @ID= ID
from dbo.FromOrganizations
WHERE 	Code	 = @Code and isactive=1

set @id=isnull(@id,0)

GO

CREATE PROCEDURE [dbo].[Get_FromOrganizationsTitle_ByID]  
(@ID [int],  
@Title [nvarchar](100) output,  
@ResponsibleStaffer [nvarchar](50) output , 
@code nvarchar(10) output )  
AS 
Select  @Title  = Title,  
@ResponsibleStaffer  = ResponsibleStaffer,  
@code=code  from [dbo].[FromOrganizations]   
WHERE ( [ID]  = @ID)
 
if @ResponsibleStaffer is null
   Set @ResponsibleStaffer = '' --'»œÊ‰ „”∆Ê·'  
----

GO

CREATE procedure [dbo].[get_indicatorID_BySentLetterID](@SentLetterID int,@indicatorID int output)
as
select top 1 @indicatorID=indicatorID from letter where 
SentLetterID =@SentLetterID
 set @indicatorID=isnull(@indicatorID,-1)












GO
CREATE Procedure [dbo].[Get_innerLetterMemo]
@Letterid int,@memo nvarchar(500) output ,@is_Inner bit output
as
SELECT     @is_Inner= case when Letter_Type=3 then 1 else 0 end, @Memo=Memo
FROM         Letter
WHERE     (LetterID = @Letterid)
set @Memo =isnull(@Memo,'')
set @is_Inner=isnull(@Memo,0)



 

GO


CREATE procedure [dbo].[get_InnerOrganizations]
as

SELECT * FROM FromOrganizations
where IsInnerOrg=1 and isactive=1
order by isactive desc


GO
CREATE procedure [dbo].[get_LastIndicatorID](@letter_type tinyint ,@SecretariatID int,@Myear int,
@LetterFormat tinyint,@newIndicatorid int output)
as
declare @RecivedInd int ,@SentInd  int,@innerind int,@Docind int
Select @RecivedInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=1 

Select @SentInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=2 


 Select @innerind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=3

 Select @Docind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat
 and SecretariatID=@SecretariatID and letter_type=4

  if @RecivedInd<dbo.GetSystemValue(3) 
    set  @RecivedInd=dbo.GetSystemValue(3)


  if @SentInd<dbo.GetSystemValue(3) 
    set  @SentInd=dbo.GetSystemValue(3)

  if @innerind<dbo.GetSystemValue(3) 
    set  @innerind=dbo.GetSystemValue(3)


if @letter_type=3 
 begin
  set @newIndicatorid=@innerind
  return
 end
if @letter_type=4 
 begin
  set @newIndicatorid=@docind
  return
 end


 if dbo.GetSystemValue(5)=0
  begin
     if @SentInd>@RecivedInd
        set @newIndicatorid=@SentInd
       else
        set @newIndicatorid=@RecivedInd

  end

 if dbo.GetSystemValue(5)=1
   begin
    if @letter_type=1
     set @newIndicatorid=@RecivedInd
    if @letter_type=2
     set @newIndicatorid=@SentInd
   end

 if dbo.GetSystemValue(5)=2
  begin
   if @letter_type=2
      set @newIndicatorid=2*(1+(@SentInd-1)/2)

   if @letter_type=1
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)+1
  end

 if dbo.GetSystemValue(5)=3
  begin
   if @letter_type=1
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)

   if @letter_type=2
      set @newIndicatorid=2*(1+(@SentInd -1)/2)+1
  end


GO 

create proc [dbo].[Get_LastUserId](@id int output)
as
SELECT     @id=MAX(Id)
FROM         Users




GO

CREATE Procedure [dbo].[Get_Letter_By_UserMemo]
@UserMemo nvarchar(255),@Letter_Type tinyint
as
SELECT   Letter.LetterID,letter.Letter_Type, Letter.IndicatorID, Letter.MYear, Secretariats.SecTitle, LetterTypes.Title AS LetterType, Letter.IncommingNO,
                      Letter.Incommingdate, Letter.Memo, Letter.AttachTitle, Letter.RetroactionNo, Letter.UserMemo, Letter.RegistrationDate, 
Letter.FollowLetterNo, 
                      Letter.SubjectDescription, Subject.SubjectTitle, Classifications.Title AS ClassificationTitle, FromOrganizations_1.Title AS FromTitle, 
                      FromOrganizations.Title AS ToTitle
FROM         Letter INNER JOIN
                      Secretariats ON Letter.SecretariatID = Secretariats.SecID INNER JOIN
                      LetterTypes ON Letter.Letter_Type = LetterTypes.ID INNER JOIN
                      FromOrganizations ON Letter.FromOrgID = FromOrganizations.ID INNER JOIN
                      FromOrganizations FromOrganizations_1 ON Letter.ToOrgID = FromOrganizations_1.ID INNER JOIN
                      Classifications ON Letter.ClassificationID = Classifications.ID LEFT OUTER JOIN
                      Subject ON Letter.SubjectID = Subject.SubjectID
WHERE     (Letter_Type=@Letter_Type or @Letter_Type=0) and (Letter.UserMemo like '%'+@UserMemo+'%')  
/*union
SELECT   Letter.LetterID,letter.Letter_Type, Letter.IndicatorID, Letter.MYear, Secretariats.SecTitle, LetterTypes.Title AS LetterType, Letter.IncommingNO,
                      Letter.Incommingdate, Letter.Memo, Letter.AttachTitle, Letter.RetroactionNo, Letter.UserMemo, Letter.RegistrationDate, 
Letter.FollowLetterNo, 
                      Letter.SubjectDescription, Subject.SubjectTitle, Classifications.Title AS ClassificationTitle, FromOrganizations_1.Title AS FromTitle, 
                      FromOrganizations.Title AS ToTitle
FROM         Letter INNER JOIN
                      Secretariats ON Letter.SecretariatID = Secretariats.SecID INNER JOIN
                      LetterTypes ON Letter.Letter_Type = LetterTypes.ID INNER JOIN
                      FromOrganizations ON Letter.FromOrgID = FromOrganizations.ID INNER JOIN
                      FromOrganizations FromOrganizations_1 ON Letter.ToOrgID = FromOrganizations_1.ID INNER JOIN
                      Classifications ON Letter.ClassificationID = Classifications.ID LEFT OUTER JOIN
                      Subject ON Letter.SubjectID = Subject.SubjectID
WHERE     usermemo like '%-%' and 
@usermemo between ltrim(rtrim(substring(UserMemo,1,charindex('-',usermemo)-1))) and  ltrim(rtrim(substring(UserMemo,charindex('-',usermemo)+1,100)))
and (Letter_Type=@Letter_Type or @Letter_Type=0) 
*/

GO










CREATE PROCEDURE [dbo].[get_Letter_ByIndicator]
	(@IndicatorID 	[int],
	 @MYear 	[tinyint],
	 @SecretariatID 	[tinyint],
	 @Letter_Type 	[tinyint],
	 @letterformat 	[tinyint])

AS 
SELECT     FromOrganizations.Title AS FromorgTitle, FromOrganizations_1.Title AS ToorgTitle,
 Letter.LetterID, Letter.IncommingNO, Letter.Incommingdate,Letter.Memo, Letter.RegistrationDate
FROM         Letter INNER JOIN
                      FromOrganizations ON Letter.FromOrgID = FromOrganizations.ID INNER JOIN
                      FromOrganizations FromOrganizations_1 ON Letter.ToOrgID = FromOrganizations_1.ID
WHERE 
	( [IndicatorID]	 = @IndicatorID AND
	 [MYear]	 = @MYear AND
	 [SecretariatID]	 = @SecretariatID AND
	 [Letter_Type]	 = @Letter_Type AND
	 [letterformat]	 = @letterformat)




 

GO 







create procedure [dbo].[Get_Letter_PDF](@LetterID int)
as
select top 1 *
from  letterdata
where LetterID=@LetterID  
and Extention=5




 

GO 


CREATE procedure [dbo].[get_letter_To_Transfer]
@fromSecID int,
@ToSecID int,
@FromDate char(10),
--@SentLetters bit,
--@all_letters bit,
@maxSize int
as

/*
if @all_letters=1 and @SentLetters=1 

SELECT   l.*,1 SentType 
FROM ReCommites RC 
INNER JOIN Letter l ON RC.LetterID = L.LetterID
where l.SecretariatID=@FromSecID  and Registrationdate >=@FromDate AND (Rc.Proceeded = 0) and 
Rc.OrgID in (
select orgid 
from UserSecretariats 
INNER JOIN  Users ON UserSecretariats.UserId = Users.Id
WHERE     (UserSecretariats.SecId = @ToSecID) AND (Users.DefualtSecretariatID = @fromSecID))

union

select  l.*,2 SentType 
from Letter l
where SecretariatID=@ToSecID and letterFormat=2 and letter_type=1 and  sendstatus=3
and Registrationdate >=@FromDate  

else

if @all_letters=1  AND @SentLetters=0


SELECT   l.*,1 SentType 
FROM ReCommites RC 
INNER JOIN Letter l ON RC.LetterID = L.LetterID
where l.SecretariatID=@FromSecID  and Registrationdate >=@FromDate AND (Rc.Proceeded = 0) and 
Rc.OrgID in (
select orgid 
from UserSecretariats 
INNER JOIN  Users ON UserSecretariats.UserId = Users.Id
WHERE     (UserSecretariats.SecId = @ToSecID) AND (Users.DefualtSecretariatID = @fromSecID))



if  @SentLetters=1 AND @all_letters=0*/

select  l.*,2 SentType 
from Letter l
where SecretariatID=@ToSecID and letterFormat=2 and letter_type=1 and  sendstatusid=2
and Registrationdate >=@FromDate  













GO 



CREATE PROCEDURE [dbo].[Get_LetterAbstract]
	@LetterID int

AS
SELECT     IndicatorID, IncommingNO, Incommingdate, RegistrationDate, Memo
FROM         Letter
WHERE 
	LetterID=@LetterID






GO 

CREATE PROCEDURE [dbo].[Get_LetterAction_By_LetterID]
	@LetterID int
AS
BEGIN
	SET NOCOUNT ON;
SELECT     LetterID, LatestActionTypeID, LatestActionReason
FROM         Letter
WHERE     (LetterID = @LetterID)
END


GO 
CREATE Procedure [dbo].[Get_LetterAttachment]
@letterID int 
as

SELECT     LetterData.LetterDataID, Extention.ExtentionTitle, Extention.Extention, LetterData.PageNumber, LetterData.Description
FROM       LetterData 
INNER JOIN  Extention ON LetterData.extention = Extention.ExtentionID
WHERE LetterID=@LetterID





GO




create proc [dbo].[Get_LetterData_by_LetterDataID](@LetterDataID int )
as
SELECT     LetterDataID, Image
FROM        LetterData
WHERE     (LetterDataID = @LetterDataID)






GO

CREATE proc [dbo].[Get_LetterData_by_LetterID](@LetterID int)

as
SELECT      letterid,LetterDataID, LetterData.Extention, description
FROM LetterData left JOIN
      Extention ON LetterData.extention = Extention.ExtentionID
WHERE     (Extention.IsSystem = 0) AND (LetterData.LetterID = @LetterID)



GO 
CREATE procedure [dbo].[Get_LetterdataExtention](@LetterID int,@result tinyint output)
as 
set @result=0
SELECT     top 1 @result=extention
FROM         LetterData
WHERE     LetterID=@LetterID and extention in (1,2)

GO 



CREATE proc [dbo].[Get_LetterDataIDs](@SecretariatID int, @myear tinyint)
as
SELECT     LetterData.LetterDataID  
FROM         LetterData 
INNER JOIN       Letter ON LetterData.LetterID = Letter.LetterID
WHERE     (Letter.SecretariatID = @SecretariatID) AND (Letter.MYear = @myear)









GO

CREATE procedure [dbo].[Get_letterHistory_by_LetterID](@LetterID int )
as 
declare @MainLetterID int

select @MainLetterID=MainLetterID
from letterRelation
where SubLetterid=@letterid

select 
     Letter.LetterID, Secretariats.secTitle,Letter.IndicatorID,  Letter.IncommingNO,Letter.IncommingDate,  Letter.Memo, sender.Title AS SenderTitle, 
                      Deliver.Title AS DeliverTitle,LetterTypes.Title LetterTypeTitle,LetterRecommites,registrationdate,CenterNo,CenterDate
from letterRelation
 inner join letter on letter.letterid=letterRelation.subletterid
 left  JOIN           FromOrganizations sender ON Letter.ToOrgID = sender.ID
left JOIN     FromOrganizations Deliver ON Letter.FromOrgID = Deliver.ID 
Left join LetterTypes on LetterTypes.ID=Letter.Letter_type 
inner join Secretariats on Secretariats.Secid=Letter.SecretariatID
where MainLetterID=@MainLetterID



GO


CREATE PROCEDURE [dbo].[get_LetterID_ByInCommingNo]
	(@InCommingNo nvarchar(50),@Myear tinyint,@LetterFormat tinyint,@SecretariatID smallint,@LetterID  int output)
AS 
set @letterid=0

SELECT     top 1 @LetterID=LetterID
FROM         Letter
WHERE     InCommingNo =@InCommingNo 
 and LetterFormat=@LetterFormat  and( Myear in (@Myear,@myear-1) ) and 
( SecretariatID=@SecretariatID or @SecretariatID=0)
order by Myear desc

 


GO


CREATE PROCEDURE [dbo].[get_LetterID_ByIndicatorid]
	(@indicatrid int,@Myear tinyint,@LetterFormat tinyint,@letter_type tinyint,@SecretariatID smallint,@LetterID  int output)
AS 
set @letterID=0
SELECT    top 1 @LetterID=LetterID
from letter
where  
(indicatorid=@indicatrid  or @indicatrid=0) and 
(LetterFormat=@LetterFormat or @letterFormat=0)  and 
(letter_type=@letter_type  or @letter_type=0) and 
( SecretariatID=@SecretariatID or @secretariatid=0)
and(Myear=@Myear or Myear=@myear-1 or @myear=0)
order by Myear desc





GO





CREATE PROCEDURE [dbo].[get_LetterID_ByRetroActionNo]
	(@RetroActionNo nvarchar(50),@Myear tinyint,@LetterFormat tinyint,@SecretariatID smallint,@LetterID  int output)
AS 
set @letterid=0
SELECT     top 1 @LetterID=LetterID
FROM         Letter
WHERE     (RetroActionNo =@RetroActionNo)
 and myear=@Myear  and LetterFormat=@LetterFormat  and 
( SecretariatID=@SecretariatID or @SecretariatID=0)



GO
CREATE procedure [dbo].[Get_LetterJpgFile](@LetterID int)
as  
Select *
from letterdata  
where LetterID = @LetterID  /* and PageNumber= @pagenumber  */
And Extention=1  



GO









CREATE PROCEDURE [dbo].[get_LetterMemo_ByID]
	(@LetterID  int,@memo nvarchar(500) output)
AS
SELECT     @memo=Memo
FROM         Letter
WHERE     (LetterID =@LetterID)



 

GO






create procedure [dbo].[Get_LetterTifFile](@LetterID int)
as
select *
from letterdata
where LetterID=@LetterID
and Extention=2




GO


CREATE PROCEDURE [dbo].[Get_LetterWordFile](@LetterID int) AS

SELECT     *
FROM         LetterData
WHERE     (extention = 3) AND (LetterID = @LetterID)




 

GO 

CREATE Procedure [dbo].[Get_LifeTip_byUserid](@Userid int,@lifeTip nvarchar(255) output)

as
declare @DayofYear int,@dw int, @n int,@u int,@j int,@k int,@lifeTipID int


exec get_DayID_InWeek @dw output
if @dw=6
 begin
  set @lifeTip=''
  return
 end


set @DayofYear=6*(datepart(dy,getdate())/7)+@dw

select @n=count(*) from LifeTips
select @u=10--count(*) from users
select @j=count(*) from users where id<=@userid

set @k=@n/@u
set @lifeTipID= (((@DayofYear+@j)%(@k+1))*@u+@DayofYear%@u+1)%@n+1

select  @lifeTip=Title from Lifetips where id=@lifeTipID

GO
/* get_MaxPage_ByLetterID]    */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[get_MaxPage_ByLetterID](@extention tinyint,@letterid int,@PageNumber int output)
as

SELECT    @PageNumber=isnull(max(PageNumber),0)
FROM         LetterData
WHERE     (extention = @extention) AND (LetterID = @LetterID)



 

GO
/* get_MaxReferenceDataID_By_TableID]    */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



create proc [dbo].[get_MaxReferenceDataID_By_TableID]
@tableID int,@maxDataID int output
as
SELECT     @maxDataID=isnull(MAX(DataID)+1,1)
FROM         ReferenceTableData
WHERE     (TableID = @tableID)


 

GO
/* get_NewOrgCode]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO







CREATE PROCEDURE [dbo].[get_NewOrgCode]
	(@ParentID [int] ,@newCode nvarchar(50) output)
AS 
declare @ParentCode nvarchar(50),@maxCode Nvarchar(50)

select @ParentCode=Code from Fromorganizations where id=@Parentid
select @maxCode=max(code) from  Fromorganizations where Parentid=@Parentid

if @maxCode is not null and isnumeric(@maxcode)=1
    set @newCode=cast(cast(@maxcode as int)+1 as nvarchar(50))
    
else
set @newCode=@parentCode+'01'

set @newcode=Replace(ltrim(rtrim(@newCode)),' ','0')



GO


CREATE PROCEDURE [dbo].[get_NewOrgID]
	(@isInner bit, @NewID [int] output)
AS
 if @isInner =1
 select @NewID=isnull(max(CAST(CODE AS float)),0)+1  from  FromOrganizations
WHERE ISNUMERIC(CODE)=1
 and replace(code,' ','') not in ('.','-')
else set @newID=99999


GO






CREATE procedure [dbo].[get_Nowdate](@date datetime output )
as
select @date=getdate()
GO
/* get_NowTime]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[get_NowTime] (@time char(5)output)
as
select @time=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))






 

GO
/* get_OrgPreCodeByID]    */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[get_OrgPreCodeByID]
	(@ID 	[int],@PreCode nvarchar(50) output)

AS 
select @PreCode=PreCode
 from FromOrganizations
 WHERE ( [ID]	 = @ID)



 

GO
/* get_OrgTitleByID]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [dbo].[get_OrgTitleByID]
	(@ID 	[int],@title nvarchar(250) output)

AS
select @title=title
 from FromOrganizations
 WHERE ( [ID]	 = @ID)


 

GO
/* Get_RecommiteJpgFile]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









create procedure [dbo].[Get_RecommiteJpgFile](@RecommiteID  int)
as
select top 1 *
from Recommitedata
where RecommiteID=@RecommiteID
and Extention=1




 

GO
/* get_ReferenceTable]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




create procedure [dbo].[get_ReferenceTable]
@like  nvarchar(100)
as
SELECT     Tables.*
FROM         Tables
WHERE     (TableType = 4) and description like '%'+@like+'%'





GO
/* get_ReferenceTableData_by_tableID]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


create  procedure [dbo].[get_ReferenceTableData_by_tableID]
@tableID int
as
SELECT     *
FROM         ReferenceTableData
WHERE     (TableID = @tableID)





GO
/* Get_Related_Letters]    */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE Procedure [dbo].[Get_Related_Letters](@LetterID int )
as
CREATE TABLE #RelatedLetters (
	[Id]int identity(1,1)  NOT NULL ,
	[ParentID] [int] NOT NULL ,
	[LetterID] [int] NOT NULL ,
        LetterType tinyint ,
        RetroactionNo nvarchar(50),
        FollowLetterNo nvarchar(50),
        Done tinyint 
) ON [PRIMARY]

insert into #RelatedLetters(ParentID,LetterID,LetterType,FollowLetterNo,RetroactionNo,Done)
select 0,LetterID,Letter_type,isnull(ltrim(FollowLetterNo),''),isnull(ltrim(RetroactionNo),''),0
from letter
where letterid=@letterid

while exists (select * from #RelatedLetters where done=0)
 begin
update #RelatedLetters
set done=2
where done=0

insert into #RelatedLetters
select id ,letter.letterid,letter.letter_type,isnull(ltrim(FollowLetterNo),''),isnull(ltrim(RetroactionNo),''),0
from letter,#RelatedLetters r
where done=2 and   
r.letter_type=1 and letter.letter_type=1 and 
 letter.incommingno=r.FollowLetterNo

insert into #RelatedLetters
select id ,letter.letterid,letter.letter_type,isnull(ltrim(FollowLetterNo),''),isnull(ltrim(RetroactionNo),''),0
from letter,#RelatedLetters r
where done=2 and   
r.letter_type=2 and letter.letter_type=2 and 
 letter.indicatorid=r.FollowLetterNo



insert into #RelatedLetters
select id ,letter.letterid,letter.letter_type,isnull(ltrim(FollowLetterNo),''),isnull(ltrim(RetroactionNo),''),0
from letter,#RelatedLetters r
where done=2 and
r.letter_type=1 and letter.letter_type=2 and 
 letter.indicatorid=r.RetroactionNo



insert into #RelatedLetters
select id ,letter.letterid,letter.letter_type,isnull(ltrim(FollowLetterNo),''),isnull(ltrim(RetroactionNo),''),0
from letter,#RelatedLetters r
where done=2 and   
r.letter_type=2 and letter.letter_type=1 and 
 letter.incommingno=r.RetroactionNo

update #RelatedLetters
set done=1
where done=2
end

SELECT     r.*,IndicatorID, MYear,  IncommingNO, Incommingdate, Memo,  
                      Letter.LetterRecommites, t.Title AS FromorgTitle, FromOrganizations.Title AS ToOrgTitle into tempp
FROM       #RelatedLetters r 
inner join Letter            on letter.letterid=r.letterid 
INNER JOIN FromOrganizations ON Letter.FromOrgID = FromOrganizations.ID 
INNER JOIN FromOrganizations t ON Letter.ToOrgID = t.ID


 

GO
/* get_Subject]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO






create procedure [dbo].[get_Subject]
@like  nvarchar(100)
as
SELECT     *
FROM         Subject
WHERE    subjectTitle like '%'+@like+'%'


GO
/* Get_sys_AppMessage]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






create PROCEDURE [dbo].[Get_sys_AppMessage]
	(@ID 	[int])

AS select * from  [dbo].[sys_AppMessage]

WHERE 
	( [ID]	 = @ID)



 

GO
/* Get_tmp_LetterDataIDs]     */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE proc [dbo].[Get_tmp_LetterDataIDs]
as
SELECT     LetterDataID  
FROM         yeganeh_tmp_db.dbo.LetterData



GO 
CREATE procedure [dbo].[get_UserExtention_by_UserID] (@userID int )
as

SELECT UserExtention.*
FROM   UserExtention
WHERE (UserId = @UserId)
      and extentionid in (SELECT ExtentionID FROM Extention WHERE IsSystem = 0)








GO 

CREATE procedure [dbo].[get_userfields_by_tableID]
@tableID int
as
SELECT     Fields.*
FROM         Fields
WHERE     (Fields.TableID = @tableID)



 

GO
/* Get_UserMessageCount]    */
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO

-- 86 -8- 13


CREATE  procedure [dbo].[Get_UserMessageCount](@to int,@count int output)
as
SELECT   @count=  COUNT(*) 
FROM         UserMessage
WHERE     (To_ = @to) and status=1


GO

CREATE proc [dbo].[Get_UserSecretariat_Tree] @userid int
as
Declare @aCount int
CREATE TABLE dbo.#M
	(ID int NOT NULL IDENTITY (0, 1),
	SecID int NULL,
	Title nVarchar(100) NULL,
	ParentID int NULL,
	Proceed bit NULL ,
        Tag int NULL )  ON [PRIMARY]
insert into #m(SecID , Title , ParentID , Proceed , Tag)
Select 0 as SecID , 'ò«— «»·' as Title ,-1 as ParentID ,0 as Proceed , 1 as Tag

insert into #m(SecID , Title , ParentID , Proceed,Tag)
Select SecID , SecTitle as Title ,0 as ParentID,0 as Proceed ,  10 as Tag
From Secretariats
where secid in (SELECT SecId FROM UserSecretariats WHERE  UserId = @userid)

Select @aCount = Count(SecID)+1
From Secretariats
where secid in (SELECT SecId FROM UserSecretariats WHERE  UserId = @userid)

insert into #m(SecID , Title , ParentID , Proceed , Tag)
Select 0 as SecID , '«—”«·Â«Ì »«Ìê«‰Ì ‰‘œÂ' as Title ,-1 as ParentID ,1 as Proceed , 2 as Tag

Set @aCount = @aCount+1
insert into #m(SecID , Title , ParentID , Proceed , Tag)
Select 0 as SecID , ' „«„Ì «—”«· ‘œÂ Â«' as Title ,-1 as ParentID ,1 as Proceed , 3 as Tag

insert into #m(SecID , Title , ParentID , Proceed , Tag)
Select SecID , SecTitle as Title ,@aCount as ParentID , 1 as Proceed , 30 as Tag
From Secretariats  
where secid in (SELECT SecId FROM UserSecretariats WHERE  UserId = @userid)

Select ID , SecID , LTrim(RTrim(Title))as Title , ParentID , Proceed , Tag 
from #M
Order by ID



GO



create procedure [dbo].[get_userTable]
@like  nvarchar(100)
as
SELECT     Tables.*
FROM         Tables
WHERE     (TableType = 3) and description like '%'+@like+'%'

 

GO
Create Procedure [dbo].[GetLastFormOrderByLetterID]
@LetterID int,@formOrder tinyint out
as
select @formOrder=max(FormOrder)
from dbo.LetterFieldValue
where letterid=@letterid

set @formOrder=isnull(@formOrder,0)


GO


CREATE proc [dbo].[GetLetterTemplate_HeaderID]
@letterid int
as
select LetterID,TemplateId,headerid,FromOrgID,fromorganizations.PreCode
from letter
inner join fromorganizations on fromorganizations.id=letter.fromorgid
where letterid=@letterid









GO






CREATE PROCEDURE [dbo].[GetList](@ListID int)
 AS

SELECT     KeyValue, Title, Notes
FROM         ListItems
where ListID=@ListID
 

GO 
create Procedure [dbo].[GetNumberOfLetterAttach](@LetterID int,@number int out)
 AS  
 
SELECT    @number=count( LetterDataID)
FROM         LetterData
WHERE     LetterID=@LetterID and extention>3


set @number=isnull(@number,0)

GO

Create Procedure [dbo].[GetRecommiteById]
( @recommiteId int)
AS

select R.*,isnull(FO.Title,Lfo.title) RecommiterTitle
 from Recommites R 
inner join letter L on R.LetterID = L.LetterID 
left join Recommites PR on R.LetterId=PR.LetterId and R.ParentId=PR.ID 
left join dbo.FromOrganizations FO on PR.OrgID=FO.ID --where recommiteId=
left join dbo.FromOrganizations LFO on L.ToOrgID=LFO.ID 
where R.recommiteId=@recommiteId


GO



CREATE PROCEDURE [dbo].[GetUserLogout_status]
	( @UserID 	[int] , @logout bit output, @isSafeLogout 	bit output)
AS

declare @LogoutTime datetime
set @logout=0
set @isSafeLogout=0
select top 1 @LogoutTime=LogoutTime,@isSafeLogout=isSafeLogout
from UserLoginLogout
where userid=@UserID
order by UserLoginLogoutID desc
if @LogoutTime is null set @logout=1
if @isSafeLogout=1
 set @logout=1
else
 if DATEDIFF(second, @LogoutTime,getdate())>60
 set @logout=1







GO
CREATE PROCEDURE [dbo].[has_PDF]
@LetterID int,@result bit output
AS

if exists(
SELECT     PageNumber
FROM         LetterData
WHERE     LetterID=@LetterID and extention=5)
set @result=1
else
set @result=0



 


GO


CREATE procedure [dbo].[hassame_orgtitle](@title nvarchar(255),@id int output)
as
set @id=-1
select top 1  @id=id
from fromorganizations
where replace(title,' ','')=replace(@title,' ','')
or   replace(email,' ','')=replace(@title,' ','')

GO



CREATE proc [dbo].[Import_LetterData](@LetterDataID int)
as

set identity_insert letterdata on
insert into letterdata(LetterDataID,LetterID,PageNumber,Image,extention)
SELECT    LetterDataID,LetterID,PageNumber,Image,extention
FROM         yeganeh_tmp_db.DBO.LetterData
where  LetterDataID=@LetterDataID
and not exists (select letterdataid from letterdata where letterdataid=@LetterDataID)
set identity_insert letterdata off



GO




CREATE PROCEDURE [dbo].[insert_Actions]
	(
	 @FormTag 	[tinyint],
	 @ID 	[nvarchar](50),
	 @Title 	[nvarchar](50)
)

AS INSERT INTO [dbo].[Actions]
	 ( [FormTag],
	 [ID],
	 [Title])

VALUES
	( @FormTag,
	 @ID,
	 @Title)


GO

CREATE PROCEDURE [dbo].[insert_All_ReCommites]
AS INSERT INTO [dbo].[ReCommites] 
	 (
	 [LetterID],
	 [ID],
	 [Type],
	 [ParentId],
	 [OrgID],
	 [Paraph],
	 [RecommiteDate],
	 [UserID],
	 [IsCopy],
	 [Proceeded]) 
select letterid,1,3,0,fromorgid,'',registrationdate,userid,0,0 
from letter
where letterid not in (select distinct letterid from recommites)




GO







GO
CREATE PROCEDURE [dbo].[insert_Extention]
@ExtentionID int 
 AS


delete UserExtention where ExtentionID=@ExtentionID
INSERT INTO UserExtention (UserId, ExtentionID) select id,@ExtentionID from users





GO
CREATE procedure [dbo].[insert_FieldAccess]
as

INSERT INTO FieldAccess ([FieldID] ,[UserID] ,[AccessTypeID])
SELECT fields.id,users.id,3
FROM Fields,Users
where tableid in (SELECT TableID FROM Tables WHERE TableType = 3)
and str(fields.id)+'m'+str(users.id) not in (select str(fieldid)+'m'+str(userid) from FieldAccess)


GO

CREATE procedure [dbo].[insert_FieldAccess_by_TableID]
@TableID int
as

INSERT INTO FieldAccess ([FieldID] ,[UserID] ,[AccessTypeID])
SELECT fields.id,users.id,3
FROM Fields,Users
where tableid=@TableID
and str(fields.id)+'m'+str(users.id) not in (select str(fieldid)+'m'+str(userid) from FieldAccess)

GO



CREATE PROCEDURE [dbo].[insert_Letter]
	(@IndicatorID 	[int],
	 @MYear 	[tinyint],
	 @SecretariatID 	[tinyint],
	 @Letter_Type 	[tinyint],
	 @letterformat 	[tinyint],
	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),
	 @CenterNo 	[nvarchar](50),
	 @CenterDate 	[char](10),
	 @FromOrgID 	[int],
	 @ToOrgID 	[int],
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @AttachTitle 	[nvarchar](50),
	 @NumberOfAttachPages 	[smallint],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint],
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @RegistrationDate 	[char](10),
	 @RegistrationTime 	[varchar](5),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @SentLetterID 	[int],
	 @TemplateID 	[int],
	 @HeaderID 	[int],
	 @LetterRecommites 	[nvarchar](500),
	 @FromStaffer 	[nvarchar](50),
	 @Finalized 	[bit],
	 @SendStatusID 	[tinyint],
@Exists bit output)


AS 
if exists (select *
from letter WHERE
	[IndicatorID]	 = @IndicatorID AND
	 [MYear]	 = @MYear AND
	 [SecretariatID] = @SecretariatID AND
	 [Letter_Type]	 = @Letter_Type AND
	 [letterformat]	 = @letterformat)
  set @Exists=1
 else
  set @Exists=0


if @Exists=0 
INSERT INTO [dbo].[Letter] 
	([IndicatorID],	 [MYear],	         [SecretariatID],[Letter_Type],	 [letterformat],
 	 [IncommingNO],	 [Incommingdate],	 [CenterNo],	 [CenterDate],	 [FromOrgID],	 [ToOrgID],
	 [Signerid],	 [ClassificationID],	 [UrgencyID],	 [Memo],	 [AttachTitle],	 [NumberOfAttachPages],
	 [NumberOfPage], [ReceiveTypeID],	 [UserID],	 [RetroactionNo],[UserMemo],
	 [RegistrationDate],[RegistrationTime],	 [FollowLetterNo],[ToStaffer],	 [SentLetterID],
	 [TemplateID],	 [HeaderID],	 [LetterRecommites],	 [FromStaffer],	 [Finalized],	 [SendStatusID]) 
 
VALUES 
	(@IndicatorID,	 @MYear,	         @SecretariatID, @Letter_Type,	 @letterformat,
	 @IncommingNO,	 @Incommingdate,	 @CenterNo,	 @CenterDate,	 @FromOrgID,	 @ToOrgID,
	 @Signerid,	 @ClassificationID,	 @UrgencyID,	 @Memo,	 @AttachTitle,	 @NumberOfAttachPages,
	 @NumberOfPage,	 @ReceiveTypeID,	 @UserID,	 @RetroactionNo,	 @UserMemo,
	 @RegistrationDate,	 @RegistrationTime,	 @FollowLetterNo,	 @ToStaffer,	 @SentLetterID,
	 @TemplateID,	 @HeaderID,	 @LetterRecommites,	 @FromStaffer,	 @Finalized,	 @SendStatusID)





GO



CREATE PROCEDURE [dbo].[insert_Letter_all]
	(@IndicatorID 	[int],	 @MYear 	[tinyint],	 @SecretariatID 	[tinyint],
	 @Letter_Type 	[tinyint],	 @letterformat 	[tinyint],	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),	 @CenterNo 	[nvarchar](50),	 @CenterDate 	[char](10),
	 @FromOrgID 	[int],	 @ToOrgID 	[int],	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],	 @UrgencyID 	[smallint],	 @Memo 	[nvarchar](500),
	 @AttachTitle 	[nvarchar](50),	 @NumberOfAttachPages 	[smallint],	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint],	 @UserID 	[int],	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),	 @RegistrationDate 	[char](10), @RegistrationTime 	[varchar](5),
	 @FollowLetterNo 	[nvarchar](50),	 @ToStaffer 	[nvarchar](50),	 @SentLetterID 	[int],
	 @TemplateID 	[int],	 @HeaderID 	[int],	 @LetterRecommites 	[nvarchar](500),
	 @FromStaffer 	[nvarchar](50),	 @Finalized 	[bit],	 @SendStatusID 	[tinyint],
@Exists bit output,
@LetterID int output)


AS 
if exists (select *
from letter WHERE 
	[IndicatorID]	 = @IndicatorID AND
	 [MYear]	 = @MYear AND
	 [SecretariatID] = @SecretariatID AND
	 [Letter_Type]	 = @Letter_Type AND
	 [letterformat]	 = @letterformat)
  set @Exists=1
 else
  set @Exists=0


if @Exists=0 
INSERT INTO .[dbo].[Letter] 
	([IndicatorID],	 [MYear],	         [SecretariatID],[Letter_Type],	 [letterformat],
 	 [IncommingNO],	 [Incommingdate],	 [CenterNo],	 [CenterDate],	 [FromOrgID],	 [ToOrgID],
	 [Signerid],	 [ClassificationID],	 [UrgencyID],	 [Memo],	 [AttachTitle],	 [NumberOfAttachPages],
	 [NumberOfPage], [ReceiveTypeID],	 [UserID],	 [RetroactionNo],[UserMemo],
	 [RegistrationDate],[RegistrationTime],	 [FollowLetterNo],[ToStaffer],	 [SentLetterID],
	 [TemplateID],	 [HeaderID],	 [LetterRecommites],	 [FromStaffer],	 [Finalized],	 [SendStatusID])
 
VALUES 
	(@IndicatorID,	 @MYear,	         @SecretariatID, @Letter_Type,	 @letterformat,
	 @IncommingNO,	 @Incommingdate,	 @CenterNo,	 @CenterDate,	 @FromOrgID,	 @ToOrgID,
	 @Signerid,	 @ClassificationID,	 @UrgencyID,	 @Memo,	 @AttachTitle,	 @NumberOfAttachPages,
	 @NumberOfPage,	 @ReceiveTypeID,	 @UserID,	 @RetroactionNo,	 @UserMemo,
	 @RegistrationDate,	 @RegistrationTime,	 @FollowLetterNo,	 @ToStaffer,	 @SentLetterID,
	 @TemplateID,	 @HeaderID,	 @LetterRecommites,	 @FromStaffer,	 @Finalized,	 @SendStatusID)

select @LetterID=Letterid 
from letter WHERE 
	[IndicatorID]	 = @IndicatorID AND
	 [MYear]	 = @MYear AND
	 [SecretariatID] = @SecretariatID AND
	 [Letter_Type]	 = @Letter_Type AND
	 [letterformat]	 = @letterformat



GO


CREATE PROCEDURE [dbo].[insert_LetterArchiveFolder]
(@LetterArchiveID 	[int] output,
	 @ArchiveFolderID 	[int],
	 @LetterID 	[int],
	 @ArchiveDate 	[char](10),
	 @Page 	[int],
	 @ArchiveNotes 	[nvarchar](50),@UserID int)

AS INSERT INTO [dbo].[LetterArchiveFolder]
	 ( 
	 [ArchiveFolderID],
	 [LetterID],
	 [ArchiveDate],
	 [Page],
	 [ArchiveNotes],UserID) 
 
VALUES 
	(
	 @ArchiveFolderID,
	 @LetterID,
	 @ArchiveDate,
	 @Page,
	 @ArchiveNotes,@UserID)

set @LetterArchiveID=@@identity



GO 

CREATE PROCEDURE [dbo].[insert_LetterData]
	(@LetterDataID 	[int] output,
	 @LetterID 	[int],
	 @PageNumber 	[tinyint],
	 @extention 	[tinyint])

AS INSERT INTO [dbo].[LetterData] 
	 (  [LetterID],
	 [PageNumber],
	 [extention]) 
 
VALUES 
	( @LetterID,
	 @PageNumber,
	 @extention)

set  @LetterDataID=@@identity



GO
CREATE PROCEDURE [dbo].[insert_LetterText]
	(@LetterID int,
	 @TypeText   	ntext)
AS 
if exists(select * from [dbo].[LetterText] 
 WHERE     (LetterID = @LetterID))
update LetterText 
set TypeText=@TypeText
 WHERE     (LetterID = @LetterID)
else
INSERT INTO [dbo].[LetterText] 
	 ( [LetterID],
	 [TypeText])
 
VALUES 
	( @LetterID,
	 @TypeText  )






GO 

CREATE PROCEDURE [dbo].[insert_newActionsAccess]
AS

delete from ActionsAccess where str(formtag)+ActionID not in (select str(formtag)+ID from
actions)

INSERT INTO [dbo].[ActionsAccess] 
	 ( [AccessID],
	 [ActionID],
	 [FormTag],
	 [HasAccess])

SELECT     Accesses.ID,  Actions.ID,Actions.FormTag,1 
FROM         Accesses,Actions 
where str(accesses.id)+actions.id not in
 (select str(accesses.id)+actionid  from dbo.ActionsAccess)

GO


Create Procedure [dbo].[Insert_ParaphTemplate]
@UserID int,@Title nvarchar(50),@Paraph nvarchar(500)
as
declare @OrderID tinyint

select @OrderID=max(OrderID)+1 from ParaphTemplate where UserID=@Userid

if @OrderID is null set @OrderID=1

INSERT INTO ParaphTemplate (UserID ,OrderID ,Title,Paraph)
VALUES (@UserID,@OrderID,@Title,@Paraph)


GO

CREATE PROCEDURE [dbo].[insert_ReciveLetter]  
 (@letterID integer output,  
  @IndicatorID  int,  
  @MYear  tinyint,  
  @SecretariatID  tinyint,  
  @Letter_Type  tinyint,  
  @letterformat  tinyint,  
  @Memo  nvarchar(500),  
  @UserID  int,  
  @RegistrationDate  char(10),  
  @RegistrationTime  varchar(5),  
  @OrgID int)  
AS  
  
declare @OrgStaff nvarchar(50)  
select @OrgStaff=ResponsibleStaffer  
from dbo.FromOrganizations  
where id=@orgid  

INSERT INTO dbo.Letter   
(IndicatorID,  MYear,  SecretariatID,  Letter_Type,  letterformat,  Memo,  UserID,  RegistrationDate,  RegistrationTime,  FromOrgID,ReceiveTypeID )   
VALUES   
(@IndicatorID,  @MYear,  @SecretariatID,  @Letter_Type,  @letterformat,  @Memo,  @UserID,  @RegistrationDate,  @RegistrationTime,  @OrgID,2)  
  
SET @LetterID=@@Identity  
  
INSERT INTO dbo.ReCommites   (LetterID, ID, Type,  ParentId,  OrgID,  Paraph,  RecommiteDate,  UserID,  IsCopy,  Proceeded,OrgStaff)   
values(@letterid,1,3,0,@orgid,'',@registrationdate,@userid,0,0,@OrgStaff)  


GO

CREATE PROCEDURE [dbo].[insert_ReCommites]
	(@LetterID 	[int],
	 @ID 	[smallint],
	 @Type 	[tinyint],
	 @ParentId 	[smallint],
	 @OrgID 	[int],
	 @Paraph 	[nvarchar](500),
	 @RecommiteDate 	[varchar](10),
	 @UserID 	[tinyint],
	 @IsCopy 	[bit],
	 @Proceeded 	[bit],
@RecommiteID int output)

AS

declare @OrgStaff nvarchar(50)
select top 1 @OrgStaff=ResponsibleStaffer	
from dbo.FromOrganizations 
WHERE 	id	 = @OrgID

 INSERT INTO [dbo].[ReCommites]
	 (
	 [LetterID],
	 [ID],
	 [Type],
	 [ParentId],
	 [OrgID],
	 [Paraph],
	 [RecommiteDate],
	 [UserID],
	 [IsCopy],
	 [Proceeded],
OrgStaff) 
 
VALUES 
	( 
	 @LetterID,
	 @ID,
	 @Type,
	 @ParentId,
	 @OrgID,
	 @Paraph,
	 @RecommiteDate,
	 @UserID,
	 @IsCopy,
	 @Proceeded,
@OrgStaff )

set @RecommiteID=@@identity




GO

create PROCEDURE [dbo].[insert_ToOrganizations]
	(@Title [nvarchar](100),@id int output)

AS 
declare @code varchar(50)
select @code =max(id)+1
from FromOrganizations

INSERT INTO [FromOrganizations] 
	 ( [Title],	 [ParentID],	 [IsActive],	 [IsInnerOrg],	 [Code]) 
VALUES 	( @Title,	 4,	 1,	 0,	 @code)

set @id=@@identity



GO 



CREATE PROCEDURE [dbo].[insert_UserLog]
	(@UserID 	[tinyint],
	 @FormTag [int],
	 @ActionID 	[nvarchar](50),
	 @LetterID	[int])

AS INSERT INTO [dbo].[UserLog]
	 ( [UserID],
	 [FormID],
	 [ActionID],
	 [LetterID])

VALUES
	( @UserID,
	 @FormTag,
	 @ActionID,
	 @LetterID)






GO 

CREATE PROCEDURE [dbo].[insert_UserLoginLogout]
	( @UserID 	[int],
	 @IPAddress 	[char](15),
@UserLoginLogoutID int output)

AS 

INSERT INTO [dbo].[UserLoginLogout] 
	 ( [UserID],
	 [IPAddress]) 
 
VALUES 
	(
	 @UserID,
	 @IPAddress)
set @UserLoginLogoutID=@@identity




GO



create  PROCEDURE [dbo].[insertReCommites_autoID]
	(@LetterID 	[int],
	 @Type 	[tinyint],
	 @ParentId 	[smallint],
	 @OrgID 	[int],
	 @Paraph 	[nvarchar](500),
	 @RecommiteDate 	[varchar](10),
	 @UserID 	[tinyint],
	 @IsCopy 	[bit])

AS 
declare	 @ID int,@orgstaff nvarchar (50)

select @id=max(id)+1
from recommites
where Letterid=@LetterID

select @orgstaff=ResponsibleStaffer
from fromorganizations
where id=@OrgID

INSERT INTO [ReCommites] 
	 ( [LetterID],
	 [ID],
	 [Type],
	 [ParentId],
	 [OrgID],
	 [Paraph],
	 [RecommiteDate],
	 [UserID],
	 [IsCopy],orgstaff) 
 
VALUES
	( @LetterID,
	 @ID,
	 @Type,
	 @ParentId,
	 @OrgID,
	 @Paraph,
	 @RecommiteDate,
	 @UserID,
	 @IsCopy,@orgstaff)



 

GO


CREATE PROCEDURE [dbo].[insertText]
 @Text nvarchar(4000),@MYear int,@indicator int,@receivedMode bit
AS
 declare @i int,@W nvarchar(50)
set @text=ltrim(rtrim(@text))
if @text=''  return
     while charindex(' ',@Text)>0
       begin
        set @i=charindex(' ',@Text);
        set @w=substring(@Text,1,@i-1);
        exec insertWordInLetter @w,@MYear ,@indicator ,@receivedMode 
        set @Text=ltrim(rtrim(substring(@text,@i,len(@text)-@i+1)));
       end;
  exec insertWordInLetter @Text,@MYear ,@indicator ,@receivedMode







GO 
CREATE PROCEDURE [dbo].[letterContainText]
 @secID tinyint,@where nvarchar(500)
AS

 declare @sqlCommand nvarchar(4000)
set @where=ltrim(rtrim(isnull(@where,'')))

 set  @sqlcommand='SELECT    distinct Letter.LetterID,Letter_type, indicatorid, RegistrationDate, 
Memo, FromOrganizations.Title AS FromTitle, ToOrganizations.Title AS ToTitle
FROM         LetterText 
INNER JOIN   Letter on letter.letterid=LetterText.letterid
INNER JOIN     FromOrganizations ON FromOrgID = FromOrganizations.ID
INNER JOIN  FromOrganizations ToOrganizations ON ToOrgID = ToOrganizations.ID  where (Letter.SecretariatID='+cast(@secId as varchar(3)) +' or '+cast
(@SeCID as varchar(3))+' = 0)'

if @where<>'' set @sqlcommand=@sqlcommand+' and '+@where
exec sp_executesql @sqlcommand


 

GO


CREATE procedure [dbo].[Make_FieldValues_By_LetterID]
@LetterID int,@FormOrder tinyint
as

declare @tableID int, @tableID2 int,@TableID0 int,@userid int   

select @TableID=UserTableID,@tableID2=UsertableID2,@userid=userid  
from letter
where letterid=@LetterID
 
if @tableID is not null or @tableID2 is not null
begin

delete LetterFieldValue
from LetterFieldValue
inner join  Fields on Fields.id=LetterFieldValue.fieldid
where Letterid =@letterid and  
(
(tableid<>@TableID and formorder=1) or 
(tableid<>@TableID2 and formorder=2)
)

if @FormOrder=1 
set @TableID0=@tableID
else
set @TableID0=@tableID2 

insert into  LetterFieldValue(letterid,FieldID,formOrder,insertuserid )
 select @letterID,ID, @FormOrder,@userid 
 from Fields
 where tableid=@TableID0 and
 id not in (select FieldID from LetterFieldValue where Letterid=@LetterID and formOrder=@formOrder)

INSERT INTO FieldAccess ([FieldID] ,[UserID] ,[AccessTypeID])
SELECT fields.id,users.id,3
FROM Fields,Users
where tableid=@TableID0
and str(fields.id)+'m'+str(users.id) not in 
(select str(fieldid)+'m'+str(userid) from FieldAccess)

end



GO

CREATE procedure [dbo].[min_page](@LetterID int,@haspage bit output,@minpage tinyint output)
as

SELECT     @minpage=MIN(PageNumber)
FROM         LetterData
 WHERE     (LetterID = @LetterID and extention=1)

if @minpage is null set @haspage=0 else set @haspage=1
set @minpage=isnull(@minpage,1)







GO

CREATE Procedure [dbo].[Move_ParaphTemplate]
@ParaphTemplateID int,@Step smallint
as
declare @swapParaphTemplateID int,@OrderId tinyint,@Userid int


select @OrderID=Orderid,@Userid=Userid from ParaphTemplate Where ParaphTemplateID=@ParaphTemplateID


SELECT @swapParaphTemplateID=ParaphTemplateID
FROM ParaphTemplate
Where UserID=@UserID and OrderID=@OrderID+@Step

if @swapParaphTemplateID is not null
  begin
   update ParaphTemplate set OrderId=@OrderID+@Step where ParaphTemplateID=@ParaphTemplateID
   update ParaphTemplate set OrderId=@OrderID      where  ParaphTemplateID=@SwapParaphTemplateID
  end

GO


CREATE PROCEDURE [dbo].[NewRecommiteID](@letterID int,@type int,@NewID int output)
AS

SELECT     @NewID=ISNULL(MAX(ID), 0) + 1   FROM ReCommites WHERE LetterID=@letterID and type=@type


GO

Create procedure [dbo].[Next_page](@LetterID int,@CurrentPage tinyint,@Next bit ,@newPage tinyint output)
as
if @next=1
 begin

SELECT     @newPage=MIN(PageNumber)
FROM         LetterData
 WHERE     (LetterID = @LetterID and extention=1 and PageNumber>@CurrentPage)

if @newPage is null
SELECT     @newPage=MIN(PageNumber)
FROM         LetterData
 WHERE     (LetterID = @LetterID and extention=1 )

end
else
 begin

SELECT     @newPage=max(PageNumber)
FROM         LetterData
 WHERE     (LetterID = @LetterID and extention=1 and PageNumber<@CurrentPage)

if @newPage is null
SELECT     @newPage=max(PageNumber)
FROM         LetterData
 WHERE     (LetterID = @LetterID and extention=1 )

end


GO






create PROCEDURE [dbo].[NextTag]
@formtag tinyint
AS
if @formtag>0 
SELECT     MAX(ID)+1
FROM         Actions
WHERE     (FormTag =@formtag)
else
SELECT     MAX(FormTag)+1
FROM         Actions



GO

CREATE PROCEDURE [dbo].[NumberOfLetter_By_SecID]
@secID int,@Number_OF_Letter int output
 AS
select @Number_OF_Letter =count(*) from letter where secretariatid=@secid





 

GO

CREATE PROCEDURE [dbo].[NumberOfTemplate_By_TemplateGroupID]
@TemplateGroupID int,@Number_OF_Template int output
 AS
select @Number_OF_Template =count(*) from LetterTemplate where TemplateGroupid=@TemplateGroupid



 

GO

CREATE PROCEDURE [dbo].[Org_hasChild]
	(@ParentID 	[int],@hasChild bit output)
AS 
if exists( select * from  FromOrganizations
 WHERE  [ParentID]	 = @ParentID)
set @haschild=1
else
set @haschild=0






GO








CREATE procedure [dbo].[org_hasLetter](@orgid int,@count int output)
as
set @count=0
select @count=count(1)
from recommites
where orgid=@orgid



 

GO




CREATE PROCEDURE [dbo].[Org_is_Secretariat]
@orgid int ,@IsSecretariat bit output
as
set @IsSecretariat=0


Select  @IsSecretariat=cast(case when r.DestinationOrgID_inSource is null then 0 else 1 end as bit)  
 from fromorganizations LEFT JOIN RelatedSecretariats R ON FromOrganizations.ID = R.DestinationOrgID_inSource
where id=@orgid


 

GO




CREATE  procedure [dbo].[Recommite_has_JpgFile](@RecommiteID  int,@hasJpg bit output)
as
if exists(select  *
from Recommitedata
where RecommiteID=@RecommiteID
and Extention=1  and image is not null)  set @hasJpg=1 else set @hasJpg=0





GO







create proc [dbo].[Recommite_Report]
 @begindate char(10),@enddate char(10),@secid int ,@letter_type int 
as

select Recommiteid,orgid,dbo.ShamsiDateDiff(recommitedate,isnull(Proceeddate,'1385/06/08'))delay ,proceeded into #abs
from recommites
inner join letter on letter.letterid=recommites.letterid
where recommitedate between @begindate  and @enddate
and letter.Secretariatid=@secid
and (@letter_type=0) or (Letter_type=@letter_type)


select *
from #abs
inner join fromorganizations on Fromorganizations.id=orgid


 

GO

create  Procedure [dbo].[Report_Scan]
@where nvarchar(1000),@Extention tinyint
as
set @extention=2
declare @sqlCommand nvarchar(4000)
set @sqlCommand='select
  LetterFormats.Title AS FormatTitle, LetterTypes.Title LetterTypeTitle, Count(*) All_cnt ,sum(case when ld.letterid is null then 1 else 0 end  ) Scanned
from Letter as L
  left join (Select distinct letterid from letterdata where extention in (1,2)) ld on ld.letterid=l.letterid
  Left JOIN LetterFormats ON L.letterformat = LetterFormats.Code
 left JOIN LetterTypes ON l.Letter_type = LetterTypes.ID'
set @where=isnull(ltrim(rtrim(@where)),'')
if @where<>''
 set @sqlCommand=@sqlCommand+' where '+@where
 set @sqlCommand=@sqlCommand+' group by LetterFormats.Title, LetterTypes.Title '

exec sp_executesql @sqlCommand

GO 

Create PROCEDURE [dbo].[Report_UserLog]
@Secretariatid int,
@myear tinyint,
@where nvarchar(2000)
as 
declare @sqlCommand nvarchar(4000)

set @sqlCommand='
SELECT     top 1000
 ApplicationForms.Title AS FormTitle,
 Users.Title AS UserTitle,
 Actions.Title AS ActionTitle,
 Letter.IndicatorID,
 LetterTypes.Title AS LetterType,
 Letter.IncommingNO,
 Letter.Incommingdate,
 Letter.RegistrationDate,
 Letter.Memo,
 dbo.Shamsi(UserLog.Time1) AS Date,
 right(cast(UserLog.Time1 as varchar(50)),7) as Time

FROM       UserLog
INNER JOIN Users            ON Users.Id = UserLog.UserID
INNER JOIN Actions          ON UserLog.ActionID = Actions.ID 
INNER JOIN ApplicationForms ON ApplicationForms.ID = Actions.FormTag
LEFT  JOIN Letter           ON UserLog.LetterID = Letter.LetterID
LEFT  JOIN LetterTypes      ON Letter.Letter_Type = LetterTypes.ID '


set @where=isnull(ltrim(rtrim(@where)),'')
if @where <>'' set @where =' and '+@where

if @Secretariatid<>0
  set @where=@where+' and (Secretariatid = '+Cast(@Secretariatid as varchar(5))+')'

if @Myear<>0
  set @where=@where+' and (myear = '+Cast(@myear as varchar(5))+')'

if substring(@where,1,4)=' and' set @where=' where '+substring(@where,5,4000)

 set @sqlCommand=@sqlCommand+@where + ' order by time1  '
exec(@sqlCommand)



GO

CREATE procedure [dbo].[Report_UserTable]
@tableID int,@LetterWhere nvarchar(2000),@UserTableWhere nvarchar(2000)
as

declare @sql nvarchar(4000)

set @sql= 'select LetterID into ##Uletters from Letter '

if @UserTableWhere<>'' 
 set @sql=@sql+' where  '+@UserTableWhere

exec(@SQL)


set @sql='Select l.LetterID,1 formorder into ##r from Letter l
 inner join ##Uletters on ##Uletters.LetterID=l.LetterID
 where UserTableID='+cast(@tableID as varchar(5))



exec(@Sql)
set @sql='insert into ##r Select l.LetterID,2  from Letter l
 inner join ##Uletters on ##Uletters.LetterID=l.LetterID
 where UserTableID2='+cast(@tableID as varchar(5))

exec(@Sql)
 
set @sql= 'create  table ##m (LetterID int '

SELECT     top 60 identity(int,1,1) id , Fields.Description,cast (fields.id as int ) fieldid,ReferenceTableID into #Fields
FROM      Fields
WHERE     (tableid = @tableID)
order by [order]


SELECT     @sql=@sql+' ,['+isnull(Description,'')+'] nvarchar(2000)'
FROM      #Fields 


set @sql= @sql+')'
 
exec(@sql)
declare @insert  varchar(8000)


set @insert= 'insert into ##m select LetterID'


SELECT    @insert=@insert+
case when ReferenceTableID is null then 
',(select FieldValue from LetterFieldValue where FieldId='+cast(fieldid as varchar(10))+' and letterid=r.LetterID and LetterFieldValue.formorder=r.formorder) 
'
else
',(select DataTitle From ReferenceTableData where tableid='+cast(ReferenceTableID as varchar(8))+'
 and DataID=(select FieldValue from LetterFieldValue where FieldId='+cast(fieldid as varchar(10))+' and letterid=r.LetterID and 
LetterFieldValue.formorder=r.formorder)) '
end
FROM      #Fields



set @insert= @insert+' from ##r r '

exec(@insert)


select ##m.*,IndicatorID,IncommingNO,IncommingDate,CenterNo,CenterDate
,Memo,RetroactionNo,UserMemo,RegistrationDate,FollowLetterNo,LetterRecommites
,sender.Title AS SenderTitle ,Deliver.Title AS DeliverTitle,LetterTypes.Title LetterTypeTitle,ActionTypeTitle
FROM  ##m
inner join Letter on ##m.Letterid=Letter.Letterid 
left  JOIN FromOrganizations sender ON Letter.ToOrgID = sender.ID 
left JOIN  FromOrganizations Deliver ON Letter.FromOrgID = Deliver.ID 
Left join LetterTypes on LetterTypes.ID=Letter.Letter_type 
left join Secretariats on Secretariats.Secid=Letter.SecretariatID
left JOIN ActionType  ON ActionType.ActionTypeID = Letter.LatestActionTypeID

drop table ##m  
drop table ##Uletters
drop table ##r




GO

CREATE  PROCEDURE [dbo].[SaveAs_Accesses]
	( @Title nvarchar(50),@oldaccessID int ,@newID int output)

AS
 INSERT INTO [dbo].[Accesses]
	 ( [Title])

VALUES ( @Title)

select @newID=max(ID)
from accesses


insert into ActionsAccess(accessid,ActionID, FormTag, HasAccess)
SELECT     @newid,ActionID, FormTag, HasAccess
FROM         ActionsAccess
where accessid=@oldaccessID

insert into ActionsAccess(accessid,ActionID, FormTag, HasAccess)
SELECT     Accesses.ID AS accessid, Actions.ID AS actionid, Actions.FormTag, 0 AS hasaccess
FROM         Actions , Accesses
where str(Accesses.ID)+Actions.ID not in (select str(accessid)+ActionID from ActionsAccess)









GO
Create Procedure [dbo].[Select_AlternativeInfo_ByUserID]
@UserID int
as
SELECT [Id]
      ,[AlternativeUserID]
      ,[AlternativebeginDate]
      ,[AlternativeEndDate]
  FROM  Users 
where id=@userID

GO


CREATE PROCEDURE [dbo].[select_CiticalLetterFields]
	@LetterID int

AS
select   LetterID, IndicatorID, MYear, SecretariatID, Letter_Type, letterformat
from Letter
WHERE LetterID=@LetterID





GO


CREATE PROCEDURE [dbo].[Select_ExactCopy](@LetterID int) AS

Select recommites.*,org.title,org.IsInnerOrg
From recommites inner join fromorganizations org on org.id=orgid
where LetterID=@LetterID
 and type=1

GO


Create Procedure [dbo].[Select_FieldAccess_by_TableID]
@UserID int ,@TableID int
as

SELECT     *
FROM         FieldAccess
WHERE     (UserID = @UserID) AND (FieldID in ( SELECT  ID FROM   Fields WHERE TableID =@TableID))



GO
create Procedure [dbo].[Select_Fields_by_TableID]
@LetterID int
as

SELECT     ID,Description
FROM      Fields
WHERE   TableID in ( SELECT UserTableID2  FROM   Letter WHERE LetterID =@LetterID)
or     TableID in ( SELECT UserTableID   FROM   Letter WHERE LetterID =@LetterID)


GO

CREATE Procedure [dbo].[Select_FolllowUp_ByLetterID](@LetterID int, @userID int ,@StartFollowUpID int output)
as

  select top 1 @StartFollowUpID=StartFollowUpID
  from followup
  where letterid=@letterid and userid=@userID
set  @StartFollowUpID=isnull( @StartFollowUpID ,0)




GO
CREATE Procedure [dbo].[Select_FollowUP_By_Date](@UserID int ,@BDate char(10), @Edate char(10),
@DonStatusID int)
as
declare @today char(10)
set @today=dbo.shamsi(getdate())

SELECT     FollowUPID,Letter.Letterid, FollowUp.StartFollowUpID, FollowUp.FollowUPTypeID, FollowUp.DoneStatusID,
 substring(ToDoDate,6,5) ToDoDate, HasAlarm,isnull(cast(Indicatorid as varchar(5))+' - '+Memo,Comment) Comment,
 FollowUPTypeTitle, DoneStatustitle, case when ToDoDate=@today then 0  when ToDoDate>@today then 1 else -1 end DelayStatus
FROM  FollowUp
left JOIN   Letter ON FollowUp.LetterID = Letter.LetterID
left JOIN   FollowUPType ON FollowUp.FollowUPTypeID = FollowUPType.FollowUPTypeID
left JOIN   DoneStatus ON FollowUp.DoneStatusID = DoneStatus.DoneStatusID
WHERE     (@UserID = 0 or FollowUp.UserID = @UserID) AND (FollowUp.ToDoDate between  @BDate and @Edate)
and (@DonStatusID=0 or FollowUp.DoneStatusID = @DonStatusID)
order by  ToDoDate

GO


CREATE Procedure [dbo].[Select_FollowUp_ByStart](@StartFollowUpID int)
as

select *
from followup
where StartFollowUpID=@StartFollowUpID


GO
create PROCEDURE [dbo].[select_fromorganization] AS
SELECT    FromOrganizations.ID,  FromOrganizations_1.Title AS parent,FromOrganizations.ResponsibleStaffer,
FromOrganizations.Title
FROM         FromOrganizations INNER JOIN
                      FromOrganizations FromOrganizations_1 ON FromOrganizations.ParentID = FromOrganizations_1.ID
WHERE     (FromOrganizations.ParentID <> 1000001)
and FromOrganizations.id not like '9%'
ORDER BY cast(FromOrganizations.id as varchar(10))




GO

CREATE PROCEDURE [dbo].[select_Letter]  
 @LetterID int    
AS  
Select Letter.*,title senderTitle , dbo.InnerNo(Letter.LetterID) as IndicatorInnerNo
from Letter left JOIN  
     FromOrganizations ON Letter.ToOrgID = FromOrganizations.ID  
WHERE   
 LetterID=@LetterID

GO
CREATE Procedure [dbo].[Select_letter_details]
@letterid int ,
@IndicatorID varchar(10) output ,
@RegistrationDate char(10) output,
@Memo nvarchar(500) output,
@LetterRecommites nvarchar(500) output,
@latestParaph nvarchar(500) output

as
Select
@IndicatorID=cast (IndicatorID as varchar(10)),
@RegistrationDate=RegistrationDate,
@Memo=memo,
@LetterRecommites=LetterRecommites
from Letter
where letterid=@letterid

Select top 1 @latestParaph=isnull(Paraph,'')
from Recommites
where letterid=@letterid order by id desc

GO



CREATE PROCEDURE [dbo].[Select_LetterReCommite]	

(@letterID 	[int],@type tinyint)  AS 

SELECT R.*,f.title+' - '+r.OrgStaff orgtitle,IsInnerOrg 

FROM ReCommites R  

inner join FromOrganizations f on f.ID=r.OrgID 

where Letterid=@letterID and type=@type


GO


CREATE PROCEDURE [dbo].[select_LetterSubject]
	@LetterID int

AS
SELECT    registrationdate,registrationtime,indicatorid, LetterID, SubjectID, SubjectDescription, UserMemo,lastupdate
FROM         Letter
WHERE     LetterID=@LetterID


 


GO
Create Procedure [dbo].[SELECT_ParaphTemplate]
@UserID int
as

SELECT *
FROM ParaphTemplate
Where Userid=@UserID
order by OrderID

GO

CREATE PROCEDURE [dbo].[select_ReceivedLetters]
	@IndicatorID 	int,
	 @MYear 	tinyint,
	 @LetterFormat tinyint,@Secretariatid int

AS
SELECT     ReceivedLetters.*, FromOrgANIZATIONS.Title
FROM         ReceivedLetters 
INNER JOIN  FromOrgANIZATIONS ON ReceivedLetters.tOOrgID = FromOrgANIZATIONS.ID
WHERE 
	IndicatorID	 = @IndicatorID AND
	 MYear = @MYear and
              (LetterFormat=@LetterFormat or @letterformat=0) and
              Secretariatid=@Secretariatid




GO
CREATE procedure [dbo].[Select_recommites_byLetterID]
@letterId int
as

SELECT     FromOrganizations.Title AS [«—Ã«⁄ ‘Ê‰œÂ], FromOrganizations_1.Title AS [«—Ã«⁄ œÂ‰œÂ], FromOrganizations_1.ResponsibleStaffer AS [‰«„ «—Ã«⁄ 
œÂ‰œÂ], 
                      FromOrganizations.ResponsibleStaffer AS [‰«„ «—Ã«⁄ êÌ—‰œÂ], Users.Title AS [ò«—»— À»  ò‰‰œÂ], ReCommites.Paraph AS [„÷„Ê‰ «—Ã«⁄], 
                      ReCommites.RecommiteDate AS [ «—ÌŒ «—Ã«⁄], ReCommites.IsCopy AS [òÅÌø], ReCommites.Proceeded AS [«ﬁœ«„ ‘œÂø], 
                      ReCommites.ProceedDate AS [ «—ÌŒ «ﬁœ«„ Ì« «—Ã«⁄], ReCommites.staffmemo AS [„·«ÕŸ«  »«Ìê«‰Ì], ReCommites.viewdate AS [ «—ÌŒ „‘«ÂœÂ], 
                      ReCommites.OrgStaff AS [‰«„ «—Ã«⁄ ‘Ê‰œÂ ], ReCommites.DeadLineDate AS [„Â·  «ﬁœ«„], RecommiteTypes.Title AS [‰Ê⁄ «—Ã«⁄]
FROM       ReCommites
left join  RecommiteTypes ON RecommiteTypes.ID = ReCommites.Type
left JOIN  Users ON ReCommites.UserID = Users.Id 
left JOIN  FromOrganizations ON ReCommites.OrgID = FromOrganizations.ID 
left JOIN  ReCommites ReCommites_1 ON ReCommites.LetterID = ReCommites_1.LetterID AND   ReCommites.ParentId = ReCommites_1.ID
LEFT JOIN  FromOrganizations FromOrganizations_1 on  FromOrganizations_1.ID = ReCommites_1.OrgID 
WHERE    recommites.type=3 and (ReCommites.LetterID = @letterId)




GO

CREATE PROCEDURE [dbo].[select_sentLetters]
	@IndicatorID 	int,
	 @MYear 	tinyint,
	 @LetterFormat tinyint,
              @Secretariatid tinyint

	 

AS
SELECT     SentLetters.*, FromOrgANIZATIONS.Title
FROM         SentLetters
INNER JOIN  FromOrgANIZATIONS ON SentLetters.ToOrgID = FromOrgANIZATIONS.ID
WHERE 
	IndicatorID	 = @IndicatorID AND
	 MYear = @MYear and
              (LetterFormat=@LetterFormat or @letterformat=0) and
              Secretariatid=@Secretariatid






GO

CREATE procedure [dbo].[select_userLoginLogout](@bdate char(10), @edate char(10), @userid int)
as
SELECT     Users.UserName, IPAddress, 
dbo.Shamsi(LoginTime) LoginDate,cast(datepart(hh, LoginTime) as varchar(2))+':'+cast (datepart(mi, LoginTime) as varchar(2)) LoginTime,
 dbo.Shamsi(LogoutTime) LogoutDate,cast(datepart(hh, LogoutTime) as varchar(2))+':'+cast (datepart(mi, LogoutTime) as varchar(2)) LogoutTime,
                      isSafeLogout
FROM         UserLoginLogout INNER JOIN
                      Users ON UserID = Users.Id
where dbo.Shamsi(LoginTime)  between @bdate and @edate







 

GO

CREATE Procedure [dbo].[Select_UserOrgid]
@UserID int,@today char(10)
as
create  table #Org (Orgid int,Comment nvarchar(255))
insert into #Org
SELECT  	[FromOrgID],case when id=@userid then '”„  «’·Ì' else 'Ã«‰‘Ì‰'  end
FROM [Users]
where @userID=id or (AlternativeUserID=@userid and @today between AlternativebeginDate and AlternativeEndDate )


insert into #Org
SELECT [SecondOrgID],case when id=@userid then '”„  œÊ„' else 'Ã«‰‘Ì‰'  end
FROM [Users]
where [SecondOrgID] is not null and  (@userID=id or (AlternativeUserID=@userid and @today between AlternativebeginDate and AlternativeEndDate ))

update #Org
set comment=comment+':'+title
from #Org
inner join fromorganizations on fromorganizations.id=#Org.orgid


select *
from #Org


GO
CREATE Proc [dbo].[Select_UserSign]
@UserID int
as

SELECT [UserID]
      ,UserSign
  FROM userSign
where UserID=@UserID

GO

CREATE PROCEDURE [dbo].[selectAddedInfo]
@where nvarchar(2000) 
as
declare @sqlCommand nvarchar(4000)
set @sqlcommand='SELECT *  FROM vw_AddedInfo AI '

if @where<>'' set @sqlCommand=@sqlCommand+'  where  '+@where
exec sp_executesql @sqlCommand






GO 

CREATE  PROCEDURE [dbo].[SelectInfo]
@where nvarchar(1900)
as 
declare @mainTable varchar(50), @PrimaryCode varchar(50)
select @mainTable=value
from settings
where userid=-1 and variableid=24

select @PrimaryCode=value
from settings
where userid=-1 and variableid=26

declare @sqlCommand nvarchar(4000)
set @sqlcommand='select l.*,dbo.innerno(l.LetterID) innerno,
ReceiveTypes.Title AS ReciveTitle,Classifications.Title AS ClassificatioTitle,Urgenceis.Title AS UrgencyTitle,Users.Title AS UserTitle,
LetterFormats.Title AS FormatTitle,ToOrganizations.Title AS ToOrgTitle,LetterTemplate.Title AS TemplateTitle, 
FromOrganizations.Title AS FromTitle,f.title SignerTitle,dbo.ArchivePlaces(l.letterID,0) ArchivePlaces,FromOrganizations.PreCode, isnull
(FromOrganizations.PreCode,FromOrganizations.Code) 
Org_PreCode,  ai.*
FROM  Letter l
LEFT JOIN '+@mainTable+'  AI  on l.UserMemo=cast (ltrim(ai.'+@PrimaryCode+' ) as nvarchar(255) )
LEFT JOIN fromorganizations f on f.id=l.signerid
LEFT JOIN ReceiveTypes ReceiveTypes ON ReceiveTypes.ID = L.ReceiveTypeID
LEFT JOIN Classifications Classifications ON L.ClassificationID = Classifications.ID 
LEFT JOIN Urgenceis Urgenceis ON L.UrgencyID = Urgenceis.ID
LEFT JOIN Users Users ON L.UserID = Users.Id
LEFT JOIN FromOrganizations FromOrganizations ON L.FromOrgID = FromOrganizations.ID 
LEFT JOIN fromorganizations ToOrganizations  ON L.ToOrgID = ToOrganizations.ID 
LEFT JOIN LetterFormats LetterFormats ON L.letterformat = LetterFormats.Code
LEFT JOIN LetterTemplate LetterTemplate ON l.TemplateID = LetterTemplate.ID '

if @where<>'' set @sqlCommand=@sqlCommand+' where '+@where

exec sp_executesql @sqlCommand





GO 

CREATE  PROCEDURE [dbo].[SelectLetter]
@where nvarchar(2000) 
as 
declare @sqlCommand nvarchar(4000)
set @sqlCommand='select l.*, 
 ReceiveTypes.Title AS ReciveTitle, Classifications.Title AS ClassificatioTitle, Urgenceis.Title AS UrgencyTitle, Users.Title AS UserTitle, 
 LetterFormats.Title AS FormatTitle, ToOrg.Title AS ToOrgTitle, LetterTemplate.Title AS TemplateTitle,  
 FromOrganizations.Title AS FromTitle,LetterTypes.Title LetterTypeTitle, AnswerLetter.MYear AnswerMYear , AnswerLetter.IndicatorID  AnswerIndicatorID
from Letter as L
 Left JOIN ReceiveTypes ON ReceiveTypes.ID = L.ReceiveTypeID
 Left JOIN Classifications ON L.ClassificationID = Classifications.ID 
 Left JOIN Urgenceis ON L.UrgencyID = Urgenceis.ID
 Left JOIN Users ON L.UserID = Users.Id
 Left JOIN FromOrganizations ON L.FromOrgID = FromOrganizations.ID 
 Left JOIN fromOrganizations ToOrg ON L.ToOrgID = ToOrg.ID
 Left JOIN LetterFormats ON L.letterformat = LetterFormats.Code
 left JOIN LetterTemplate ON l.TemplateID = LetterTemplate.ID
 left JOIN LetterTypes ON l.Letter_type = LetterTypes.ID
 LEFT JOIN     Letter AnswerLetter ON L.SentLetterID = AnswerLetter.LetterID ' 
set @where=isnull(ltrim(rtrim(@where)),'')
if @where<>'' 
 set @sqlCommand=@sqlCommand+' where '+@where
 set @sqlCommand=@sqlCommand+' order by l.indicatorid desc '

exec sp_executesql @sqlCommand







GO
CREATE proc [dbo].[SendLetter_To_Other_sec]
 @NewSecID int ,@letterid int
as

declare @newLetterId int

insert into letter(IndicatorID,MYear,SecretariatID,Letter_Type,letterformat,IncommingNO,Incommingdate,FromOrgID,ToOrgID
,Signerid,ClassificationID,UrgencyID,Memo,AttachTitle,NumberOfAttachPages,NumberOfPage,ReceiveTypeID,UserID,
RetroactionNo,UserMemo,RegistrationDate,RegistrationTime,FollowLetterNo,ToStaffer,SentLetterID,TemplateID,HeaderID,
LetterRecommites,FromStaffer,Finalized,SendStatusid)
select dbo.newIndicatorid(1,2,myear,@NewSecID) IndicatorID,
MYear,
@NewSecID SecretariatID,1 Letter_Type,2 letterformat,
cast(indicatorid as varchar(5))+isnull('/'+Secretariats.PreCode,'') IncommingNO,
registrationdate Incommingdate,FromOrgID,ToOrgID,Signerid,ClassificationID,UrgencyID,Memo,AttachTitle,
NumberOfAttachPages,NumberOfPage,ReceiveTypeID,UserID,RetroactionNo,UserMemo,RegistrationDate,RegistrationTime,
FollowLetterNo,ToStaffer,SentLetterID,TemplateID,HeaderID,LetterRecommites,FromStaffer,Finalized,2
from letter
inner join Secretariats on Secretariats.secid=letter.SecretariatID
where letterid =@letterid and sendstatusid=1

set @newLetterId=@@identity

insert into letterdata(LetterID,PageNumber,Image,extention,Description )
select @newLetterId,PageNumber,Image,extention,Description
from letterdata
where letterid=@letterid

insert into recommites(LetterID,ID,Type,ParentId,OrgID,Paraph,RecommiteDate,UserID,IsCopy,Proceeded,ProceedDate,
staffmemo,viewdate,OrgStaff,DeadLineDate)
select @newLetterId,ID,Type,ParentId,OrgID,Paraph,RecommiteDate,UserID,IsCopy,Proceeded,ProceedDate,staffmemo,viewdate,OrgStaff,DeadLineDate
from recommites
where letterid=@letterid

                       
insert into LetterText(LetterID, TypeText, LetterFormat)
SELECT   @newLetterId  , TypeText, LetterFormat
FROM         LetterText
where LetterID=@LetterID



declare @mainLetterid int,@newOrd tinyint
if exists (select * from LetterRelation where subletterid =@letterid)
  begin
    select @newOrd=max(ord)+1 from  LetterRelation where subletterid =@letterid
    select @mainLetterid=mainLetterid from LetterRelation where subletterid =@letterid
    INSERT INTO LetterRelation(MainLetterID,SubLetterID,Ord) values (@mainLetterid,@newLetterId,@newOrd)
  end
else
  begin
    select @mainLetterid=@letterid
    INSERT INTO LetterRelation(MainLetterID,SubLetterID,Ord) values (@mainLetterid,@letterid,1)
    INSERT INTO LetterRelation(MainLetterID,SubLetterID,Ord) values (@mainLetterid,@newLetterId,2)
  end



GO 


create procedure [dbo].[shrink_Files](@number int,@dbanme nvarchar(50),@logPath nvarchar(255))
as
declare @i int
set @i=1 
while @i<=@number 
 begin
  dbcc shrinkfile(1,1)
  dbcc shrinkfile(2,1)
  exec(N'backup log '+@dbanme+' to disk='''+@logPath+'''')
  set @i=@i+1
  print 'stage '+cast(@i as varchar(3)) +' completetd. '
 end



 
GO









CREATE procedure [dbo].[sp_Add_GroupRecommite]( @letterid int,@Type tinyint,@OrgID int,@Paraph nvarchar(500),@RecommiteDate char(10),
@UserID int ,@IsCopy bit ,@Proceeded bit,@OrgStaff nvarchar(100))
as


declare @id int

select  @id=max(id)
from recommites
where letterid=@letterid and type=@type

set @id=isnull(@id,0)

update recommites
set Proceeded=@Proceeded
where letterid=@letterid and id=@id and type=@type

INSERT INTO ReCommites
                      (LetterID, id,Type, ParentId,OrgID, Paraph, RecommiteDate, UserID, IsCopy, Proceeded, OrgStaff)
VALUES                (@letterid ,@id+1,@Type ,@Id,@OrgID ,@Paraph ,@RecommiteDate ,@UserID ,@IsCopy,0,@OrgStaff)



 

GO

CREATE Procedure [dbo].[Sp_AddFileToDB] @DBName nVarchar(50) 
As

Declare @MaxFileID int
Declare @FileSizeInMB int
Declare @FileName nVarchar(50)
Declare @NewFileName nVarchar(50)
Declare @NewFilePath nVarchar(500)

Declare @NewFileNu int
Declare @MDFSqlText nVarchar(1000)
Declare @SqlText nVarchar(1000)

Select @MaxFileID = Max(FileID) 
FROM dbo.sysfiles  
WHERE Groupid = (SELECT u.groupid FROM dbo.sysfilegroups u WHERE u.groupname = N'PRIMARY')

Select @FileSizeInMB = ( (size * (8192/1024))/1024 ) , @FileName = Name , @NewFilePath = FileName
from dbo.sysfiles
Where Groupid = (SELECT u.groupid FROM dbo.sysfilegroups u WHERE u.groupname = N'PRIMARY') 
And(FileID = @MaxFileID )

Set @NewFileName = @FileName

Set @NewFilePath = Substring(@NewFilePath,1, Len(RTrim(@NewFilePath))-Len(RTrim(@NewFileName)+'.mdb')  )
if @MaxFileID = 1  --.mdf
   Set @NewFileNu = 2
else
   Set @NewFileNu   = Cast(Substring(@NewFileName,Len(RTrim(@NewFileName))-1 ,Len(RTrim(@NewFileName))) as int)+1

if Len( Cast(@NewFileNu as nvarchar) ) = 1
   Set @NewFileName = @DBName+'_Data_'+ '0' +Cast(@NewFileNu as nvarchar)
else
   Set @NewFileName = @DBName+'_Data_'+ Cast(@NewFileNu as nvarchar)

   

if @FileSizeInMB > 3800 --MB
begin
   if @MaxFileID = 1  --mdf ﬁ—«— œ«œ‰ „«ﬂ“Ì„„ ÕÃ„ »—«Ì ›«Ì·
   begin
      Set @MDFSqlText = 'Use Master ALTER DATABASE ['+ @DBName +'] MODIFY FILE (NAME = N'''+ RTrim(@FileName) +''', MAXSIZE = '+ Cast
(@FileSizeInMB+30 as nvarchar(10)) +') '
      Exec(@MDFSqlText)
      Print @MDFSqlText
   end 

   Set @SqlText = 'use Master '+
   'ALTER DATABASE [' + RTrim(@DBName) + '] 
    ADD FILE( NAME = '''+@NewFileName+''' , FILENAME = ''' + @NewFilePath + @NewFileName + '.NDF'' , 
             SIZE = 10 , MAXSIZE = 4000 , FILEGROWTH = 10% ) '
   Exec(@SqlText)
   Print @SqlText
end



GO 

 
CREATE PROCEDURE [dbo].[sp_ArchivePlaces]  
@LetterID int,@ArchiveCenterID  int, @result  nvarchar(1000) output
as
set @result=''
SELECT   @result=@result +' , '+isnull(Place,'') +'-'+Title
FROM         LetterArchiveFolder 
INNER JOIN          ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
where  ArchiveFolder.ArchiveCenterID=@ArchiveCenterID and Letterid =@LetterID
if @result<>'' set  @result=substring(@result,4,1000)


GO 





CREATE    PROCEDURE [dbo].[sp_board] 
@OrgID int,@myear tinyint,@date char(10)
as
if isnull(@date,'')='' set @date='0'

SELECT SL.IndicatorID, SL.MYear, SL.SecretariatID, SL.Letter_type, SL.LetterFormat, 
SL.FromOrgID, SL.ToOrgID,  SL.UrgencyID,  SL.Memo, SL.AttachTitle,
 SL.RegistrationDate, SL.RegistrationTime, SL.FollowLetterNo, SL.ToStaffer,
  RC.Paraph, RC.RecommiteDate, '' no1
FROM ReCommites RC 
INNER JOIN SentLetters SL ON RC.LetterIndicatorID = SL.IndicatorID AND RC.LetterMyear = SL.MYear AND
 RC.SecretariatID = SL.SecretariatID AND RC.LetterFormat = SL.LetterFormat 
INNER JOIN RecommiteTypes ON RC.Type = RecommiteTypes.ID
WHERE    (Rc.OrgID = @OrgID)and RecommiteTypes.InnerOrganize=1 
and sl.myear=@myear and (RC.RecommiteDate=@date or @date='0')
 and RecommiteTypes.ReceiveMode=0
union
SELECT RL.IndicatorID, RL.MYear, RL.SecretariatID, RL.Letter_type, RL.LetterFormat, 
RL.FromOrgID, RL.ToOrgID,  RL.UrgencyID,  RL.Memo, RL.AttachTitle,
 RL.RegistrationDate, RL.RegistrationTime, RL.FollowLetterNo, RL.ToStaffer,
  RC.Paraph, RC.RecommiteDate,  no1
FROM ReCommites RC 
INNER JOIN ReceivedLetters RL ON RC.LetterIndicatorID = RL.IndicatorID AND RC.LetterMyear = RL.MYear AND 
 RC.SecretariatID = RL.SecretariatID AND RC.LetterFormat = RL.LetterFormat 
INNER JOIN RecommiteTypes ON RC.Type = RecommiteTypes.ID
WHERE  (Rc.OrgID = @OrgID) and RecommiteTypes.ReceiveMode=1 and RecommiteTypes.InnerOrganize=1 
and rl.myear=@myear  and (RC.RecommiteDate=@date or @date='0')
order by 1 desc


GO








CREATE proc [dbo].[sp_checkusernotes]
@USERID INT ,@DateID int ,@where nvarchar(1000)
AS
 declare @sql nvarchar (4000)

set @sql=' SELECT top 10000 *,substring(note,1,100)+'' ...'' as Abstract  from UserNote where userid='+cast(@USERID as varchar(5))
set @where =ltrim(rtrim(isnull(@where ,'')))
if @where <>'' 
set @sql=@sql+' and '+@where 

if @DateID<>0
begin
 declare @today char(10),@dw tinyint,@bdate char(10),@edate char(10)
 set @today=dbo.shamsi(getdate())
 set @dw=datepart(dw,getdate())
 select @bdate=begindate,@edate=Enddate from HistoryDateList(@today ,@dw) where id=@DateID
 set @sql=@sql+' AND CreateDate between '''+@bdate+''' and '''+@edate+''''
end

exec sp_executesql @sql



GO 


CREATE PROCEDURE [dbo].[sp_CompleteFieldBook](@tableName varchar(50),@description varchar(50) ,
@tableid int output)
as
if @tablename is null return
if not exists( select *
from tables where  replace(
replace(tableName,'[',''),']','')= replace(replace(@tableName,'[',''),']',''))
begin
 select @tableid=max(tableid)+1 from tables
 insert into tables (tableid,tablename,description)
 values(@tableid,@tablename,@description)
end
else
if (select description from tables where  replace(
replace(tableName,'[',''),']','')= replace(replace(@tableName,'[',''),']','')) is null

update tablename
set description=@description
where    replace(replace(tableName,'[',''),']','')= replace(replace(@tableName,'[',''),']','')
 
select @tableid=tableid from tables where replace(replace(tableName,'[',''),']','')= replace(replace(@tableName,'[',''),']','')


insert into Fields(TableID, FieldName, Description,islike,isstring,everylike)
SELECT  @tableid,syscolumns_f.name,isnull((select cast(value as varchar(50)) from sysproperties where id = syscolumns_f.id AND smallid = 
syscolumns_f.colid and
 name='MS_Description'),syscolumns_f.name) Description,dbo.islike(systypes.name),
dbo.isstring(systypes.name),dbo.everylike(systypes.name,syscolumns_f.length)
FROM  sysobjects sysobjects_f
INNER JOIN syscolumns syscolumns_f ON sysobjects_f.id = syscolumns_f.id
inner join systypes on syscolumns_f.xtype=systypes.xtype
where replace(replace(sysobjects_f.name,'[',''),']','')=replace(replace(@tablename,'[',''),']','')
and  syscolumns_f.name not in (SELECT     FieldName
FROM         Fields
WHERE     (TableID = @tableid))
return @tableid


 

GO 

CREATE     PROCEDURE [dbo].[sp_dailyRep] 
@myear tinyint,@bdate char(10),@edate char(10),@where nvarchar(1000)
as
 declare @sql nvarchar (4000)

declare @rw nvarchar(255)

set @RW='WHERE l.myear=l.myear'--+cast(@myear as varchar(10))


set @rw=@rw+' AND (L.RegistrationDaTE between '''+@bdate+''' and '''+@edate+''')'

set @sql='select distinct l.LetterID, IndicatorID, Memo, AttachTitle,RegistrationDate,  ToStaffer, FollowLetterNo, 
UserMemo, RetroactionNo, NumberOfPage, NumberOfAttachPages, CenterDate, CenterNo,IncommingDate,
lettertypes.title ReceiveMode ,SentLetterID, Incommingno,
lETTERrecommites RECOMMITES,TTO.title toorgtitle,
Classifications.Title AS Classificationtitle, Urgenceis.Title AS UrgencyTitle, LetterFormats.Title AS FormatTitle,
 LetterTemplate.Title AS TemplateTitle, FromOrganizations.Title AS SignerTitle,Users.Title UserTitle
FROM ReCommites RC 
INNER JOIN Letter L ON RC.LetterID = l.LetterID 
left JOIN ReCommites PRC ON RC.LetterID = PRC.LetterID AND PRC.ID = RC.ParentId 
left JOIN FromOrganizations FO ON FO.ID = PRC.OrgID 
left JOIN fromOrganizations TTO ON TTO.ID = l.ToOrgID 
LEFT JOIN LETTERTYPES on lettertypes.id=l.letter_type
left JOIN RecommiteTypes    ON RC.Type = RecommiteTypes.ID 
Left JOIN Urgenceis         ON L.UrgencyID = Urgenceis.ID 
LEFT JOIN FromOrganizations ON L.Signerid=FromOrganizations.ID
LEFT JOIN LetterFormats     ON L.letterformat = LetterFormats.Code 
LEFT JOIN Classifications   ON L.ClassificationID = Classifications.ID 
LEFT JOIN LetterTemplate    ON L.TemplateID = LetterTemplate.ID 
LEFT JOIN Users    ON L.UserID = Users.ID '+@rW



set @where=isnull(ltrim(rtrim(@where)),'')
if @where<>''
select @sql=@sql+' and  '+@where

set @sql=@sql+' order by 1 desc'
exec(@sql)




GO 

Create Procedure [dbo].[Sp_Del_NewsGroupUsers] @NewsGroupID int 
As  
  Delete From NewsGroupUsers  
  Where(NewsGroupID = @NewsGroupID)


GO 

Create Procedure [dbo].[Sp_Del_WorkGroupOrg] @WorkGroupID int 
As
  Delete From WorkGroupOrg
  Where WorkGroupID = @WorkGroupID


GO 
CREATE PROCEDURE [dbo].[Sp_DelayedLetter]  
@SecretariatID int,@myear tinyint,@DeadLine int, @userID int , @Tag Tinyint
as  
  
declare  
@sql nvarchar (4000),  
@rw nvarchar(500),  
@Today char(10),  
@deadlineDate char(10),  
@OrgID int,  
@todayToint varchar(10)  
  
select @today=dbo.shamsi(getdate())  
set @todayToint=cast(dbo.ShamsiToInt(@today) as varchar(10))  
  
SELECT     @OrgID=FromOrgID  
FROM         Users  
WHERE     Id = @userID  
  
set @RW='WHERE (Rc.deadlinedate is not null or ChildRecommite.Deadlinedate is not null) and ( L.myear='+cast(@myear as varchar(10))+
') AND (Rc.OrgID = '+ cast(@OrgID as varchar(10))+') '  
    
if @SecretariatID>0  
set @rw=@rw+' AND (SecretariatID = '+cast(@SecretariatID as varchar(10))+')'  
else  
set @rw=@rw+' AND (SecretariatID in (SELECT SecId FROM UserSecretariats WHERE UserId = '+cast(@userid as varchar(5))+'))'  
  

--ﬂ«— «»·
if @Tag = 1
   set @rw=@rw+' AND (case when Rc.Proceeded=0  then RC.DeadLineToint else  '''+@todayToint+''' end-'+@todayToint+' )< '+cast(@DeadLine as 
varchar(5)) 
--«—”«·Â«Ì »«Ìê«‰Ì ‰‘œÂ
if @Tag = 2
   set @rw=@rw+' AND (case when Rc.Proceeded=1 and ChildRecommite.Proceeded=0 then ChildRecommite.DeadLineToint  
       else  '''+@todayToint+''' end-'+@todayToint+' )< '+cast(@DeadLine as varchar(5))  
--//---
  
set @sql=' SELECT count( *)  
FROM ReCommites RC  
INNER JOIN Letter L ON RC.LetterID = L.LetterID  
left JOIN ReCommites ChildRecommite ON RC.LetterID = ChildRecommite.LetterID AND  
RC.ID = ChildRecommite.ParentId  AND ChildRecommite.type = RC.type '  
  
set @sql=@sql+@rW  
  
exec sp_executesql  @sql  
  


GO 




CREATE  procedure  [dbo].[sp_delphi_Proc] (@spN varchar(50) )
as

declare @line1 varchar(1000),@line2 varchar(8000),@id int, @count int ,@spname varchar(100),@spType varchar(50),@colname varchar(100),
@isoutparam bit,@temp int,@length int,@isFunction bit ,@Rtype nvarchar(100),@Rpname nvarchar(100)

  SELECT    identity(int,1,1) id, name  into #m
  FROM         sysobjects
  WHERE     (xtype = 'p') AND (status >= 0)
         and (isnull(@spn,'')='' or name like '%'+@spn) 


select @count=max(id)
from #m

set @id=1

while @id<=@count 
 begin
   select @spname=name from #m where id=@id
   declare spcol cursor for
    select substring(syscolumns.name,2,100),max(dbo.delphiType(systypes.name)),max(colid),max( isoutparam),max(syscolumns.length)
    FROM    syscolumns INNER JOIN
            sysobjects ON syscolumns.id = sysobjects.id INNER JOIN
            systypes ON syscolumns.xtype = systypes.xtype
    WHERE     (sysobjects.xtype = 'p') AND (sysobjects.name = @spname)
    group by substring(syscolumns.name,2,100)
   order by 3

if (    select count(syscolumns.name)
    FROM    syscolumns INNER JOIN
            sysobjects ON syscolumns.id = sysobjects.id 
    WHERE      (sysobjects.name =@spname) and syscolumns.isoutparam=1)=1 
set @isFunction =1
else 
set @isFunction=0

    open  spcol
    fetch next from spcol into @colname,@spType,@temp,@isoutparam,@length
    set @line1=case when @isfunction=0 then 'Procedure  ' else 'function ' end+'Exec_'+@spname+'('
    set @line2='';

    while @@Fetch_Status=0 
     begin
      if @colname='type' set @colname='_Type'
      set @line1=@line1+case when @isfunction=0 or @isoutparam=0 then  @colname+':'+@spType+';' else '' end
      set @line2=@line2+'
  with ADOSP.Parameters.AddParameter do
      begin
      DataType := ft'+@spType+';
      Direction := '+case @isoutparam when 0 then 'pdInput;' else 'pdoutput;' end +'
      Name:=''@'+@colname+''';'+case when @spType like '%string%' then '
      size:= '+cast(@length as varchar(10))+';' else '' end+
case @isoutparam when 0 then  '
      Value :='+@colname+';
' else '' end +'
    end;
'
if  @isoutparam=1 set  @Rtype=@spType;
if  @isoutparam=1 set  @Rpname=@colname;
    fetch next from spcol into @colname,@spType,@temp,@isoutparam,@length
     end;
if @line1 like '%;' set @line1=substring(@line1,1,len(@line1)-1)
set @line1=@line1+case when  @isfunction=0 then ');' else '):'+@Rtype+';' end 
    print replace(@line1+'
'+@line1+'
 var ADOSP:TADOStoredProc;  
 begin
  ADOSP:=TADOStoredProc.create(nil);
  ADOSP.ProcedureName:='''+@spname+''';
',';;',';')
PRINT @LINE2

    print
'    ADOSP.Connection:=dm.YeganehConnection; 
    ADOSP.ExecProc;    
'+case when @isfunction=0 then '' else 
'   Result:=ADOSP.Parameters.ParamByname(''@'+@Rpname+''').value;' end+'
end;'


  close spcol
  deallocate spcol
  set @id=@id+1
 end




GO 

CREATE  procedure  [dbo].[sp_delphi_proceByName](@spN varchar(50) )
as

declare @ALL VARCHAR(4000),@line1 varchar(1000),@line2 varchar(4000),@id int, @count int ,@spname varchar(100),@spType varchar(50),@colname 
varchar(100)

  SELECT    identity(int,1,1) id, name  into #m
  FROM         sysobjects
  WHERE     (xtype = 'p') AND (status >= 0)
         and (isnull(@spn,'')='' or name like @spn)


select @count=max(id)
from #m



set @id=1

while @id<=@count
 begin
   select @spname=name from #m where id=@id
   declare spcol cursor for
    select substring(syscolumns.name,2,100),max(dbo.delphiType(systypes.name))
    FROM    syscolumns INNER JOIN
            sysobjects ON syscolumns.id = sysobjects.id INNER JOIN
            systypes ON syscolumns.xtype = systypes.xtype
    WHERE     (sysobjects.xtype = 'p') AND (sysobjects.name = @spname)
    group by substring(syscolumns.name,2,100)
    open  spcol
    fetch next from spcol into @colname,@spType
    set @line1='Procedure  Open_'+@spname+'(';
    set @line2='';


    while @@Fetch_Status=0
     begin
      if @colname='type' set @colname='_Type'
      set @line1=@line1+@colname+':'+@spType+';'
      set @line2=@line2+'ParamByName(''@'+ @colname+''').value:='+@colName+';
'
    fetch next from spcol into @colname,@spType
     end

    SET @ALL= @line1+');
'+@line1+');
  begin
  with Dm.' + @spname +',parameters do
   begin
    Close;
    ' + @LINE2+'    Open;
   end;
end;'


PRINT Replace(REPLACE(@all,';;',';'),';)',')')

  close spcol
  deallocate spcol
  set @id=@id+1
 end
select  'object '+name+': TADOStoredProc
  Connection = YeganehConnection
  CursorType = ctStatic
  ProcedureName = '''+name+'''
end','
object D'+name+': TDataSource
  DataSet = '+name+'
end'
  FROM         sysobjects
  WHERE     (xtype = 'p') AND (status >= 0)
         and (isnull(@spn,'')='' or name like @spn)




GO 

CREATE PROCEDURE [dbo].[Sp_DistinctDate] @MyFarsiToday nvarchar(10)     
As    
  declare @today char(10) , @dw tinyint    
   Set @today = @MyFarsiToday
    Select * from HistoryDateList(@Today ,7)
  Order by ID 


GO




CREATE procedure [dbo].[sp_duplicateOrg](@code nvarchar(50),@title nvarchar(100),@exsits bit output)
as

if exists (
SELECT   *
FROM         FromOrganizations
WHERE     (replace(Code,' ','') = replace(@code,' ',''))   )
set @exsits=1
else
set @exsits=0







GO

create PROCEDURE [dbo].[sp_FieldByTableCode]
 @tableid int
as
select *
from fields
where tableid=@tableid





GO

Create Procedure [dbo].[Sp_FillBlob] 
As
CREATE TABLE #TempTable(ID int IDENTITY (1, 1) NOT NULL , MyBlobField image NULL)
Select *  from #TempTable


GO 



CREATE PROCEDURE [dbo].[sp_GetFromHelp]
@Formtag int
as
select htmlHelp
from FormsHelp
where formTag=@formtag








GO 
CREATE PROCEDURE [dbo].[sp_GetTermCode](@today char(10))
AS
declare @Code char(3)
select top 1 @code=code
from behdasht..lt53 
where  @today between bdate and edate
order by 1 desc


if @code is null
select top 1 @code=code
from behdasht..lt53 
order by 1 desc

 

GO 
CREATE  PROCEDURE [dbo].[sp_inbox]
@SecretariatID int,
@LetterFormat tinyint,
@OrgID int,
@Proceeded bit,
@Type tinyint,@myear tinyint,@date tinyint,@ArchiveFolderID int ,@where nvarchar(1000),
@userID int,@Letter_Type int,@DeadLine int,@orderClause varchar(50)=' rc.recommitedate desc,l.indicatorid desc',
@top int=100
as
declare      
@sql nvarchar (4000),      
@rw nvarchar(2000),      
@Today char(10),      
@Proceed bit, -- @Proceed
@todayToint varchar(10),  
@Mytoday Nvarchar(10)
      
select @today=dbo.shamsi(getdate())      
      
set @Proceed=@Proceeded
 



set @RW='WHERE   (RC.Finallized=1) and (Rc.OrgID = '+
cast(@OrgID as varchar(10))+') AND (Rc.Proceeded = '+cast(@Proceeded as varchar(2))+')
'
if @myear>0  set @rw=@rw+'  and  L.myear='+cast(@myear as varchar(10))      

      
if @LetterFormat>0 set @rw=@rw+' and (l.LetterFormat ='+cast( @LetterFormat as varchar(2))+')'      
else set @rw=@rw+' and (l.LetterFormat in (1,2))'      
      
      
if @letter_Type>0      
set @rw=@rw+' AND (l.letter_Type = '+cast(@Letter_Type as varchar(2))+')'      
      
if @type>0      
      set @rw=@rw+' AND (Rc.Type = '+cast(@Type as varchar(2))+')'      
    
if @ArchiveFolderID>0      
set @rw=@rw+' AND (ArchiveFolderID = '+cast(@ArchiveFolderID as varchar(10))+')'      
      
if @date<>0      
begin      
 declare @dw tinyint,@bdate char(10),@edate char(10)      
  set @dw=datepart(dw,Getdate())  
--Ranjbar  
  ---select @bdate=begindate,@edate=Enddate from HistoryDateList(@today ,@dw) where id=@date   
  Set @Mytoday = Cast(1300+@myear as nvarchar)+ Substring(@Today,5,6)  
  select @bdate=begindate,@edate=Enddate from HistoryDateList(@Mytoday ,@dw) where id=@date   
--//  
      
 set @rw=@rw+' AND (RC.RecommiteDate between '''+@bdate+''' and '''+@edate+''')'      
end      
      
if @SecretariatID>0      
set @rw=@rw+' AND (SecretariatID = '+cast(@SecretariatID as varchar(10))+')'      
else      
set @rw=@rw+' AND (SecretariatID in (SELECT SecId FROM UserSecretariats WHERE UserId = '+cast(@userid as varchar(5))+'))'      
      
      
set @todayToint=cast(dbo.ShamsiToInt(@today) as varchar(10))      
      
if @DeadLine between -1 and 30      
 set @rw=@rw+' AND ('+      
case when @Proceed=1 then 'case when ChildRecommite.Proceeded=0 then ISNULL(ChildRecommite.DeadLineToint,'+@todayToint+') else  
'''+@todayToint+''' end '      
else  'ISNULL(RC.DeadLineToint ,'+@todayToint+') ' end+' -'+@todayToint+' )<= '+cast(@DeadLine as varchar(5))      
      
      
set @sql=' SELECT top '+cast(@top as varchar(5))+' L.LetterID,L.SignerID, L.IndicatorID, L.MYear,l.subjectid, L.SecretariatID, L.Letter_Type, 
L.letterformat, L.IncommingNO, L.Incommingdate, 
L.ClassificationID,      
L.UrgencyID, L.Memo, L.Tostaffer,l.SentLetterID,L.AttachTitle, L.NumberOfAttachPages, L.NumberOfPage, L.ReceiveTypeID, L.UserID, L.RetroactionNo, 
L.UserMemo, L.RegistrationDate,      
l.toorgid,l.fromorgid,L.FollowLetterNo, L.LetterRecommites,l.finalized,l.CenterNo,l.CenterDate,l.templateID,l.headerID,      
l.registrationTime,l.fromstaffer,l.sendStatusID,L.LastUpdate,L.UserTableID,      
DBO.INNERNO(L.Letterid)  InnerNo, PRC.OrgID,  RC.ParentId,  RC.Paraph, RC.RecommiteDate,  RC.Proceeded,      
 RC.ProceedDate, RecommiteTypes.id ReType,RecommiteTypes.Title RecommitTypeTitle,      
case when fo.title is null then 0 else 1 end IsInner, isnull(FO.Title,TTO.title) RecommiterTitle,tto.title sendertitle,rc.recommiteid,      
 rc.id,  
RC.StaffMemo,
isnull(incommingno,indicatorid)  Yincommingno,Secretariats.PreCode,RC.IsCopy      
,dbo.has_Page(l.letterid) has_Page,      
dbo.has_WordPage(l.letterid) has_WordPage,      
dbo.has_file(l.letterid) has_file,'''' FirstView,'+      
'isnull('+      
case when @Proceed=1 then 'ChildRecommite.DeadLineToint' else 'RC.DeadLineToint' end+'-'+@todayToint+',0) DeadLineDays,'+
case when @Proceed=1 then 'ChildRecommite.ViewDate' else 'RC.ViewDate' end+','+  --??? ?? ????? ??
case when @Proceed=1 then 'ChildRecommite.DeadLineDate ' else  'RC.Deadlinedate  ' end+' DeadLineDate ,'+
case when @Proceed=1 then 'ISNULL(ChildRecommite.Paraph,RC.Paraph) '   else ''' ''' end +' ChildParaph ,'+
case when @Proceed=1 then 'RecommitedOrg.Title '   else ''' ''' end +' ChildOrg , '+      
case when @Proceed=1 then ' case when rc.ActionTypeID=5 then 5 else ChildRecommite.ActionTypeID end '  else  ' RC.ActionTypeID'   end +' ActionTypeID 
'+     
    
', (Select  Count(R.RecommiteID)      
From ReCommites R     
Inner join Letter on Letter.LetterID = R.LetterID    
Inner join FromOrganizations on R.OrgID = FromOrganizations.ID    
Where R.LetterID = L.LetterID '+    
' And R.OrgID = '+Cast(@OrgID as varchar) +    
' Having Count(R.RecommiteID) > 1 ) as UserRecomCount  ' +    
' , RC.IsAnswer , RC.ISFollowup ' +    
    
'FROM ReCommites RC      
INNER JOIN Letter L ON RC.LetterID = L.LetterID      
INNER JOIN Secretariats  ON Secretariats.Secid = L.SecretariatID      
left JOIN ReCommites PRC ON RC.LetterID = PRC.LetterID AND PRC.ID = RC.ParentId  AND PRC.type = RC.type      
left JOIN FromOrganizations FO ON FO.ID = PRC.OrgID      
left JOIN FromOrganizations TTO ON TTO.ID = L.ToOrgID       
INNER JOIN RecommiteTypes ON RC.Type = RecommiteTypes.ID '+      
case when @Proceed=1 then '      
left JOIN ReCommites ChildRecommite ON RC.LetterID = ChildRecommite.LetterID AND RC.ID = ChildRecommite.ParentId  AND ChildRecommite.type = 
RC.type       
left JOIN FromOrganizations RecommitedOrg ON RecommitedOrg.ID = ChildRecommite.OrgID '      
else '' end      
      
if @archiveFolderID<>0        
set @sql=@sql+'       
Left join LetterArchiveFolder on LetterArchiveFolder.Letterid=Rc.RecommiteID '      
      
set @sql=@sql+@rW      
      
      
set @where=isnull(ltrim(rtrim(@where)),'')      
if (@where<>'')       
select @sql=@sql+' and '+@where      
      
if isnull(ltrim(@orderClause),'')=''       
 set @orderClause=' rc.recommitedate desc,l.indicatorid desc'      
            
      
set @sql=@sql+' order by '+@orderClause      
exec sp_executesql  @sql      
PRINT @sql  

GO







CREATE procedure [dbo].[sp_Letter_Numbers]
@bdate char(10),@edate Char(10),
@receivedNum int output,
@SentNum int output,
@recommitesNum int output,
@SecID int
as
set @receivedNum=0
set @SentNum=0
set @recommitesNum=0

select @receivedNum=count(*) from Letter where registrationdate between @bdate and @edate and (secretariatid=@SecID or @SecID=0) and 
Letter_type=1
select @SentNum=count(*) from Letter where registrationdate between @bdate and @edate and (secretariatid=@SecID or @SecID=0) and Letter_type=2
select @recommitesNum=count(*)-@SentNum-@receivedNum from ReCommites
inner join letter on letter.letterid=ReCommites.LetterId where ReCommitedate between @bdate and @edate and (secretariatid=@SecID or @SecID=0)





GO 
Create PROCEDURE [dbo].[sp_makeRecommited]

	(
		@recommiteId int,
        @ProceedDate char(10),
        @staffmemo  nvarchar(255)

	)

AS
UPDATE ReCommites
   SET  Proceeded = 1
      ,ProceedDate = @ProceedDate
      ,staffmemo = @staffmemo
 WHERE  recommiteId=@recommiteId

GO

 
CREATE  PROCEDURE [dbo].[sp_recommite_report]
@SecretariatID int,@myear tinyint,@where nvarchar(1000)

as
declare @sql nvarchar (4000),@rw nvarchar(2000),@Today char(10)

select @today=dbo.shamsi(getdate())

set @RW=' 
 WHERE  not (l.letter_type=2 and l.letterformat=1 ) and  (l.LetterFormat <3) AND  L.myear='+cast(@myear as varchar(10))
if @SecretariatID>0 
set @rw=@rw+'
 AND (SecretariatID = '+cast(@SecretariatID as varchar(10))+')'


set @sql=' SELECT  L.LetterID, L.IndicatorID,L.IncommingDate,L.IncommingNo, L.Memo, L.RetroactionNo,
 L.RegistrationDate, L.FollowLetterNo, L.ToStaffer,sender.Title AS SenderTitle,
 Deliver.Title AS DeliverTitle,LetterTypes.Title LetterTypeTitle,LetterRecommites, RC.Paraph,
 RC.RecommiteDate,  RC.Proceeded, RC.ProceedDate, RecommiteTypes.Title RecommitTypeTitle,
isnull(PFO.Title,SENDER.title) RecommiterTitle,Fo.Title Recommited, RC.ViewDate, RC.StaffMemo,
dbo.shamsidatediff(prc.DeadLineDate,isnull(Rc.Proceeddate,'''+@today+''')) DeadlineDays,
dbo.shamsidatediff(rc.Recommitedate,isnull(Rc.Proceeddate,'''+@today+''')) ProgressDays,
prc.DeadLineDate,ActionTypeTitle 
FROM ReCommites RC 
left JOIN ReCommites PRC ON RC.LetterID = PRC.LetterID AND PRC.ID = RC.ParentId  AND PRC.type = RC.type 
INNER JOIN Letter L ON RC.LetterID = L.LetterID
INNER JOIN Secretariats  ON Secretariats.Secid = L.SecretariatID
left JOIN FromOrganizations FO ON FO.ID = RC.OrgID 
left JOIN FromOrganizations PFO ON PFO.ID = PRC.OrgID 
left JOIN  FromOrganizations sender ON l.ToOrgID = sender.ID
left JOIN  FromOrganizations Deliver ON l.FromOrgID = Deliver.ID 
Left join LetterTypes on LetterTypes.ID=l.Letter_type 
left JOIN RecommiteTypes ON RC.Type = RecommiteTypes.ID 
left JOIN ActionType  ON ActionType.ActionTypeID = RC.ActionTypeID'

set @sql=@sql+@rW

set @where=isnull(ltrim(rtrim(@where)),'')
 if (@where<>'') 
   select @sql=@sql+' and '+@where

set @sql=@sql+' order by rc.recommitedate desc,l.indicatorid desc'
exec sp_executesql  @sql
PRINT @sql

GO

CREATE  PROCEDURE [dbo].[sp_recommite_statistic] 
@SecretariatID int,@myear tinyint,@where nvarchar(1000)

as
declare @sql nvarchar (4000),@rw nvarchar(2000),@Today char(10)

select @today=dbo.shamsi(getdate())

set @RW=' 
 WHERE  not (l.letter_type=2 and l.letterformat=1 ) and  (l.LetterFormat <3) AND  L.myear='+cast(@myear as varchar(10))
if @SecretariatID>0 
set @rw=@rw+'
 AND (SecretariatID = '+cast(@SecretariatID as varchar(10))+')'


set @sql=' SELECT top 1000   Fo.Title Recommited, 
min(dbo.Recommite_DeadLine(rc.Recommiteid,isnull(Rc.Proceeddate,'''+@today+'''))) MinDeadlineDays,
max(dbo.Recommite_DeadLine(rc.Recommiteid,isnull(Rc.Proceeddate,'''+@today+'''))) MaxDeadlineDays,
avg(dbo.Recommite_DeadLine(rc.Recommiteid,isnull(Rc.Proceeddate,'''+@today+'''))) AvgDeadlineDays,
min(dbo.shamsidatediff(rc.Recommitedate,isnull(Rc.Proceeddate,'''+@today+'''))) MinProgressDays,
max(dbo.shamsidatediff(rc.Recommitedate,isnull(Rc.Proceeddate,'''+@today+'''))) MaxProgressDays,
avg(dbo.shamsidatediff(rc.Recommitedate,isnull(Rc.Proceeddate,'''+@today+'''))) AvgProgressDays

FROM ReCommites RC 
INNER JOIN Letter L ON RC.LetterID = L.LetterID
INNER JOIN Secretariats  ON Secretariats.Secid = L.SecretariatID
left JOIN FromOrganizations FO ON FO.ID = RC.OrgID '

set @sql=@sql+@rW

set @where=isnull(ltrim(rtrim(@where)),'')
 if (@where<>'') 
   select @sql=@sql+' and '+@where

set @sql=@sql+'
 group by  Fo.Title
 order by Fo.Title '
exec sp_executesql  @sql
PRINT @sql




GO 






create procedure [dbo].[sp_Recommites_Number]
@bdate char(10),@edate Char(10) as
SELECT     Title,
 sum(case when Proceeded=1 then 1 else 0 end) as Proceed,
sum(case when Proceeded=0 then 1 else 0 end) as NotProceed, 
sum(case when Proceeded=1 then dbo.ShamsiDateDiff(RecommiteDate, ProceedDate) else 0 end) SumProceed into #m
FROM         ReCommites INNER JOIN
                      FromOrganizations ON ReCommites.OrgID = FromOrganizations.ID
WHERE     (RecommiteDate BETWEEN @bdate AND @edate)
group by title

SELECT     *,case when Proceed>0 then  round(cast(SumProceed as float)/Proceed,2)  else 0 end as avgProceed
FROM         #m



 

GO 


CREATE PROCEDURE [dbo].[sp_ReindexTables]
as
declare  @Name varchar(50)
declare  @SQL nvarchar(100)
declare Main_Cursor cursor for  
           select name from sysobjects
           where type='U' order by name
 open  Main_Cursor 
 fetch next from Main_Cursor into @Name

 while @@Fetch_Status=0 
  begin
    set @sql='dbcc dbreindex( ['+@name+'] )'
    print @sql+'...'
    exec sp_executesql @SQL        
   fetch next from Main_Cursor into @Name
  end 

 close Main_Cursor
 deallocate Main_Cursor




GO 

CREATE Procedure [dbo].[Sp_Sel_Emails] @Status SmallInt , @UsersID int     
As  
begin  
   Select EmailsID,Code,Subject,SendAddress,ReciveAddress,  
          Status,DateEmail,TimeEmail,IsRead,IsAnswer,  
          UsersID,AttachFileName,IsReciveEmail    
   from Emails  
   Where(Status = @Status)
   And(UsersID = @UsersID)
end 


GO 
Create Procedure [dbo].[Sp_Sel_ImageData] @TableName Nvarchar(50) , @TableID int 
As
Select * 
from ImageData
Where(TableName = @TableName)
  And(TableID = @TableID)


GO
Create Procedure [dbo].[Sp_Sel_News] @Like Nvarchar(50)    
As  
if @Like = ''  
   Select Top 500 * From News Order BY NewsID Desc  
else  
begin  
   Set @Like = '%'+@Like+'%'  
   Select Top 500 * From News Where(Title like @Like) Order BY NewsID Desc  
end  



GO

Create Procedure [dbo].[Sp_Sel_NewsGroup] @UsersID Int  
As  
Select * from NewsGroup   
Where(UsersID = @UsersID)


GO 
CREATE Procedure [dbo].[Sp_Sel_Phone] @UserSID Int
As
Select *
from Phone
Where (1=1)
And((IsPublic=1)or(UsersID = @UserSID))
Order By Code 




GO

Create Procedure [dbo].[Sp_Select_Receipt] @ReceiptID int = 0  
as  
if @ReceiptID = 0
   Select * from Receipt
else 
   Select * from Receipt Where(ReceiptID = @ReceiptID )  

GO

Create Procedure [dbo].[Sp_Select_WorkGroup] @UserID int 
As
  Select * From WorkGroup Where UserID = @UserID


GO


CREATE  Procedure [dbo].[sp_SetForeinKey]
@inp bit
 as
    declare  @Name varchar(50)
    declare  @SQL nvarchar(100)
    declare Main_Cursor cursor for
               select name from sysobjects
               where type='U' order by name
     open  Main_Cursor
     fetch next from Main_Cursor into @Name
    
     while @@Fetch_Status=0 
      begin
       if @inp=0  set @sql='alter table ['+@name+'] nocheck constraint all'
        else set @sql='alter table ['+@name+'] check constraint all'
        exec sp_executesql @SQL        
       fetch next from Main_Cursor into @Name
      end
    
     close Main_Cursor
     deallocate Main_Cursor

GO



CREATE  procedure [dbo].[sp_Statistic]
@Secretariatid int,@myear tinyint,@Letter_Type int,@LetterFormat int, @where nvarchar(2000),@archiveFolderID int,@GroupBy int
as 

set @where= case when isnull(ltrim(rtrim(@where)),'')<>'' then
                          'where len(registrationdate)=10 and '+@where else ' where len(registrationdate)=10' end

if @Letter_Type<>0 
  set @where=@where+' and (Letter_Type = '+Cast(@Letter_Type as varchar(5))+')'

if @Secretariatid<>0 
  set @where=@where+' and (Secretariatid = '+Cast(@Secretariatid as varchar(5))+')'

if @Myear<>0 
  set @where=@where+' and (myear = '+Cast(@myear as varchar(5))+')'

if @LetterFormat<>0 
  set @where=@where+' and (LetterFormat = '+Cast(@LetterFormat as varchar(5))+')'



declare @sql nvarchar(4000),@select  varchar(500),@joins varchar(500)



set @joins =case when @groupby<8         then ' '
                             when @groupby=8 then ' left JOIN Classifications ON Letter.ClassificationID = Classifications.ID '                     
                             when @groupby=9 then ' left JOIN Urgenceis ON Letter.UrgencyID = Urgenceis.ID '                     
                             when @groupby=10 then ' left JOIN  Fromorganizations  ToOrganizations ON Letter.ToOrgID = ToOrganizations.ID '
                             when @groupby=11 then ' left JOIN  Fromorganizations   ON Letter.FromOrgID = Fromorganizations.ID '   
                             when @groupby=12 then ' left JOIN  users   ON Letter.userid = users.ID '   end

           


declare @Field varchar(100)
set @field= case @groupby 
                         when 1  then 'registrationdate '
                          when 2  then 'dbo.ShamsiDayOfWeek(registrationdate) '
                          when 3  then 'substring(registrationdate,6,2) '
                          when 4  then 'dbo.fasl(registrationdate) '
                          when 5  then 'substring(registrationdate,1,4) '
                          when 6  then 'substring(registrationTime,1,2) '
                          when 7  then 'dbo.pm(registrationtime) '
                          when 8  then 'Classifications.Title '
                          when 9  then 'Urgenceis.Title '
                          when 10 then 'ToOrganizations.title ' 
                          when 11 then 'FromOrganizations.title ' 
                          when 12 then 'users.title ' end

set @select ='select '+@field+' ,count(1)  from letter '

create table ##s(id int identity(1,1),title nvarchar(255),number int)


set @sql=' insert  into ##s(title,number) '+@select+  @joins+@where+
+'group by '+@field +' order by 2 desc '

exec(@sql)

if @groupby in (1,10,11)
 begin
   declare @c int,@d int
   select  @d=number from ##s where id=50 
   set @d=isnull(@d,0)
   select @c=sum(number) from ##s where number<=@d
   delete from ##s where number<=@d
   set  IDENTITY_INSERT ##s On
   insert into ##s(id,title,number) values(50,'”«Ì— ',@c)
 end
  
 
create table #s(id int identity(1,1),title nvarchar(255),number int)

insert into #s(title,number)
select title,number from ##s order by title

select cast(id as int) id ,title,number
from #s
order by title

drop table ##s

 


GO 

CREATE PROC [dbo].[sp_stop_mytrace]
  @queue_handle int
AS

PRINT 'Stopping the following trace:'

SELECT * FROM master.dbo.activetraces
WHERE queue_handle = @queue_handle

-- destroy the queue
EXEC master..xp_trace_destroyqueue @queue_handle

DELETE FROM master.dbo.activetraces
WHERE queue_handle = @queue_handle

GO
create procedure [dbo].[Transfer_Get_Letter_By_LetterID](@Letterid int output)
as

SELECT     Letter.*, org.Title AS OrgTitle
FROM         Letter INNER JOIN
                      FromOrganizations org ON Letter.ToOrgID = org.ID
WHERE     (Letter.LetterID =@Letterid)



GO




CREATE PROCEDURE [dbo].[Transfer_Get_Letterdata_By_LetterDataID]
@LetterDataID int
AS
select *
from LetterData
where LetterDataID=@LetterDataID




GO




CREATE Procedure [dbo].[Transfer_Get_LetterData_By_LetterID](@LetterID int,@maxSize int )

as
select LetterDataID,LastUpdate,Extention
from letterdata
where letterid=@LetterID
and pagenumber<=dbo.NumberOfPage_ByMaxSize(@letterID,@maxSize)

 

GO







CREATE procedure [dbo].[Transfer_Get_LetterFieldValue_By_LetterID](@LetterID int )
as
select * 
from LetterFieldValue 
where letterid=@LetterID



GO


CREATE procedure [dbo].[Transfer_Get_Recommites_By_LetterID](@LetterID int )
as
select Recommites.*,org.Title AS OrgTitle
from Recommites
 INNER JOIN   FromOrganizations org ON Recommites.OrgID = org.ID
where letterid=@LetterID


GO


CREATE procedure [dbo].[Transfer_Get_SentLetter]
@RelatedSecretariatID int,
@FromDate char(10)
as


declare @ToSecID int,@DestinationOrgID_inSource int


select @ToSecID=DestinationSecID,@DestinationOrgID_inSource=DestinationOrgID_inSource
from RelatedSecretariats
where  RelatedSecretariatID=@RelatedSecretariatID



SELECT     top 100 l.*
FROM       Letter l
WHERE     letterformat=1 
      and letter_type                               = 2
      and sendstatusid                              = 2
      and Registrationdate                          >= @FromDate  
      and l.ToOrgID                                  = @DestinationOrgID_inSource
and exists(select * from letterdata where letterid=l.letterid)


GO


CREATE PROCEDURE [dbo].[Transfer_insert_LetterFieldValue]
	(@LetterID 	[int],
	 @FieldID 	[int],
	 @FieldValue 	[nvarchar](2000),
	 @LastUpdate	[datetime],
         @LetterFieldValueID 	[int] output)

AS INSERT INTO[LetterFieldValue] 
	 ( 
	 [LetterID],
	 [FieldID],
	 [FieldValue],
	 LastUpdate)

VALUES
	(
	 @LetterID,
	 @FieldID,
	 @FieldValue,
	 @LastUpdate) 
set @LetterFieldValueID=@@identity





GO 

CREATE PROCEDURE [dbo].[Transfer_insert_ReCommites]
	(
	 @LetterID 	[int],
	 @ID 	[smallint],
	 @Type 	[tinyint],
	 @ParentId 	[smallint],
	 @OrgID 	[int],
	 @Paraph 	[nvarchar](500),
	 @RecommiteDate 	[varchar](10),
	 @UserID 	[tinyint],
	 @IsCopy 	[bit],
	 @Proceeded 	[bit],
	 @ProceedDate 	[varchar](10),
	 @staffmemo 	[nvarchar](255),
	 @viewdate 	[char](10),
	 @OrgStaff 	[nvarchar](50),
	 @DeadLineDate 	[char](10),
	 @LastUpdate 	[datetime],
         @RecommiteID 	 int output )

AS INSERT INTO  [ReCommites] 
	 ( 
	 [LetterID],
	 [ID],
	 [Type],
	 [ParentId],
	 [OrgID],
	 [Paraph],
	 [RecommiteDate],
	 [UserID],
	 [IsCopy],
	 [Proceeded],
	 [ProceedDate],
	 [staffmemo],
	 [viewdate],
	 [OrgStaff],
	 [DeadLineDate],
	 [LastUpdate])

VALUES 
	( 
	 @LetterID,
	 @ID,
	 @Type,
	 @ParentId,
	 @OrgID,
	 @Paraph,
	 @RecommiteDate,
	 @UserID,
	 @IsCopy,
	 @Proceeded,
	 @ProceedDate,
	 @staffmemo,
	 @viewdate,
	 @OrgStaff,
	 @DeadLineDate,
	 @LastUpdate)

set @RecommiteID=@@identity

exec Transfer_Get_LetterData_By_LetterID 5242, 1000



GO
CREATE PROCEDURE [dbo].[Transfer_Insert_SentLetter]
	(@IndicatorID 	[int],
	 @MYear 	[tinyint],
	 @SecretariatID 	[tinyint],
	 @Letter_Type 	[tinyint],
	 @letterformat 	[tinyint],
	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),
	 @CenterNo 	[nvarchar](50),
	 @CenterDate 	[char](10),
	 @FromOrgID 	[int],
	 @ToOrgID 	[int],
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @AttachTitle 	[nvarchar](50),
	 @NumberOfAttachPages 	[smallint],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint],
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @RegistrationDate 	[char](10),
	 @RegistrationTime 	[varchar](5),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @SentLetterID 	[int],
	 @TemplateID 	[int],
	 @HeaderID 	[int],
	 @LetterRecommites 	[nvarchar](500),
	 @FromStaffer 	[nvarchar](50),
	 @Finalized 	[bit],
	 @SendStatusID 	[tinyint],
@LetterID int output)

AS INSERT INTO  [Letter] 
	 ( [IndicatorID],	 [MYear],	 [SecretariatID],	 [Letter_Type],
	 [letterformat],	 [IncommingNO],	 [Incommingdate],	 [CenterNo],
	 [CenterDate],
	 [FromOrgID],
	 [ToOrgID],
	 [Signerid],
	 [ClassificationID],
	 [UrgencyID],
	 [Memo],
	 [AttachTitle],
	 [NumberOfAttachPages],
	 [NumberOfPage],
	 [ReceiveTypeID],
	 [UserID],
	 [RetroactionNo],
	 [UserMemo],
	 [RegistrationDate],
	 [RegistrationTime],
	 [FollowLetterNo],
	 [ToStaffer],
	 [SentLetterID],
	 [TemplateID],
	 [HeaderID],
	 [LetterRecommites],
	 [FromStaffer],
	 [Finalized],
	 [SendStatusID]) 

VALUES 
	( @IndicatorID,
	 @MYear,
	 @SecretariatID,
	 @Letter_Type,
	 @letterformat,
	 @IncommingNO,
	 @Incommingdate,
	 @CenterNo,
	 @CenterDate,
	 @FromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @AttachTitle,
	 @NumberOfAttachPages,
	 @NumberOfPage,
	 @ReceiveTypeID,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @SentLetterID,
	 @TemplateID,
	 @HeaderID,
	 @LetterRecommites,
	 @FromStaffer,
	 @Finalized,
	 @SendStatusID)
select @letterID=@@identity



INSERT INTO  ReCommites( LetterID, [ID], Type, ParentId, OrgID, Paraph, RecommiteDate, UserID, IsCopy, Proceeded, ProceedDate, staffmemo, 
viewdate, OrgStaff, DeadLineDate, LastUpdate, UniqueID,
ActionTypeID, DeadLineToint, IsAnswer, ISFollowup)
VALUES(@letterID,1, 3, 0, 1, '—”ÌœÂ «“ —Å·ÌòÌ ',@RegistrationDate , @UserID,0, 0, NULL,'', NULL,
 '',NULL, GETDATE(), 0, 1, 0, 0, 0)



GO 



CREATE PROCEDURE [dbo].[Transfer_Insert_SharedLetter]

	(@IndicatorID 	[int],
	 @MYear 	[tinyint],
	 @SecretariatID 	[tinyint],
	 @Letter_Type 	[tinyint],
	 @letterformat 	[tinyint],
	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),
	 @CenterNo 	[nvarchar](50),
	 @CenterDate 	[char](10),
	 @FromOrgID 	[int],
	 @ToOrgID 	[int],
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @AttachTitle 	[nvarchar](50),
	 @NumberOfAttachPages 	[smallint],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint],
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @RegistrationDate 	[char](10),
	 @RegistrationTime 	[varchar](5),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @SentLetterID 	[int],
	 @TemplateID 	[int],
	 @HeaderID 	[int],
	 @LetterRecommites 	[nvarchar](500),
	 @FromStaffer 	[nvarchar](50),
	 @Finalized 	[bit],
	 @SendStatusID 	[tinyint],
	 @LastUpdate 	datetime,
	 @UserTableID 	[int],
	 @UniqueID  bigint,
@LetterID int output)

AS INSERT INTO  [Letter] 
	 ( [IndicatorID],	 [MYear],	 [SecretariatID],	 [Letter_Type],
	 [letterformat],	 [IncommingNO],	 [Incommingdate],	 [CenterNo],
	 [CenterDate],
	 [FromOrgID],
	 [ToOrgID],
	 [Signerid],
	 [ClassificationID],
	 [UrgencyID],
	 [Memo],
	 [AttachTitle],
	 [NumberOfAttachPages],
	 [NumberOfPage],
	 [ReceiveTypeID],
	 [UserID],
	 [RetroactionNo],
	 [UserMemo],
	 [RegistrationDate],
	 [RegistrationTime],
	 [FollowLetterNo],
	 [ToStaffer],
	 [SentLetterID],
	 [TemplateID],
	 [HeaderID],
	 [LetterRecommites],
	 [FromStaffer],
	 [Finalized],
	 [SendStatusID],
	 LastUpdate 	,
	 UserTableID 	,
	 UniqueID ) 
VALUES 
	( @IndicatorID,
	 @MYear,
	 @SecretariatID,
	 @Letter_Type,
	 @letterformat,
	 @IncommingNO,
	 @Incommingdate,
	 @CenterNo,
	 @CenterDate,
	 @FromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @AttachTitle,
	 @NumberOfAttachPages,
	 @NumberOfPage,
	 @ReceiveTypeID,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @SentLetterID,
	 @TemplateID,
	 @HeaderID,
	 @LetterRecommites,
	 @FromStaffer,
	 @Finalized,
	 @SendStatusID,
	 @LastUpdate 	,
	 @UserTableID 	,
	 @UniqueID )
select @letterID=@@identity




GO 
create  procedure [dbo].[Transfer_Sent_RelatedSecs]
as


SELECT     *,dbo.get_Number_Of_Letter_RelatedSecretariatID(RelatedSecretariatID) Number_of_letters
FROM         RelatedSecretariats 




GO


CREATE  procedure [dbo].[Transfer_shared_RelatedSecs]
as

SELECT     RelatedSecretariatID, RelatedSecretariatTitle, DestinationOrgID_inSource, RelationType, SourceSecID, 
                      ServerIP, DbName, DestinationSecID
FROM         RelatedSecretariats INNER JOIN
                      Server ON RelatedSecretariats.DestinationServerID = Server.ServerID
WHERE     RelationType in ( 2, 3)




GO 






CREATE  PROCEDURE [dbo].[Trunsfer_update_Letter]
	(@LetterID 	[int],
	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),
	 @CenterNo 	[nvarchar](50),
	 @CenterDate 	[char](10),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @AttachTitle 	[nvarchar](50),
	 @NumberOfAttachPages 	[smallint],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @LetterRecommites 	[nvarchar](500),
	 @FromStaffer 	[nvarchar](50),
	 @Finalized 	[bit],
	 @UserTableID 	[int],
	 @LastUpdate	[datetime])

AS UPDATE  [Letter] 

SET      [IncommingNO]	 = @IncommingNO,
	 [Incommingdate]	 = @Incommingdate,
	 [CenterNo]	 = @CenterNo,
	 [CenterDate]	 = @CenterDate,
	 [ClassificationID]	 = @ClassificationID,
	 [UrgencyID]	 = @UrgencyID,
	 [Memo]	 = @Memo,
	 [AttachTitle]	 = @AttachTitle,
	 [NumberOfAttachPages]	 = @NumberOfAttachPages,
	 [NumberOfPage]	 = @NumberOfPage,
	 [ReceiveTypeID]	 = @ReceiveTypeID,
	 [RetroactionNo]	 = @RetroactionNo,
	 [UserMemo]	 = @UserMemo,
	 [FollowLetterNo]	 = @FollowLetterNo,
	 [ToStaffer]	 = @ToStaffer,
	 [LetterRecommites]	 = @LetterRecommites,
	 [FromStaffer]	 = @FromStaffer,
	 [Finalized]	 = @Finalized,
	 [LastUpdate]	 = @LastUpdate,
	 [UserTableID]	 = @UserTableID


WHERE 
	( [LetterID]	 = @LetterID)




GO 



CREATE  PROCEDURE [dbo].[Trunsfer_update_LetterFieldValue]
	(@LetterFieldValueID 	[int],
	 @FieldValue 	[nvarchar](2000),
	 @LastUpdate	[datetime])

AS UPDATE  [LetterFieldValue] 

SET  [FieldValue]	 = @FieldValue,
	 [LastUpdate]	 = @LastUpdate

WHERE 
	( [LetterFieldValueID]	 = @LetterFieldValueID)




GO 


CREATE  PROCEDURE [dbo].[Trunsfer_update_ReCommites]
	(@RecommiteID 	[int],
	 @Paraph 	[nvarchar](500),
	 @IsCopy 	[bit],
	 @Proceeded 	[bit],
	 @ProceedDate 	[varchar](10),
	 @DeadLineDate 	[char](10),
	 @LastUpdate	[datetime])

AS UPDATE  [ReCommites] 

SET 	 [Paraph]	 = @Paraph,
	 [IsCopy]	 = @IsCopy,
	 [Proceeded]	 = @Proceeded,
	 [ProceedDate]	 = @ProceedDate,
	 [DeadLineDate]	 = @DeadLineDate ,
	 [LastUpdate]	 = @LastUpdate
WHERE 
	( [RecommiteID]	 = @RecommiteID)




GO 



CREATE PROCEDURE [dbo].[Update_all_recommites] AS
declare @i int
set @i=1
update letter
set letterRecommites=FromOrganizations.Title+'  '+recommitedate
from letter inner join recommites on recommites.letterid=letter.letterid
inner join fromorganizations on fromorganizations.id=recommites.orgid
where recommites.id=1 and type=3


while @i<16
 begin
set @i=@i+1
update letter
set letterRecommites=letterRecommites+','+FromOrganizations.Title+'  '+recommitedate
from letter inner join recommites on recommites.letterid=letter.letterid
inner join fromorganizations on fromorganizations.id=recommites.orgid
where recommites.id=@i  and type=3


update letter
set letterRecommites=letterRecommites+','+FromOrganizations.Title+'  '+recommitedate
from letter inner join recommites on recommites.letterid=letter.letterid
inner join fromorganizations on fromorganizations.id=recommites.orgid
where recommites.id=@i-1 and type=2

update letter
set letterRecommites=letterRecommites+','+FromOrganizations.Title+'  '+recommitedate
from letter inner join recommites on recommites.letterid=letter.letterid
inner join fromorganizations on fromorganizations.id=recommites.orgid
where recommites.id=@i-1 and type=1
end








GO 
CREATE Procedure [dbo].[Update_Archived_letter]
@Letterid int,@archived bit
as

UPDATE    Letter
SET        archived = @archived  
WHERE     (LetterID = @LetterID)




GO






CREATE PROCEDURE [dbo].[update_ArchiveFolder]
	(@FolderID 	[int],
	 @Title 	[nvarchar](100),
	 @Notes 	[nvarchar](500),
 @Place nvarchar(100))

AS UPDATE [dbo].[ArchiveFolder] 

SET  [Title]	 = @Title,
	 [Notes]	 = @Notes,
 Place=@Place

WHERE 
	( [FolderID]	 = @FolderID)




GO 







CREATE procedure [dbo].[update_FromOrganizations_Title](@ID INT, @Newtitle nVARCHAR(200),@NewResponsibleStaffer nvarchar(100),@newID int 
output)
as
insert into FromOrganizations(Title, ParentID, Phone, Fax, Email, ResponsibleStaffer, IsActive, PreCode, IsInnerOrg, Code)
select @Newtitle, ParentID, Phone, Fax, Email, @NewResponsibleStaffer, IsActive, PreCode, IsInnerOrg, Code
from FromOrganizations
where ID=@ID

set @newID=@@identity

Update FromOrganizations
set Isactive=0,Code='_'+Code
where ID=@ID



Update FromOrganizations
set ParentId=@newID
where ParentId=@ID




GO 




CREATE PROCEDURE [dbo].[update_Letter_Finalized]
	(@LetterID 	[int],
	 @Finalized 	[bit])

AS 
UPDATE .[dbo].[Letter]  
SET  [Finalized]	 = @Finalized  
WHERE  ( [LetterID]	 = @LetterID)

 

GO 










CREATE PROCEDURE [dbo].[update_Letter_Indicator]
	(@LetterID 	[int],
	 @NewIndicatorID 	[int],
	 @NewSecretariatID 	[tinyint],
	 @NewLetter_Type 	[tinyint],
	 @Newletterformat 	[tinyint],
	 @NewRegistrationDate 	[char](10),@Updated bit output)

AS
declare @myear int
select @myear=myear
from letter 
where ( [LetterID]	 = @LetterID)


set @updated=1


if not exists (SELECT   *  
FROM         Letter
WHERE     (IndicatorID = @NewIndicatorID) AND (MYear = @myear) AND (SecretariatID = @NewSecretariatID) AND (Letter_Type = @NewLetter_Type) 
AND (letterformat = @Newletterformat))
 UPDATE [dbo].[Letter] 

SET  [IndicatorID]	 = @NewIndicatorID,
	 [SecretariatID]	 = @NewSecretariatID,
	 [Letter_Type]	 = @NewLetter_Type,
	 [letterformat]	 = @Newletterformat,
	 [RegistrationDate]	 = @NewRegistrationDate 

WHERE 
	( [LetterID]	 = @LetterID)
else 
set @updated=0







GO


create proc [dbo].[update_letter_sendstatusID]( @LetterID int ,@SendStatusID tinyint)
as
UPDATE    Letter
SET              SendStatusID = @SendStatusID
WHERE     (LetterID = @LetterID)



GO








create PROCEDURE [dbo].[update_LetterText]
	(@LetterID  	int,
	 @TypeText   	[nvarchar](4000))

AS UPDATE [dbo].[LetterText] 

SET 	 [TypeText]	 = @TypeText 

WHERE 
	( LetterID = @LetterID  )


GO
Create Procedure [dbo].[Update_ParaphTemplate]
@ParaphTemplateID int,@Title nvarchar(50) ,@Paraph nvarchar(500)
as

UPDATE  ParaphTemplate
   SET [Title] = @Title
      ,[Paraph] = @Paraph
 WHERE ParaphTemplateID=@ParaphTemplateID

GO




CREATE PROCEDURE [dbo].[update_ReCommites_proceed]
	(@RecommiteID int,
	 @Proceeded 	[bit],
	 @ProceedDate 	[nvarchar](10),
 @actionTypeID tinyint)

AS UPDATE [dbo].[ReCommites] 


SET  [Proceeded]	 = @Proceeded,
	 [ProceedDate]	 = @ProceedDate ,
      actionTypeID=@actionTypeID

WHERE 
	( RecommiteID	 = @RecommiteID)




GO

CREATE PROCEDURE [dbo].[update_ReCommites_viewDate]
	(@RecommiteID int,
	 @ViewDate 	[char](10))

AS UPDATE [dbo].[ReCommites] 

SET  	 ViewDate=@ViewDate


WHERE 
	( RecommiteID	 = @RecommiteID)






GO



CREATE PROCEDURE [dbo].[update_UserLoginLogout]
	( @UserLoginLogoutID	[int],
	 @isSafeLogout 	[bit])

AS
 UPDATE [dbo].[UserLoginLogout] 

SET          [LogoutTime]	 = getdate(),
	 [isSafeLogout]	 = @isSafeLogout 

WHERE 	( [UserLoginLogoutID]	 = @UserLoginLogoutID)








GO



CREATE PROCEDURE [dbo].[UserChange_pass] (@userID int,@newPass nvarchar(100) )
AS

 
update users
set password=@newPass
where id=@userid 



GO



CREATE PROCEDURE [dbo].[UserLog_Report] 
AS
SELECT     Users.Title AS usertitle, Actions.Title AS actiontitle, UserLog.Time1 AS Time, Letter.IndicatorID, LetterTypes.Title AS Letter_type
FROM         UserLog INNER JOIN
                      Users ON UserLog.UserID = Users.Id INNER JOIN
                      Actions ON UserLog.ActionID = Actions.ID LEFT OUTER JOIN
                      Letter ON UserLog.LetterID = Letter.LetterID LEFT OUTER JOIN
                      LetterTypes ON Letter.Letter_Type = LetterTypes.ID
ORDER BY LetterTypes.Title





GO

CREATE Procedure [dbo].[Web_Access](@userid int,@Result varchar(100) output)
as
set @result=''
SELECT    @result=@result+case when hasaccess=1 then
case ActionID
when 'ReceiveInsert' then 'Incomming'
when 'SendInsert'  then 'Outgoing'
when 'ADarftIns' then 'Draft'
when 'AinnerLetter' then 'Inner'
when 'adeleteScan' then 'Drop_Attach'
end+';'
else '' end
FROM         ActionsAccess INNER JOIN
                      Users ON ActionsAccess.AccessID = Users.AccessID
WHERE     (Users.Id = @userid) AND ActionsAccess.ActionID IN ('ReceiveInsert','SendInsert' 
, 'AinnerLetter','adeleteScan','ADarftIns')

 
GO


CREATE PROCEDURE [dbo].[web_ArchiveRecommite]
	(@RecommiteID 	[int],
	 @ArchiveFolderID 	[int],
	 @ArchiveDate 	[char](10),
	 @Page 	[int],
	 @ArchiveNotes 	[nvarchar](50),
	 @StaffMemo 	[nvarchar](255),
	 @LetterArchiveID 	[int] output)

AS

INSERT INTO [dbo].[LetterArchiveFolder]
	 (
	 [ArchiveFolderID],
	 [LetterID],
	 [ArchiveDate],
	 [Page],
	 [ArchiveNotes])

VALUES
	(
	 @ArchiveFolderID,
	 @RecommiteId,
	 @ArchiveDate,
	 @Page,
	 @ArchiveNotes)

Update Recommites Set Proceeded=1, staffMemo=@StaffMemo where RecommiteId=@RecommiteId

set @LetterArchiveID=@@identity









GO

CREATE proc [dbo].[web_Get_Letter_by_LetterID]
(@LetterID int )
as
SELECT     Letter.*,Html
FROM       Letter
left JOIN  lettertext ON lettertext.LetterID = Letter.LetterID
WHERE     (Letter.LetterID = @LetterID)










GO




Create proc [dbo].[web_Get_LetterData_by_LetterDataID]
(@LetterDataID int )
as
SELECT     LetterData.*, Extention.ExtentionTitle, Extention.Extention
FROM       LetterData 
left JOIN  Extention ON LetterData.extention = Extention.ExtentionID
WHERE     (LetterDataID = @LetterDataID)








GO

CREATE PROCEDURE [dbo].[web_GetLetterArchiveHistory]
(
	@letterId int,
	@userId int
)
AS

SELECT     dbo.LetterArchiveFolder.ArchiveDate, dbo.ArchiveFolder.*
FROM         dbo.ArchiveFolder INNER JOIN
                      dbo.LetterArchiveFolder ON dbo.ArchiveFolder.FolderID = dbo.LetterArchiveFolder.ArchiveFolderID
Where LetterId = @letterId and ArchiveFolder.UserId=@userId


GO

create Procedure [dbo].[web_GetLetterAttachment]
@letterID int 
as

SELECT     LetterData.*, Extention.ExtentionTitle, Extention.Extention
FROM       LetterData 
left JOIN  Extention ON LetterData.extention = Extention.ExtentionID
WHERE LetterID=@LetterID







GO
CREATE PROCEDURE [dbo].[web_GetRecommiteById]
(@recommiteId int )
AS

SELECT R.*,f.title+' - '+r.OrgStaff RecommiterTitle,IsInnerOrg

FROM ReCommites R  

inner join FromOrganizations f on f.ID=r.OrgID

Where r.RecommiteId=@recommiteId


GO
CREATE PROCEDURE [dbo].[web_insert_AnswerLetter]
	(
     @LetterID 	[int] output,
     @Indicator 	[int] output,
     @RecommiteId [int] output,
	 @ToOrgTitle 	nvarchar(100),
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @fromstaffer 	[nvarchar](50),
	 @LetterFromOrgID int,
     @receivedLetterID int )

AS 
declare @ToOrgID int,@IndicatorID int ,@FromOrgID 	int,  @MYear tinyint,@SecretariatID tinyint,
        @RegistrationDate 	[char](10),	@RegistrationTime 	[varchar](5)


if not exists (select * from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ',''))
insert into Fromorganizations(Title,parentid,isinnerorg) values(@toorgtitle,3,0)

select top 1 @ToOrgID=Id from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ','')

select @RegistrationTime=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))

set @RegistrationDate=dbo.shamsi(getdate())

set @myear=cast (substring(@RegistrationDate,3,2) as tinyint)

SELECT     @SecretariatID=DefualtSecretariatID, @FromOrgID=FromOrgID
FROM         Users
where id=@userid

set @IndicatorID=dbo.newIndicatorid(2,2,@myear,@SecretariatID)

INSERT INTO [Letter] 
	 ( [IndicatorID],
	 [MYear],
	 [SecretariatID],
	 [Letter_Type],
	 [letterformat],
	 [FromOrgID],
	 [ToOrgID],
	 [Signerid],
	 [ClassificationID],
	 [UrgencyID],
	 [Memo],
	 [UserID],
	 [RetroactionNo],
	 [UserMemo],
	 [RegistrationDate],
	 [RegistrationTime],
	 [FollowLetterNo],
	 [ToStaffer],
	 [fromstaffer],
	 [Finalized]) 
 
VALUES 
	( 
	 @IndicatorID,
	 @MYear,
	 @SecretariatID,
	 2,--Letter_Type
	 2,--letterformat
	 @LetterFromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @fromstaffer,
	 0 --Finalized
       )

select @letterid=max(letterid) from letter
select @Indicator = @IndicatorId

exec web_insert_NewReCommite @LetterID,3,0,@FromOrgID,'À»  ÅÌ‘ ‰ÊÌ” ÃÊ«» ‰«„Â',@registrationdate,@UserID,0,0,@RecommiteId output
update letter
set SentLetterID=@letterid
where letterid=@receivedLetterID



GO 

CREATE PROCEDURE [dbo].[web_insert_DraftLetter]
	(@Indicator 	[int] output,
	 @LetterId int output,
	 @RecommiteId int output,
	 @ToOrgTitle 	nvarchar(100),
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @fromstaffer 	[nvarchar](50))

AS 
declare @ToOrgID int,@IndicatorID int ,@FromOrgID 	int,  @MYear tinyint,@SecretariatID tinyint,
        @RegistrationDate 	[char](10),	@RegistrationTime 	[varchar](5)


if not exists (select * from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ',''))
insert into Fromorganizations(Title,parentid,isinnerorg) values(@toorgtitle,3,0)

select top 1 @ToOrgID=Id from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ','')

select @RegistrationTime=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))

set @RegistrationDate=dbo.shamsi(getdate())

set @myear=cast (substring(@RegistrationDate,3,2) as tinyint)

SELECT     @SecretariatID=DefualtSecretariatID, @FromOrgID=FromOrgID
FROM         Users
where id=@userid

set @IndicatorID=dbo.newIndicatorid(2,2,@myear,@SecretariatID)

INSERT INTO [Letter] 
	 ( [IndicatorID],
	 [MYear],
	 [SecretariatID],
	 [Letter_Type],
	 [letterformat],
	 [FromOrgID],
	 [ToOrgID],
	 [Signerid],
	 [ClassificationID],
	 [UrgencyID],
	 [Memo],
	 [UserID],
	 [RetroactionNo],
	 [UserMemo],
	 [RegistrationDate],
	 [RegistrationTime],
	 [FollowLetterNo],
	 [ToStaffer],
	 [fromstaffer],
	 [Finalized]) 
 
VALUES 
	( 
	 @IndicatorID,
	 @MYear,
	 @SecretariatID,
	 2,--Letter_Type
	 2,--letterformat
	 @FromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @fromstaffer,
	 0 --Finalized
       )

select @letterid=max(letterid) from letter
select @Indicator = @IndicatorID

exec web_insert_NewReCommite @LetterID,3,0,@FromOrgID,'À»  ‰«„Â ÅÌ‘ ‰ÊÌ”',@registrationdate,@UserID,0,0,@RecommiteId output
							 
select @RecommiteId


GO 



CREATE PROCEDURE [dbo].[web_insert_innerLetter]
	(@LetterID 	[int] output,
	 @Memo 	ntext,
	 @UserID 	[int],
	 @UserMemo 	[nvarchar](255),
@html ntext)

AS 
declare @IndicatorID int ,@FromOrgID 	int,  @MYear tinyint,@SecretariatID tinyint,
        @RegistrationDate 	[char](10),	@RegistrationTime 	[varchar](5)



select @RegistrationTime=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))

set @RegistrationDate=dbo.shamsi(getdate())

set @myear=cast (substring(@RegistrationDate,3,2) as tinyint)

SELECT     @SecretariatID=DefualtSecretariatID, @FromOrgID=FromOrgID
FROM         Users
where id=@userid

set @IndicatorID=dbo.newIndicatorid(3,1,@myear,@SecretariatID)

INSERT INTO [Letter] 
	 ( [IndicatorID],
	 [MYear],
	 [SecretariatID],
	 [Letter_Type],
	 [letterformat],
	 [FromOrgID],
	 [ToOrgID],
	 [Memo],
	 [UserID],
	 [UserMemo],
	 [RegistrationDate],
	 [RegistrationTime],
	 [Finalized]) 
 
VALUES 
	( 
	 @IndicatorID,
	 @MYear,
	 @SecretariatID,
	 3,--Letter_Type
	 1,--letterformat
	 @FromOrgID,
	 3,--@ToOrgID,
	 @Memo,
	 @UserID,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 1 --Finalized
       )

select @letterid=max(letterid) from letter

declare @recommiteId int
exec web_insert_NewReCommite @LetterID,3,0,@FromOrgID,'‰«„Â œ«Œ·Ì',@registrationdate,@UserID,0,0,@recommiteId output


insert into Lettertext values(@letterid,1,'',@html)


GO 

create PROCEDURE [dbo].[web_Insert_LetterData]
	(@LetterDataID 	[int] output,
	 @LetterID 	[int],
	 @PageNumber 	[tinyint],
	 @extention 	[tinyint],
	 @description [nvarchar](200)='',
	 @image [image] = null)

AS INSERT INTO [dbo].[LetterData] 
	 (  [LetterID],
	 [PageNumber],
	 [extention],
	 [image],
	 [description]) 
 
VALUES 
	( @LetterID,
	 @PageNumber,
	 @extention,
	 @image,
	 @description)

set  @LetterDataID=@@identity





GO 
CREATE PROCEDURE [dbo].[web_insert_NewReCommite]
	(@LetterID 	[int],
	 @Type 	[tinyint],
	 @ParentId 	[smallint],
	 @OrgID 	[int],
	 @Paraph 	[nvarchar](500),
	 @RecommiteDate 	[varchar](10),
	 @UserID 	[tinyint],
	 @IsCopy 	[bit],
	 @Proceeded 	[bit],
	 @RecommiteId [int] output)
AS
declare @OrgStaff nvarchar(50),@NewID int

select top 1 @OrgStaff=ResponsibleStaffer       

from dbo.FromOrganizations 

WHERE             id         = @OrgID
SELECT     @NewID=ISNULL(MAX(ID), 0) + 1   FROM ReCommites WHERE LetterID=@letterID and type=@type
INSERT INTO [dbo].[ReCommites] 
             (
             [LetterID],
             [ID],
             [Type],
             [ParentId],
             [OrgID],
             [Paraph],
             [RecommiteDate],
             [UserID],
             [IsCopy],
             [Proceeded],
			 OrgStaff) 
VALUES
            ( 
             @LetterID,
             @NewID,
             @Type,
             @ParentId,
             @OrgID,
             @Paraph,
             @RecommiteDate,
             @UserID,
             @IsCopy,
             @Proceeded,
			 @OrgStaff )

select @RecommiteId = @@identity



GO 


CREATE PROCEDURE [dbo].[web_insert_ReceivedLetter]
	(@Indicator 	[int] output,
	 @LetterID 	[int] output,
	 @RecommiteId int output,
	 @ToOrgTitle 	nvarchar(100),
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @fromstaffer 	[nvarchar](50),
	 @IncommingNO 	[nvarchar](50),
	 @Incommingdate 	[nvarchar](10),
	 @CenterNo 	[nvarchar](50),
	 @CenterDate 	[char](10),
	 @FromOrgID 	[int],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint])
AS 
declare @ToOrgID int,@IndicatorID int ,@UserFromOrgID 	int,  @MYear tinyint,@SecretariatID tinyint,
        @RegistrationDate 	[char](10),	@RegistrationTime 	[varchar](5)


if not exists (select * from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ',''))
insert into Fromorganizations(Title,parentid,isinnerorg) values(@toorgtitle,3,0)

select top 1 @ToOrgID=Id from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ','')

select @RegistrationTime=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))

set @RegistrationDate=dbo.shamsi(getdate())

set @myear=cast (substring(@RegistrationDate,3,2) as tinyint)

SELECT     @SecretariatID=DefualtSecretariatID, @UserFromOrgID=FromOrgID
FROM         Users
where id=@userid

set @IndicatorID=dbo.newIndicatorid(1,1,@myear,@SecretariatID)

INSERT INTO [Letter] 
	 ( [IndicatorID],	 [MYear],	 [SecretariatID],	 [Letter_Type],	 [letterformat],	 [FromOrgID],	 [ToOrgID],
	 [Signerid],	 [ClassificationID],	 [UrgencyID],	 [Memo],	 [UserID],	 [RetroactionNo],	 [UserMemo],
	 [RegistrationDate],	 [RegistrationTime],	 [FollowLetterNo],	 [ToStaffer],	 [fromstaffer],	 [Finalized],IncommingNO ,
     Incommingdate,CenterNo,CenterDate,NumberOfPage ,ReceiveTypeID) 
 
VALUES 
	( 
	 @IndicatorID,	 @MYear,	 @SecretariatID,
	 1,--Letter_Type
	 1,--letterformat
	 @FromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @fromstaffer,
	 1, --Finalized
      @IncommingNO , @Incommingdate,@CenterNo,@CenterDate ,@NumberOfPage ,@ReceiveTypeID)

select @letterid=max(letterid) from letter

exec web_insert_NewReCommite @LetterID,3,0,@FromOrgID,'À»  ‰«„Â',@registrationdate,@UserID,0,0,@RecommiteId output

select @Indicator = @IndicatorID

select @RecommiteId




GO 


CREATE PROCEDURE [dbo].[web_insert_sentLetter]
	(@Indicator 	[int] output,
	 @LetterID 	[int] output,
	 @RecommiteId int output,
	 @ToOrgTitle 	nvarchar(100),
	 @Signerid 	[nvarchar](50),
	 @ClassificationID 	[tinyint],
	 @UrgencyID 	[smallint],
	 @Memo 	[nvarchar](500),
	 @UserID 	[int],
	 @RetroactionNo 	[nvarchar](50),
	 @UserMemo 	[nvarchar](255),
	 @FollowLetterNo 	[nvarchar](50),
	 @ToStaffer 	[nvarchar](50),
	 @fromstaffer 	[nvarchar](50),
	 @FromOrgID 	[int],
	 @NumberOfPage 	[tinyint],
	 @ReceiveTypeID 	[tinyint])
AS 
declare @ToOrgID int,@IndicatorID int ,@UserFromOrgID 	int,  @MYear tinyint,@SecretariatID tinyint,
        @RegistrationDate 	[char](10),	@RegistrationTime 	[varchar](5)


if not exists (select * from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ',''))
insert into Fromorganizations(Title,parentid,isinnerorg) values(@toorgtitle,3,0)

select top 1 @ToOrgID=Id from fromorganizations where replace(title,' ','')=replace(@toorgtitle,' ','')

select @RegistrationTime=case when datepart(hour,getdate())<10 then '0'+convert(char(1),datepart(hour,getdate()))
   else convert(char(2),datepart(hour,getdate())) end +':' + convert(char(2),datepart(minute,getdate()))

set @RegistrationDate=dbo.shamsi(getdate())

set @myear=cast (substring(@RegistrationDate,3,2) as tinyint)

SELECT     @SecretariatID=DefualtSecretariatID, @UserFromOrgID=FromOrgID
FROM         Users
where id=@userid

set @IndicatorID=dbo.newIndicatorid(2,1,@myear,@SecretariatID)

INSERT INTO [Letter] 
	 ( [IndicatorID],	 [MYear],	 [SecretariatID],	 [Letter_Type],	 [letterformat],	 [FromOrgID],	 [ToOrgID],
	 [Signerid],	 [ClassificationID],	 [UrgencyID],	 [Memo],	 [UserID],	 [RetroactionNo],	 [UserMemo],
	 [RegistrationDate],	 [RegistrationTime],	 [FollowLetterNo],	 [ToStaffer],	 [fromstaffer],	 [Finalized],
	 NumberOfPage ,ReceiveTypeID)
 
VALUES 
	( 
	 @IndicatorID,	 @MYear,	 @SecretariatID,
	 2,--Letter_Type
	 1,--letterformat
	 @FromOrgID,
	 @ToOrgID,
	 @Signerid,
	 @ClassificationID,
	 @UrgencyID,
	 @Memo,
	 @UserID,
	 @RetroactionNo,
	 @UserMemo,
	 @RegistrationDate,
	 @RegistrationTime,
	 @FollowLetterNo,
	 @ToStaffer,
	 @fromstaffer,
	 1, --Finalized
     @NumberOfPage ,@ReceiveTypeID)

select @letterid=max(letterid) from letter

exec web_insert_NewReCommite @LetterID,3,0,@FromOrgID,'À»  ‰«„Â',@registrationdate,@UserID,0,0,@RecommiteId output

select @Indicator = @IndicatorID

select @RecommiteId




GO 

CREATE PROCEDURE [dbo].[web_ProceedRecommite]
	
	(
		@recommiteId int
	)

AS
	Update Recommites Set Proceeded=1 where recommiteId=@recommiteId 
	/* SET NOCOUNT ON */



GO 

CREATE PROCEDURE [dbo].[web_Select_LetterReCommite]


(@letterID 	[int],@type tinyint)  AS 

SELECT R.*,f.title+' - '+isnull(r.OrgStaff,'') Recommitertitle,IsInnerOrg 

FROM ReCommites R  

inner join FromOrganizations f on f.ID=r.OrgID 

where Letterid=@letterID and type=@type







GO 


create procedure [dbo].[ysp_Backup](@dbname nvarchar(50),@path nvarchar(255))
 as
Exec('backup database '+@dbname+' to disk='''+@path+'''')









GO 


create proc [dbo].[Ysp_create_Temp_Database](@Path nvarchar(255))
as
declare @sql nvarchar(1000)
set @sql=
'CREATE DATABASE [yeganeh_tmp_db]  ON PRIMARY (NAME = N''yeganeh_tmp_db_Data'', FILENAME = N'''+@Path+'yeganeh_tmp_db_Data.MDF'' ,
 SIZE = 10, FILEGROWTH = 10%)
 LOG ON (NAME = N''yeganeh_tmp_db_Log'', FILENAME = N'''+@Path+'yeganeh_tmp_db_Log.LDF'' , SIZE = 10, FILEGROWTH = 10%)'

exec master..sp_executesql  @sql




GO 

CREATE PROCEDURE [dbo].[ysp_DELETE_Temp_Database]
AS
if exists (SELECT name
FROM master.dbo.sysdatabases
WHERE name = 'yeganeh_tmp_db')
drop database [yeganeh_tmp_db]




GO 

CREATE PROCEDURE [dbo].[ysp_exists_Temp_Database](@exists bit output)
AS
if exists (SELECT name
FROM master.dbo.sysdatabases
WHERE name = 'yeganeh_tmp_db')
  set @exists=1  else set @exists=0


GO 
CREATE procedure [dbo].[ysp_shrink](@dbname nvarchar(50),@path nvarchar(255))
 as
Exec('backup log '+@dbname+' with truncate_only')

  dbcc shrinkfile(1,1)
 dbcc shrinkfile(2,1)
GO


create procedure GetRecommiter
@Recommiteid int ,@orgid int out
as
select @orgid=prc.orgid
from recommites rc,recommites prc
where rc.letterid=prc.letterid and prc.id=rc.parentid and rc.recommiteid=@Recommiteid
set @orgid=isnull(@orgid,0)
GO



Create PROCEDURE [dbo].[Get_ArchiveFolder_ByAccess] @userID int , @SecID int
AS
declare  @ArchiveCenterID int

SELECT @ArchiveCenterID=[ArchiveCenterID]
  FROM  Secretariats
where  SecID=@SecID


SELECT AF.*
FROM ArchiveFolder AF
Inner Join UserAccArchive UAA On UAA.ArchiveFolderID = AF.FolderID
Where(UAA.SecID = @SecID)
And(UAA.UserID = @userID)
And(AF.ArchiveCenterID = @ArchiveCenterID)
And(UAA.IsAccess = 1)
GO


Create PROCEDURE [dbo].[Get_ArchiveFolder_ByAccessAndTitle] @userID int , @SecID int ,@ArchiveCenterID int
,  @like nvarchar(100)
AS

if @ArchiveCenterID<0

SELECT AF.*
FROM ArchiveFolder AF
Where UserID = @userID
And(  Title like '%'+@like+'%' or AF.place like  '%'+@like+'%' )

else

SELECT AF.*
FROM ArchiveFolder AF
Inner Join UserAccArchive UAA On UAA.ArchiveFolderID = AF.FolderID
Where(UAA.SecID = @SecID)
And(UAA.UserID = @userID)
And(AF.ArchiveCenterID = @ArchiveCenterID)
And(UAA.IsAccess = 1)
And( AF.Title like '%'+@like+'%' or AF.place like  '%'+@like+'%' )

GO




Create PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Letterid]
@Letterid int,@userid int,@ArchiveCenterID int
AS

if @ArchiveCenterID<0
SELECT     LetterArchiveFolder.*, ArchiveFolder.Title, ArchiveFolder.Place,users.Title usertitle
FROM         LetterArchiveFolder
INNER JOIN   ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
left join users on users.id=LetterArchiveFolder.userID
WHERE     (LetterArchiveFolder.LetterID = @Letterid) and archivefolder.userid=@userid

else
SELECT     LetterArchiveFolder.*, ArchiveFolder.Title, ArchiveFolder.Place,users.Title usertitle
FROM         LetterArchiveFolder
INNER JOIN   ArchiveFolder ON LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID
left join users on users.id=LetterArchiveFolder.userID
WHERE     (LetterArchiveFolder.LetterID = @Letterid) and archivefolder.ArchiveCenterID=@ArchiveCenterID





GO




Create  PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Place]
@userID int,@Place nvarchar(100),@FolderID int output,@ArchiveCenterID int
AS
if @ArchiveCenterID<0
SELECT      top 1 @FolderID=FolderID
FROM         ArchiveFolder
WHERE     (UserID = @userID)  and (Place=@Place)
else
SELECT      top 1 @FolderID=FolderID
FROM         ArchiveFolder
WHERE     (ArchiveCenterID=@ArchiveCenterID)  and (Place=@Place)



GO


Create  PROCEDURE [dbo].[get_ArchiveFolder_byUserID_and_Title]
@userID int,@like nvarchar(100),@ArchiveCenterID int
AS
if @ArchiveCenterID<0
SELECT      *
FROM         ArchiveFolder
WHERE     (UserID = @userID)  and ( title like '%'+@like+'%' or place like  '%'+@like+'%' )

else

SELECT      *
FROM         ArchiveFolder
WHERE     (ArchiveCenterID = @ArchiveCenterID)  and ( title like '%'+@like+'%' or place like  '%'+@like+'%' )


GO

Create Procedure [dbo].[Sp_Sel_UserAccArchive] @SecID int , @userID int
As

Select *
From UserAccArchive
Where(SecID = @SecID)
And(UserID = @userID)

GO
Create procedure [dbo].[GetfieldValueByLetterID]
@letterId int,@FormOrder tinyint
as
SELECT Description,
case when ReferenceTableID is null or FieldValue is null then FieldValue
else
(select DataTitle From ReferenceTableData where tableid=ReferenceTableID and DataID=FieldValue)
end  FieldValue
  FROM  LetterFieldValue
  inner join Fields f on f.ID=LetterFieldValue.FieldID
  where letterid=@letterid and [FormOrder]=@FormOrder


  go
Create PROCEDURE [dbo].[insert_ArchiveFolder]
	(@FolderID 	[int] output,
	 @ParentFolderID 	[int],
	 @Title 	[nvarchar](100),
	 @ArchiveCenterID int=-1,
	 @UserID 	[int],
	 @Notes 	[nvarchar](500),
              @Place nvarchar(100))

AS INSERT INTO [dbo].[ArchiveFolder]
	 (
	 [ParentFolderID],
	 [Title],
	 [UserID],
	 [Notes],
	 ArchiveCenterID ,
                Place)

VALUES
	(
	 @ParentFolderID,
	 @Title,
	 @UserID,
	 @Notes,
	 @ArchiveCenterID
	 ,
@Place )

select @folderid= @@identity




GO


Create PROCEDURE [dbo].[get_ArchiveFolder_byUserID]
@userID int,@SecID int =0,@ArchiveCenterID int = -1
AS
if @ArchiveCenterID<0
SELECT      *
FROM         ArchiveFolder
WHERE     (UserID = @userID)
else
SELECT AF.*
FROM ArchiveFolder AF
Inner Join UserAccArchive UAA On UAA.ArchiveFolderID = AF.FolderID
Where(UAA.SecID = @SecID)
And(UAA.UserID = @userID)
And(AF.ArchiveCenterID = @ArchiveCenterID)
And(UAA.IsAccess = 1)



GO

Create procedure GetExtentionIDByName
@Extention varchar(10),@ExtentionID int output
as
IF NOT EXISTS(SELECT * FROM Extention where Extention=@Extention)
INSERT INTO Extention ([ExtentionTitle] ,[Extention] ,[IsSystem]) 
VALUES ( @Extention,@Extention,0)


SELECT  @ExtentionID=ExtentionID
 FROM Extention
where Extention=@Extention


GO

Create PROCEDURE [dbo].[Insert_OtherRecievers]
	(@LetterID 	[int],
	 @ID 	[smallint],
	 @Type 	[tinyint],
	 @ParentId 	[smallint],
	 @OrgID 	[int],
	 @Paraph 	[nvarchar](500),
	 @RecommiteDate 	[varchar](10),
	 @UserID 	[tinyint],
	 @IsCopy 	[bit],
	 @Proceeded 	[bit],
@RecommiteID int output)

AS

declare @OrgStaff nvarchar(50)
select top 1 @OrgStaff=ResponsibleStaffer	
from dbo.FromOrganizations 
WHERE 	id	 = @OrgID

 INSERT INTO [dbo].[ReCommites]
	 (
	 [LetterID],
	 [ID],
	 [Type],
	 [ParentId],
	 [OrgID],
	 [Paraph],
	 [RecommiteDate],
	 [UserID],
	 [IsCopy],
	 [Proceeded],
OrgStaff,finallized) 
 
VALUES 
	( 
	 @LetterID,
	 @ID,
	 @Type,
	 @ParentId,
	 @OrgID,
	 @Paraph,
	 @RecommiteDate,
	 @UserID,
	 @IsCopy,
	 @Proceeded,
@OrgStaff,0 )

set @RecommiteID=@@identity
GO
 
 

CREATE PROCEDURE [dbo].[SetSystemSetting]
@VariableName varchar(50),@Value nvarchar(255)
AS
exec SetUserSetting -1 ,@VariableName ,@Value





GO 

CREATE PROCEDURE [dbo].[SetUserSetting]
@UserID  int ,@VariableName varchar(50),@Value nvarchar(255)
AS
if not exists(select * from Settings WHERE (UserID = @UserID) AND (VariableName = @VariableName))
insert into Settings(UserID,VariableName,Value) values(@UserID,@VariableName,@Value)
Update Settings 
set Value=@Value
WHERE     (UserID = @UserID) AND (VariableName = @VariableName)
 
GO
 

CREATE PROCEDURE [dbo].[GetSystemSetting]
@VariableName varchar(50),@Value nvarchar(255)  output
AS
 exec GetUserSetting -1,@VariableName,@value output


GO 

CREATE PROCEDURE [dbo].[GetUserSetting]
@UserID  int ,@VariableName varchar(50),@Value nvarchar(255) output
AS
SELECT     @Value=Value
FROM         Settings
WHERE     (UserID = @UserID) AND (VariableName = @VariableName)

set @Value=isnull(@Value,'Not Found')

GO


--------ForeinKeys----------------------------------------------------------------------------------------------------------------------------------------------


declare @sql varchar(8000)
set @sql=''
select @sql=@sql+'
alter table '+o1.name+' drop constraint '+o.name
FROM Sysforeignkeys f ,      Sysobjects o1 ,sysobjects o
where fkeyid = o1.id and constid=o.id
and o.name not in ('FK_ReCommites_FromOrganizations',
'FK_ReCommites_Users','FK_ReCommites_ActionType',
'FK_Users_FromOrganizations','FK_Letter_Subject','FK_Users_FromOrganizations1',
'FK_Letter_SendStatus','FK_Letter_FromOrganizations','FK_Letter_Secretariats',
'FK_ArchiveFolder_Users','FK_Letter_LetterTypes','FK_Emails_Users',
'FK_Letter_Classifications','FK_Letter_FromOrganizations1',
'FK_FieldAccess_Fields','FK_Letter_Urgenceis','FK_FieldAccess_Users',
'FK_Letter_ReceiveTypes','FK_FieldAccess_AccessType','FK_Letter_Users',
'FK_Letter_ActionType','FK_LetterRelation_Letter','FK_LetterRelation_Letter1',
'FK_FollowUp_Letter','FK_ReCommites_Letter','FK_LetterData_Letter',
'FK_LetterArchiveFolder_Letter','FK_LetterFieldValue_Letter','FK_Fields_Tables',
'FK_Fields_FieldType','FK_FollowUp_FollowUpType','FK_FollowUp_Users',
'FK_FollowUp_DoneStatus','FK_LetterArchiveFolder_ArchiveFolder','FK_LetterArchiveFolder_Users',
'FK_News_Urgenceis','FK_LetterFieldValue_Fields','FK_News_Users',
'FK_LetterFieldValue_Users','FK_NewsGroup_Users','FK_NewsGroupUsers_Users',
'FK_NewsGroupUsers_NewsGroup','FK_LetterTemplate_TemplateGroup','FK_NewsUsers_News',
'FK_LetterText_LetterFormats','FK_NewsUsers_Users','FK_ParaphTemplate_Users',
'FK_PhoneGroup_Users','FK_Phone_PhoneGroup','FK_Phone_Users',
'FK_RecommiteData_ReCommites','FK_ReferenceTableData_Tables','FK_Secretariats_ArchiveCenter',
'FK_UserAccArchive_Users','FK_UserAccArchive_ArchiveCenter','FK_UserAccArchive_ArchiveFolder',
'FK_UserAccArchive_Secretariats','FK_UserExtention_Extention','FK_UserExtention_Users',
'FK_UserLog_Users','FK_UserLog_Letter','FK_UserLoginLogout_Users',
'FK_UserTemplateGroup_TemplateGroup','FK_UserShortCut_Users',
'FK_UserNote_Users','FK_UserSecretariats_Secretariats','FK_UserSecretariats_Users',
'FK_FromOrganizations_FromOrganizations','FK_UserTemplateGroup_Users','FK_Letter_LetterFormats','FK_Letter_Letter',
'FK_RelatedSecretariats_Secretariats','FK_UserMessage_Users',
'FK_UserMessage_Users1','FK_WorkGroup_Users','FK_WorkGroupOrg_WorkGroup','FK_WorkGroupOrg_FromOrganizations')

if @sql <> '' 
   Exec(@sql)
 
GO
if not exists (select * from sysobjects where name='FK_ReCommites_FromOrganizations')
ALTER TABLE ReCommites WITH NOCHECK ADD CONSTRAINT   [FK_ReCommites_FromOrganizations] FOREIGN KEY ( [OrgID] ) REFERENCES [dbo].
[FromOrganizations] ( [ID] )
GO
 
if not exists (select * from sysobjects where name='FK_LetterData_Letter')
ALTER TABLE LetterData WITH NOCHECK ADD CONSTRAINT   [FK_LetterData_Letter] FOREIGN KEY ( [LetterID] ) REFERENCES [dbo].[Letter] ( [LetterID] )
GO

if not exists (select * from sysobjects where name='FK_UserAccArchive_ArchiveFolder')
ALTER TABLE UserAccArchive WITH NOCHECK ADD CONSTRAINT   [FK_UserAccArchive_ArchiveFolder] FOREIGN KEY ( [ArchiveFolderID] ) REFERENCES 
[dbo].[ArchiveFolder] ( [FolderID] )
GO

if not exists (select * from sysobjects where name='FK_LetterArchiveFolder_Letter')
ALTER TABLE LetterArchiveFolder WITH NOCHECK ADD CONSTRAINT   [FK_LetterArchiveFolder_Letter] FOREIGN KEY ( [LetterID] ) REFERENCES [dbo].
[Letter] ( [LetterID] )
GO

if not exists (select * from sysobjects where name='FK_UserAccArchive_Secretariats')
ALTER TABLE UserAccArchive WITH NOCHECK ADD CONSTRAINT   [FK_UserAccArchive_Secretariats] FOREIGN KEY ( [SecID] ) REFERENCES [dbo].
[Secretariats] ( [SecID] )
GO

if not exists (select * from sysobjects where name='FK_LetterFieldValue_Letter')
ALTER TABLE LetterFieldValue WITH NOCHECK ADD CONSTRAINT   [FK_LetterFieldValue_Letter] FOREIGN KEY ( [LetterID] ) REFERENCES [dbo].[Letter] ( 
[LetterID] )
GO

if not exists (select * from sysobjects where name='FK_UserExtention_Extention')
ALTER TABLE UserExtention WITH NOCHECK ADD CONSTRAINT   [FK_UserExtention_Extention] FOREIGN KEY ( [ExtentionID] ) REFERENCES [dbo].
[Extention] ( [ExtentionID] )
GO

if not exists (select * from sysobjects where name='FK_UserExtention_Users')
ALTER TABLE UserExtention WITH NOCHECK ADD CONSTRAINT   [FK_UserExtention_Users] FOREIGN KEY ( [UserId] ) REFERENCES [dbo].[Users] ( [Id] )
GO
 
if not exists (select * from sysobjects where name='FK_News_Users')
ALTER TABLE News WITH NOCHECK ADD CONSTRAINT   [FK_News_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_UserLoginLogout_Users')
ALTER TABLE UserLoginLogout WITH NOCHECK ADD CONSTRAINT   [FK_UserLoginLogout_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] 
)
GO

if not exists (select * from sysobjects where name='FK_UserTemplateGroup_TemplateGroup')
ALTER TABLE UserTemplateGroup WITH NOCHECK ADD CONSTRAINT   [FK_UserTemplateGroup_TemplateGroup] FOREIGN KEY ( [TemplateGroupID] ) 
REFERENCES [dbo].[TemplateGroup] ( 
[TemplateGroupID])
Go
ALTER TABLE dbo.UserTemplateGroup NOCHECK CONSTRAINT FK_UserTemplateGroup_TemplateGroup
GO

if not exists (select * from sysobjects where name='FK_UserShortCut_Users')
ALTER TABLE UserShortCut WITH NOCHECK ADD CONSTRAINT   [FK_UserShortCut_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_UserNote_Users')
ALTER TABLE UserNote WITH NOCHECK ADD CONSTRAINT   [FK_UserNote_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_UserSecretariats_Secretariats')
ALTER TABLE UserSecretariats WITH NOCHECK ADD CONSTRAINT   [FK_UserSecretariats_Secretariats] FOREIGN KEY ( [SecId] ) REFERENCES [dbo].
[Secretariats] ( [SecID] )
GO

if not exists (select * from sysobjects where name='FK_UserSecretariats_Users')
ALTER TABLE UserSecretariats WITH NOCHECK ADD CONSTRAINT   [FK_UserSecretariats_Users] FOREIGN KEY ( [UserId] ) REFERENCES [dbo].[Users] ( [Id] 
)
GO

if not exists (select * from sysobjects where name='FK_FromOrganizations_FromOrganizations')
ALTER TABLE FromOrganizations WITH NOCHECK ADD CONSTRAINT   [FK_FromOrganizations_FromOrganizations] FOREIGN KEY ( [ParentID] ) REFERENCES 
[dbo].[FromOrganizations] ( [ID] )
GO

if not exists (select * from sysobjects where name='FK_Users_FromOrganizations')
ALTER TABLE Users WITH NOCHECK ADD CONSTRAINT   [FK_Users_FromOrganizations] FOREIGN KEY ( [FromOrgID] ) REFERENCES [dbo].
[FromOrganizations] ( [ID] )
GO

if not exists (select * from sysobjects where name='FK_Users_FromOrganizations1')
ALTER TABLE Users WITH NOCHECK ADD CONSTRAINT   [FK_Users_FromOrganizations1] FOREIGN KEY ( [SecondOrgID] ) REFERENCES [dbo].
[FromOrganizations] ( [ID] )
GO


if not exists (select * from sysobjects where name='FK_Emails_Users')
ALTER TABLE Emails WITH NOCHECK ADD CONSTRAINT   [FK_Emails_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( [Id] )
GO



if not exists (select * from sysobjects where name='FK_FieldAccess_Fields')
ALTER TABLE FieldAccess WITH NOCHECK ADD CONSTRAINT   [FK_FieldAccess_Fields] FOREIGN KEY ( [FieldID] ) REFERENCES [dbo].[Fields] ( [ID] )
GO

if not exists (select * from sysobjects where name='FK_FieldAccess_Users')
ALTER TABLE FieldAccess WITH NOCHECK ADD CONSTRAINT   [FK_FieldAccess_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_FieldAccess_AccessType')
ALTER TABLE FieldAccess WITH NOCHECK ADD CONSTRAINT   [FK_FieldAccess_AccessType] FOREIGN KEY ( [AccessTypeID] ) REFERENCES [dbo].
[AccessType] ( [AccessTypeID] )
GO
 
 

if not exists (select * from sysobjects where name='FK_FollowUp_FollowUpType')
ALTER TABLE FollowUp WITH NOCHECK ADD CONSTRAINT   [FK_FollowUp_FollowUpType] FOREIGN KEY ( [FollowUPTypeID] ) REFERENCES [dbo].
[FollowUpType] ( [FollowUpTypeID] )
GO

if not exists (select * from sysobjects where name='FK_FollowUp_Users')
ALTER TABLE FollowUp WITH NOCHECK ADD CONSTRAINT   [FK_FollowUp_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_FollowUp_DoneStatus')
ALTER TABLE FollowUp WITH NOCHECK ADD CONSTRAINT   [FK_FollowUp_DoneStatus] FOREIGN KEY ( [DoneStatusID] ) REFERENCES [dbo].[DoneStatus] ( 
[DoneStatusID] )
GO

if not exists (select * from sysobjects where name='FK_LetterArchiveFolder_ArchiveFolder')
ALTER TABLE LetterArchiveFolder WITH NOCHECK ADD CONSTRAINT   [FK_LetterArchiveFolder_ArchiveFolder] FOREIGN KEY ( [ArchiveFolderID] ) 
REFERENCES [dbo].[ArchiveFolder] ( [FolderID])

if not exists (select * from sysobjects where name='FK_LetterArchiveFolder_Users')
ALTER TABLE LetterArchiveFolder WITH NOCHECK ADD CONSTRAINT   [FK_LetterArchiveFolder_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].
[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_LetterFieldValue_Fields')
ALTER TABLE LetterFieldValue WITH NOCHECK ADD CONSTRAINT   [FK_LetterFieldValue_Fields] FOREIGN KEY ( [FieldID] ) REFERENCES [dbo].[Fields] ( [ID] 
)
GO

if not exists (select * from sysobjects where name='FK_Letter_Subject')
ALTER TABLE Letter WITH NOCHECK ADD CONSTRAINT   [FK_Letter_Subject] FOREIGN KEY ( [SubjectID] ) REFERENCES [dbo].[Subject] ( [SubjectID] )
GO

if not exists (select * from sysobjects where name='FK_LetterFieldValue_Users')
ALTER TABLE LetterFieldValue WITH NOCHECK ADD CONSTRAINT   [FK_LetterFieldValue_Users] FOREIGN KEY ( [InsertUserID] ) REFERENCES [dbo].[Users] 
( [Id] )
GO
 

if not exists (select * from sysobjects where name='FK_NewsGroup_Users')
ALTER TABLE NewsGroup WITH NOCHECK ADD CONSTRAINT   [FK_NewsGroup_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_Letter_FromOrganizations')
ALTER TABLE Letter WITH NOCHECK ADD CONSTRAINT   [FK_Letter_FromOrganizations] FOREIGN KEY ( [FromOrgID] ) REFERENCES [dbo].
[FromOrganizations] ( [ID] )
GO

if not exists (select * from sysobjects where name='FK_NewsGroupUsers_Users')
ALTER TABLE NewsGroupUsers WITH NOCHECK ADD CONSTRAINT   [FK_NewsGroupUsers_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( 
[Id] )
GO
 if not exists (select * from sysobjects where name='FK_NewsGroupUsers_NewsGroup')
ALTER TABLE NewsGroupUsers WITH NOCHECK ADD CONSTRAINT   [FK_NewsGroupUsers_NewsGroup] FOREIGN KEY ( [NewsGroupID] ) REFERENCES 
[dbo].[NewsGroup] ( [NewsGroupID] )
GO

if not exists (select * from sysobjects where name='FK_LetterTemplate_TemplateGroup')
ALTER TABLE LetterTemplate WITH NOCHECK ADD CONSTRAINT   [FK_LetterTemplate_TemplateGroup] FOREIGN KEY ( [TemplateGroupID] ) REFERENCES 
[dbo].[TemplateGroup] ( [TemplateGroupID] )
GO

if not exists (select * from sysobjects where name='FK_LetterText_LetterFormats')
ALTER TABLE LetterText WITH NOCHECK ADD CONSTRAINT   [FK_LetterText_LetterFormats] FOREIGN KEY ( [LetterFormat] ) REFERENCES [dbo].
[LetterFormats] ( [Code] )
GO
 
if not exists (select * from sysobjects where name='FK_NewsUsers_Users')
ALTER TABLE NewsUsers WITH NOCHECK ADD CONSTRAINT   [FK_NewsUsers_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_Letter_FromOrganizations1')
ALTER TABLE Letter WITH NOCHECK ADD CONSTRAINT   [FK_Letter_FromOrganizations1] FOREIGN KEY ( [ToOrgID] ) REFERENCES [dbo].
[FromOrganizations] ( [ID] )
GO
ALTER TABLE dbo.Letter NOCHECK CONSTRAINT FK_Letter_FromOrganizations1  /*C??C? ??C? ICI? ??IC? ??? I? A?I?*/
GO


if not exists (select * from sysobjects where name='FK_ParaphTemplate_Users')
ALTER TABLE ParaphTemplate WITH NOCHECK ADD CONSTRAINT   [FK_ParaphTemplate_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] 
)
GO
 
if not exists (select * from sysobjects where name='FK_PhoneGroup_Users')
ALTER TABLE PhoneGroup WITH NOCHECK ADD CONSTRAINT   [FK_PhoneGroup_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( [Id] )
GO
 

 

if not exists (select * from sysobjects where name='FK_Letter_Users')
ALTER TABLE Letter WITH NOCHECK ADD CONSTRAINT   [FK_Letter_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_Phone_Users')
ALTER TABLE Phone WITH NOCHECK ADD CONSTRAINT   [FK_Phone_Users] FOREIGN KEY ( [UsersID] ) REFERENCES [dbo].[Users] ( [Id] )
GO
 
if not exists (select * from sysobjects where name='FK_RecommiteData_ReCommites')
ALTER TABLE RecommiteData WITH NOCHECK ADD CONSTRAINT   [FK_RecommiteData_ReCommites] FOREIGN KEY ( [RecommiteID] ) REFERENCES [dbo].
[ReCommites] ( [RecommiteID] )
GO

if not exists (select * from sysobjects where name='FK_LetterRelation_Letter')
ALTER TABLE LetterRelation WITH NOCHECK ADD CONSTRAINT   [FK_LetterRelation_Letter] FOREIGN KEY ( [MainLetterID] ) REFERENCES [dbo].[Letter] ( 
[LetterID] )
GO
 
if not exists (select * from sysobjects where name='FK_LetterRelation_Letter1')
ALTER TABLE LetterRelation WITH NOCHECK ADD CONSTRAINT   [FK_LetterRelation_Letter1] FOREIGN KEY ( [MainLetterID] ) REFERENCES [dbo].[Letter] ( 
[LetterID] )
GO

if not exists (select * from sysobjects where name='FK_Secretariats_ArchiveCenter')
ALTER TABLE Secretariats WITH NOCHECK ADD CONSTRAINT   [FK_Secretariats_ArchiveCenter] FOREIGN KEY ( [ArchiveCenterID] ) REFERENCES [dbo].
[ArchiveCenter] ( [ArchiveCenterID] )
GO

if not exists (select * from sysobjects where name='FK_FollowUp_Letter')
ALTER TABLE FollowUp WITH NOCHECK ADD CONSTRAINT   [FK_FollowUp_Letter] FOREIGN KEY ( [Letterid] ) REFERENCES [dbo].[Letter] ( [LetterID] )
GO
ALTER TABLE dbo.FollowUp NOCHECK CONSTRAINT FK_FollowUp_Letter
GO


if not exists (select * from sysobjects where name='FK_UserAccArchive_Users')
ALTER TABLE UserAccArchive WITH NOCHECK ADD CONSTRAINT   [FK_UserAccArchive_Users] FOREIGN KEY ( [UserID] ) REFERENCES [dbo].[Users] ( [Id] )
GO

if not exists (select * from sysobjects where name='FK_ReCommites_Letter')
ALTER TABLE ReCommites WITH NOCHECK ADD CONSTRAINT   [FK_ReCommites_Letter] FOREIGN KEY ( [LetterID] ) REFERENCES [dbo].[Letter] ( [LetterID] 
)
GO

if not exists (select * from sysobjects where name='FK_Users_UserSign')
ALTER TABLE dbo.Users WITH NOCHECK ADD CONSTRAINT  FK_Users_UserSign FOREIGN KEY (Id ) REFERENCES dbo.UserSign (UserID)
GO
ALTER TABLE dbo.Users NOCHECK CONSTRAINT FK_Users_UserSign
GO

if not exists (select * from sysobjects where name='FK_UserTemplateGroup_Users')
ALTER TABLE dbo.UserTemplateGroup WITH NOCHECK ADD CONSTRAINT FK_UserTemplateGroup_Users FOREIGN KEY(UserID) REFERENCES dbo.Users(Id)
GO


if not exists (select * from sysobjects where name='FK_Letter_Letter')
ALTER TABLE dbo.Letter WITH NOCHECK ADD CONSTRAINT FK_Letter_Letter FOREIGN KEY (SentLetterID) REFERENCES dbo.Letter (LetterID)
GO
if not exists (select * from sysobjects where name='FK_RelatedSecretariats_Secretariats')
ALTER TABLE dbo.RelatedSecretariats WITH NOCHECK ADD CONSTRAINT FK_RelatedSecretariats_Secretariats FOREIGN KEY (DestinationSecID) 
REFERENCES dbo.Secretariats(SecID)
GO
if not exists (select * from sysobjects where name='FK_UserMessage_Users')
ALTER TABLE dbo.UserMessage WITH NOCHECK ADD CONSTRAINT FK_UserMessage_Users FOREIGN KEY (To_) REFERENCES dbo.Users (Id)
GO
if not exists (select * from sysobjects where name='FK_UserMessage_Users1')
ALTER TABLE dbo.UserMessage WITH NOCHECK ADD CONSTRAINT FK_UserMessage_Users1 FOREIGN KEY (From_) REFERENCES dbo.Users(Id)
GO
if not exists (select * from sysobjects where name='FK_WorkGroup_Users')
ALTER TABLE dbo.WorkGroup WITH NOCHECK ADD CONSTRAINT FK_WorkGroup_Users FOREIGN KEY(UserID) REFERENCES dbo.Users(Id)
GO
if not exists (select * from sysobjects where name='FK_WorkGroupOrg_WorkGroup')
ALTER TABLE dbo.WorkGroupOrg WITH NOCHECK ADD CONSTRAINT FK_WorkGroupOrg_WorkGroup FOREIGN KEY(WorkGroupID) REFERENCES 
dbo.WorkGroup(WorkGroupID)
GO
if not exists (select * from sysobjects where name='FK_WorkGroupOrg_FromOrganizations')
ALTER TABLE dbo.WorkGroupOrg WITH NOCHECK ADD CONSTRAINT FK_WorkGroupOrg_FromOrganizations FOREIGN KEY(FromOrgID) REFERENCES 
dbo.FromOrganizations(ID)
GO

Exec sp_SetForeinKey 0
GO






[Num]=3
---------Ver 4.0.0.2


/*Ranjbar ç«— Â«Ì ”«“„«‰Ì ﬂÂ œ«—«Ì «ÌœÌ 1Ê2Ê3 Â” ‰œ  Ê”ÿ  —Ìê— “Ì— ﬁ«»· Õ–› ‰„Ì »«‘‰œ*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Tr_Del_FromOrganizations]') and OBJECTPROPERTY(id, N'IsTrigger') = 1)
drop trigger [dbo].[Tr_Del_FromOrganizations]
GO

Create Trigger Tr_Del_FromOrganizations
On FromOrganizations
For Delete  
As
Declare @FromOrgID int
Select @FromOrgID = ID from Deleted
Print @FromOrgID
If @FromOrgID in (1,2,3)
Begin
   RaisError ('ﬂ«—»— ê—«„Ì «„ﬂ«‰ Õ–› «Ì‰ ç«—  ”«“„«‰Ì ÊÃÊœ ‰œ«—œ', 16, 1)
   Rollback Transaction
End
GO
-----------------------------------------------------------------------------------
/* GetSystemValue «’·«Õ  «»⁄ */
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[GetSystemValue]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[GetSystemValue]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE Function dbo.GetSystemValue(@VariableName Nvarchar(50))  
Returns nvarchar(255)  
AS    
BEGIN   

/*Alter Function dbo.GetSystemValue(@varID int)  
Returns nvarchar(255)  
AS    
BEGIN   
   if not exists(select * from settings where variableid=@varID and userid = -1)  
      Return(0)  
   Return(select value from settings where variableid=@varID and userid = -1)  
END*/


   if not Exists(Select * from settings where VariableName = @VariableName And UserID = -1)  
      Return(0)  
   Return(select value from settings where VariableName=@VariableName And UserID = -1)  
END 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

-----------------------------------------------------------------------------------
/*«’·«Õ ‘„«—Â ‰«„Â  —ﬂÌ»Ì*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[InnerNo]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[InnerNo]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE function [dbo].[InnerNo](@LetterID int)  
Returns nvarchar(200)  
begin  
declare @SecCode nvarchar(50),@MYear nchar(2), @IndicatorID nvarchar(10), @ToOrgCode  nvarchar(50),  
@FromOrgCode  nvarchar(50), @LetterTypCode  nvarchar(10),@result nvarchar(4000),@UserMemo nvarchar(255),  
@FromPrecode  nvarchar(50)  
  
SELECT  
@SecCode=ltrim(isnull(Secretariats.Precode,'')),  
@MYear=Letter.MYear,  
@IndicatorID=Letter.IndicatorID,  
@FromOrgCode= case when len(fromorg.code)>5  then  FromOrg.Code  else ltrim(isnull(fromorg.code,'')) end ,  
@ToOrgCode= case when len(Toorg.code)>5  then  Toorg.Code  else ltrim(isnull(Toorg.code,'')) end ,  
@LetterTypCode=ltrim(isnull(LetterTypes.PreCode,'')),  
@UserMemo=ltrim(isnull(Usermemo,'')),  
@FromPrecode=ltrim(isnull(fromorg.Precode,''))  
FROM         Letter  
INNER JOIN  FromOrganizations Toorg ON Letter.ToorgID = Toorg.ID  
INNER JOIN  FromOrganizations FromOrg ON Letter.FromOrgID = FromOrg.ID  
INNER JOIN  LetterTypes ON Letter.Letter_Type = LetterTypes.ID  
INNER JOIN  Secretariats ON Letter.SecretariatID = Secretariats.SecID  
WHERE     (Letter.LetterID = @LetterID)         
  
declare @Delimeter char(1)  
set @Delimeter=ltrim(dbo.GetSystemValue('LetterFormulaSeperator')) --44 
  
  
set @result=case  dbo.GetSystemValue('LetterFormulaPart1')--35  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
                   when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter  
                   when 8 then @FromPrecode+@Delimeter end+  
  
             case  dbo.GetSystemValue('LetterFormulaPart2')--36  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
                   when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter   
                   when 8 then @FromPrecode+@Delimeter end+  
  
             case  dbo.GetSystemValue('LetterFormulaPart3')--37  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
                   when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter   
                   when 8 then @FromPrecode+@Delimeter end+  
  
             case  dbo.GetSystemValue('LetterFormulaPart4')--38  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
                   when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter   
                   when 8 then @FromPrecode+@Delimeter end+  
  
             case  dbo.GetSystemValue('LetterFormulaPart5')--39  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
                   when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter   
                   when 8 then @FromPrecode+@Delimeter end+  
  
             case  dbo.GetSystemValue('LetterFormulaPart6')--40  
                   when 0 then ''  
                   when 1 then @SecCode+@Delimeter  
                   when 2 then @MYear+@Delimeter  
         when 3 then @IndicatorID+@Delimeter  
                   when 4 then @ToOrgCode+@Delimeter  
                   when 5 then @FromOrgCode+@Delimeter  
                   when 6 then @LetterTypCode+@Delimeter  
                   when 7 then @UserMemo+@Delimeter   
                   when 8 then @FromPrecode+@Delimeter end  
  
while charindex('  ',@result)<>0  
  begin  
   Set @result=replace(@result,'  ',' ')  
   Set @result=replace(@result,'/ ','/')  
   Set @result=replace(@result,' /','/')  
  end   
  
set @result=replace(ltrim(rtrim(@result)),@Delimeter+@Delimeter,@Delimeter)  
set @result=replace(@result,@Delimeter+@Delimeter,@Delimeter)  
  
  
if substring(@result,len(@result),1)=@Delimeter  
   set @result=substring(@result,1,len(@result)-1)  
  
if substring(@result,1,1)=@Delimeter  
   set @result=substring(@result,2,len(@result)-1)  
  
  
return(@result)  
end

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


-----------------------------------------------------------------------------------
/*GetSystemValue »Œ«ÿ— «’·«Õ*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[get_LastIndicatorID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[get_LastIndicatorID]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE procedure [dbo].[Get_LastIndicatorID](@letter_type tinyint ,@SecretariatID int,@Myear int,  
@LetterFormat tinyint,@newIndicatorid int output)  
as  
declare @RecivedInd int ,@SentInd  int,@innerind int,@Docind int  
Select @RecivedInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=1   
  
Select @SentInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=2   
  
  
 Select @innerind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=3  
  
 Select @Docind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=4  
  
  if @RecivedInd<dbo.GetSystemValue('BeginIndicator')--3   
    set  @RecivedInd=dbo.GetSystemValue('BeginIndicator')--3  
  
  
  if @SentInd<dbo.GetSystemValue('BeginIndicator')--3   
    set  @SentInd=dbo.GetSystemValue('BeginIndicator')--3  
  
  if @innerind<dbo.GetSystemValue('BeginIndicator')--3   
    set  @innerind=dbo.GetSystemValue('BeginIndicator')--3  
  
  
if @letter_type=3   
 begin  
  set @newIndicatorid=@innerind  
  return  
 end  
if @letter_type=4   
 begin  
  set @newIndicatorid=@docind  
  return  
 end  
  
  
 if dbo.GetSystemValue('UniqeIndicator')=0   --5 
  begin  
     if @SentInd>@RecivedInd  
        set @newIndicatorid=@SentInd  
       else  
        set @newIndicatorid=@RecivedInd  
  
  end  
  
 if dbo.GetSystemValue('UniqeIndicator')=1  --5
   begin  
    if @letter_type=1  
     set @newIndicatorid=@RecivedInd  
    if @letter_type=2  
     set @newIndicatorid=@SentInd  
   end  
  
 if dbo.GetSystemValue('UniqeIndicator')=2  --5
  begin  
   if @letter_type=2  
      set @newIndicatorid=2*(1+(@SentInd-1)/2)  
  
   if @letter_type=1  
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)+1  
  end  
  
 if dbo.GetSystemValue('UniqeIndicator')=3  --5
  begin  
   if @letter_type=1  
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)  
  
   if @letter_type=2  
      set @newIndicatorid=2*(1+(@SentInd -1)/2)+1  
  end  

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

-----------------------------------------------------------------------------------
/*GetSystemValue »Œ«ÿ— «’·«Õ*/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[newIndicatorid]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[newIndicatorid]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE Function dbo.NewIndicatorID(@letter_type int,@LetterFormat int,@myear int,@SecretariatID int)  
RETURNS int AS    
BEGIN  
declare @RecivedInd int ,@SentInd  int,@innerind int,@newIndicatorid int  
  
Select @RecivedInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=1   
  
Select @SentInd=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=2   
  
  
 Select @innerind=isnull(max(indicatorID),0)+1 from Letter where myear=@myear and LetterFormat=@LetterFormat  
 and SecretariatID=@SecretariatID and letter_type=3  
  
  if @RecivedInd<dbo.GetSystemValue('BeginIndicator')--3  
    set  @RecivedInd=dbo.GetSystemValue('BeginIndicator')--3  
  
  
  if @SentInd<dbo.GetSystemValue('BeginIndicator')--3   
    set  @SentInd=dbo.GetSystemValue('BeginIndicator')--3  
  
  if @innerind<dbo.GetSystemValue('BeginIndicator')--3   
    set  @innerind=dbo.GetSystemValue('BeginIndicator')--3  
  
  
if @letter_type=3   
  return(@innerind)  
    
  
 if dbo.GetSystemValue('UniqeIndicator')=0  --5
  begin  
     if @SentInd>@RecivedInd   
        set @newIndicatorid=@SentInd  
       else  
        set @newIndicatorid=@RecivedInd  
  
  end  
  
 if dbo.GetSystemValue('UniqeIndicator')=1  --5
   begin  
    if @letter_type=1   
     set @newIndicatorid=@RecivedInd  
    if @letter_type=2  
     set @newIndicatorid=@SentInd  
   end  
  
 if dbo.GetSystemValue('UniqeIndicator')=2  --5
  begin  
   if @letter_type=2  
      set @newIndicatorid=2*(1+(@SentInd-1)/2)  
  
   if @letter_type=1  
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)+1  
  end  
  
 if dbo.GetSystemValue('UniqeIndicator')=3  --5
  begin  
   if @letter_type=1  
      set @newIndicatorid=2*(1+(@RecivedInd-1)/2)  
  
   if @letter_type=2  
      set @newIndicatorid=2*(1+(@SentInd -1)/2)+1  
  end  
return(@newIndicatorid)   
END

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


-----------------------------------------------------------------------------------
/* Get_All_Letter «’·«Õ  «»⁄ */
/*Ranjbar ÃÂ  «’·«Õ ›Ì· — ‰«„Â Â«Ì ¬—‘ÌÊ ‘œÂ Â«*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Get_All_Letter]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Get_All_Letter]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE [dbo].[Get_All_Letter]    
    
@Secretariatid int,        
@myear tinyint,        
@Letter_Type int,        
@LetterFormat int,        
@where nvarchar(2000),        
@top smallint ,        
@archiveFolderID int,        
@ArchiveStatus tinyint ,-- 0 ,1 and 2(= all)     
@userid int       
As        
Declare @sqlCommand nvarchar(4000) , @archiveLetter nvarchar(4000)    
DECLARE @InnerNo NVARCHAR(500);        
declare @Delimeter char(1)        
Declare @ArchivedText Nvarchar(2000)

set @Delimeter=dbo.GetSystemValue('LetterFormulaSeperator')--44        
set @InnerNo=case  dbo.GetSystemValue('LetterFormulaPart1') --35       
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'        
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+        
        
             case  dbo.GetSystemValue('LetterFormulaPart2')--36        
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'        
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+        
        
             case  dbo.GetSystemValue('LetterFormulaPart3')--37  
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'        
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+        
        
             case  dbo.GetSystemValue('LetterFormulaPart4')--38        
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'        
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+        
        
             case  dbo.GetSystemValue('LetterFormulaPart5')--39        
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'                         
     when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+' end+        
        
             case  dbo.GetSystemValue('LetterFormulaPart6')--40        
                   when 0 then ''        
                   when 1 then 'isnull(Secretariats.Precode,'''')+'''+@Delimeter+'''+'        
                   when 2 then 'cast(Myear as char(2))+'''+@Delimeter+'''+'        
                   when 3 then 'cast(indicatorid as nvarchar(10))+'''+@Delimeter+'''+'        
                   when 4 then 'case when len(sender.Code)>5 then sender.PreCode else sender.Code end +'''+@Delimeter+'''+'        
                   when 5 then 'case when len(Deliver.Code)>5 then Deliver.PreCode else Deliver.Code end +'''+@Delimeter+'''+'        
                   when 6 then 'isnull(LetterTypes.PreCode,'''')+'''+@Delimeter+'''+'        
                   when 7 then 'isnull(UserMemo,'''')+'''+@Delimeter+'''+'        
                   when 8 then 'isnull(Deliver.Precode,'''')+'''+@Delimeter+'''+'   
             end        
        
IF len(@InnerNo)>5        
if substring(@InnerNo,len(@InnerNo)-4,5)='+'''+@Delimeter+'''+'        
   set @InnerNo=substring(@InnerNo,1,len(@InnerNo)-5)        
        
if @innerno<>''        
set @InnerNo='replace(replace(ltrim(rtrim('+@InnerNo+')),'''+@Delimeter+@Delimeter+''','''+@Delimeter+'''),'''+@Delimeter+@Delimeter+''','''+@Delimeter+''')'        
else        
set @innerno='cast(indicatorid as nvarchar(500))'        
    
set @archiveLetter='select  l.LetterID    
from LETTER L    
LEFT JOIN LetterArchiveFolder laf ON laf.Letterid=l.letterid    
LEFT join archivefolder af  on laf.ArchiveFolderID=af.FolderID    
LEFT join UserAccArchive uac on uac.ArchiveFolderID=af.FolderID and uac.secid=L.SecretariatID    
where ISNULL(uac.UserID,'+cast(@userid as varchar(10))+')='+cast(@userid as varchar(10))+' and ISNULL(uac.ISAccess,1)=1'    
    
        
set @sqlCommand='SELECT top  '+Cast(@top as varchar(5)) +'     Letter.LetterID, Letter.IndicatorID, Letter.MYear, Letter.SecretariatID,        
                      Letter.Letter_Type, Letter.letterformat, Letter.IncommingNO, Letter.FromOrgID,Letter.IncommingDate,        
                      Letter.ToOrgID, Letter.UrgencyID, Letter.Memo, Letter.RetroactionNo, Letter.RegistrationDate, Letter.FollowLetterNo,        
                      Letter.ToStaffer, Letter.SentLetterID, Letter.TemplateID, Letter.UserMemo,Letter.DeadLineDate, sender.Title AS SenderTitle,        
                      Deliver.Title AS DeliverTitle,dbo.has_Page(Letter.letterid) has_Page,        
dbo.has_WordPage(Letter.letterid) has_WordPage,dbo.has_file(letter.letterID) has_file, Letter.SubjectID,       
LetterTypes.Title LetterTypeTitle,LetterRecommites,sendstatusTitle,'+@innerno+'  InnerNo,Letter.Archived        
,ActionTypeTitle       
 , Letter.SignerID , (Select Title from FromOrganizations FO Where(FO.ID = Letter.SignerID)) as SignerTitle       
,Letter.ReceiveTypeID , letter.ClassificationID     
      
FROM Letter left  JOIN        
     FromOrganizations sender ON Letter.ToOrgID = sender.ID left JOIN        
     FromOrganizations Deliver ON Letter.FromOrgID = Deliver.ID        
     Left join LetterTypes on LetterTypes.ID=Letter.Letter_type        
     inner join sendstatus on sendstatus.sendstatusID=Letter.sendstatusID        
     inner join Secretariats on Secretariats.Secid=Letter.SecretariatID        
     left JOIN ActionType  ON ActionType.ActionTypeID = Letter.LatestActionTypeID'        
              
if @archiveFolderID>0        
set @sqlCommand=@sqlCommand+'        
Left join LetterArchiveFolder on LetterArchiveFolder.Letterid=Letter.LetterID '        
        
set @sqlCommand=@sqlCommand+' where letter.Finalized=1 '        
              
set @where=isnull(ltrim(rtrim(@where)),'')        
if @where <>'' set @where =' and '+@where        
        
if @Letter_Type<>0        
  set @where=@where+' and (Letter_Type = '+Cast(@Letter_Type as varchar(5))+')'        
        
if @Secretariatid<>0        
  set @where=@where+' and (Secretariatid = '+Cast(@Secretariatid as varchar(5))+')'        
        
if @Myear<>0        
  set @where=@where+' and (myear = '+Cast(@myear as varchar(5))+')'        
              
if @LetterFormat<>0        
  set @where=@where+' and (LetterFormat = '+Cast(@LetterFormat as varchar(5))+')'        
        
----
if @ArchiveStatus=0   --Ã«—Ì    
   Set @where=@where+' And Archived=0 '    

Set @ArchivedText = ' Exists (SELECT LetterArchiveFolder.letterID 
                              FROM LetterArchiveFolder,ArchiveFolder 
                              Where(Letterid =Letter.LetterID)        
                                And(ArchiveFolder.UserID=0 or ArchiveFolder.Archivecenterid>0)  
                                And(LetterArchiveFolder.ArchiveFolderID = ArchiveFolder.FolderID) )  
                      And Archived=1  '        
if @ArchiveStatus=1  --(¬—‘ÌÊ ‘œÂ (»«Ìê«‰Ì ‘œÂ
   /*Ranjbar ID=155*/
   --Set @where = @where+' and Archived=1'     
   Set @where=@where+' And ' + @ArchivedText
        
Set @ArchiveLetter=@ArchiveLetter+@where         
        
if @ArchiveStatus=2 --(¬—‘ÌÊ »œÊ‰ œ” Â »‰œÌ (»«Ìê«‰Ì ‰‘œÂ       
   Set @where=@where+' And Not ' + @ArchivedText        

----
       
if @ArchiveFolderID>0        
    set @where=@where+' and (archiveFolderID = '+Cast(@archiveFolderID as varchar(5))+')'         
set @where=@where +' and Letter.letterid in ('+@archiveLetter+')'    
        
set @sqlCommand=@sqlCommand+@where + ' order by indicatorid desc '        
print @sqlcommand        
exec sp_executesql   @sqlCommand 

-- Exec Get_All_Letter 1, 89, 0, 1, N'', 100, 0, 2, 3

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

-----------------------------------------------------------------------------------
/*«’·«Õ ”ÿÕ œ” —”Ì Â«*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Insert_NewActionsAccess]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Insert_NewActionsAccess]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/*CREATE PROCEDURE [dbo].[insert_newActionsAccess]  
AS  
  
Delete from ActionsAccess 
where Str(Formtag)+ActionID not in (Select str(Formtag)+ID from Actions)  
  
INSERT INTO dbo.ActionsAccess(AccessID,ActionID,FormTag,HasAccess)    
SELECT Accesses.ID,  Actions.ID,Actions.FormTag,1   
FROM Accesses,Actions   
Where Str(Accesses.ID)+Actions.ID not in (Select str(Accesses.ID)+ActionID from dbo.ActionsAccess)  
*/
Create Procedure dbo.Insert_NewActionsAccess
AS  
  
Delete from ActionsAccess 
where Str(Formtag) not in (Select Str(FormTag) from Actions)      
And RTrim(ActionID) not in (Select RTrim(ID) from Actions) 

/*œ«œ‰ œ” —”Ì*/      
INSERT INTO [dbo].[ActionsAccess]( [AccessID],[ActionID],[FormTag],[HasAccess])           
SELECT Acc.ID,A.ID,A.FormTag,1          
FROM Accesses Acc,Actions A         
where (Str(A.formtag)+LTrim(RTrim(A.ID))+ Str(Acc.ID) not in   
      (Select Str(AAC.formtag)+LTrim(RTrim(AAC.ActionID))+ Str(AAC.AccessID) From ActionsAccess AAC) )


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

------------------------------------------------------------------------------------------------------------------------------------------------------
/*ID=148*/
/*»« ¬ÅœÌ  ‘œ‰ ‰—„ «›“«— “Ê‰ﬂ‰ Â« Õ–› „Ì ‘œ‰œ*/
Update ArchiveFolder set ArchiveCenterID=UserID/10000 where userid>=10000 or userid=0
Go

------------------------------------------------------------------------------------------------------------------------------------------------------
/*«’·«Õ —Ê«·*/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sp_Sel_UserAccArchive]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Sp_Sel_UserAccArchive]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE Procedure [dbo].[Sp_Sel_UserAccArchive] @SecID int , @userID int  
As  
  
Select UAA.*  
From UserAccArchive UAA ,Secretariats Sec ,Users U   
Where(UAA.SecID = @SecID)  
 And(UAA.UserID = @userID)  
And(UAA.SecID = Sec.SecID)
And(UAA.UserID = U.ID)

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO
------------------------------------------------------------------------------------------------------------------------------------------------------

[Num]=4
---------Ver 5.4.8.2

/*ﬁ›· ÅÌœ« ‰„Ì ‘Êœ VariableName=Null œ— ’Ê— ÌﬂÂ*/
if Exists(Select * From Settings Where VariableID = 99 And UserID = -1 And VariableName Is null)
   Update Settings Set VariableName = '99' Where VariableID = 99
GO
------------------------------------------------------------------------------------------------------------------------------------------------------


[Num]=5
---------Ver 5.4.8.5

/*Ranjbar*/
/* »œÌ· «ÿ·«⁄«  ›«ﬂ” «“ Õ«·   ‰ŸÌ„«  ”Ì” „Ì »Â Õ«·   ‰ŸÌ„«  ﬂ«—»—Ì*/

Declare @UserID int
Declare @FaxExtention Nvarchar(5)
Declare @FaxDirectory Nvarchar(200)
Declare @FaxCartableOrgID Nvarchar(10)
Declare @FaxUpdatePriod Nvarchar(10)
Declare @FaxUpdate Nvarchar(10)

Select @FaxExtention     = Value From Settings Where UserID = -1 And VariableName = 'FaxExtention'
Select @FaxDirectory     = Value From Settings Where UserID = -1 And VariableName = 'FaxDirectory'
Select @FaxCartableOrgID = Value From Settings Where UserID = -1 And VariableName = 'FaxCartableOrgID'
Select @FaxUpdatePriod   = Value From Settings Where UserID = -1 And VariableName = 'FaxUpdatePriod'
Select @FaxUpdate        = Value From Settings Where UserID = -1 And VariableName = 'FaxUpdate'

Delete From Settings Where UserID <> -1 And VariableName in ('FaxExtention','FaxDirectory',
                     'FaxCartableOrgID','FaxUpdatePriod','FaxUpdate')

Declare Cur_Users Cursor 
For
Select ID From Users

Open Cur_Users 
Fetch Cur_Users into @UserID
While @@Fetch_Status = 0 
begin
   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@FaxExtention,'FaxExtention') 

   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@FaxDirectory+'\','FaxDirectory') 

   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@FaxCartableOrgID,'FaxCartableOrgID') 

   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@FaxUpdatePriod,'FaxUpdatePriod') 

   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@FaxUpdate,'FaxUpdate')

   Fetch Next from Cur_Users into @UserID
end

Close Cur_Users
Deallocate Cur_Users

Delete From Settings Where UserID = -1 And VariableName in ('FaxExtention','FaxDirectory',
                     'FaxCartableOrgID','FaxUpdatePriod','FaxUpdate')
GO
------------------------------------------------------------------------------------------------------------------------------------------------------

[Num]=6
---------Ver 5.4.8.6


/*Ranjbar  «›“«Ì‘ ÿÊ· ﬂ«—«ﬂ —Â« «“ 500 »Â 3000*/
Alter Table dbo.ReCommites Alter column Paraph nvarchar(3000) Null
GO

-----------------------------------------------------------------------------------
/*Ranjbar ID=260*/
Delete from Settings 
Where RTrim(VariableName) = 'ReceivedReadOnly'
Go
-----------------------------------------------------------------------------------
/*—‰Ã»— - ﬂ«—»—Ì ﬂ—œ‰ ‰„«Ì‘  ⁄œ«œ ‰«„Â Â«*/

Declare @UserID int
Declare @MaxLetter int

Select @MaxLetter = Value From Settings Where UserID = -1 And VariableName = 'MaxLetterToShow'

Declare Cur_Users Cursor 
For
Select ID From Users

Open Cur_Users 
Fetch Cur_Users into @UserID
While @@Fetch_Status = 0 
begin
   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@MaxLetter,'MaxLetterInDabir') 

   Insert Into Settings(UserID, VariableId, Value, VariableName)
   Values(@UserID,Null,@MaxLetter,'MaxLetterInKartable')

   Fetch Next from Cur_Users into @UserID
end

Close Cur_Users
Deallocate Cur_Users
Go

Delete from Settings 
Where RTrim(VariableName) = 'MaxLetterToShow'

GO
-----------------------------------------------------------------------------------
/*Ranjbar ID=241 «’·«Õ ‰„«Ì‘  ⁄œ«œ ÅÌ‘ ‰ÊÌ” Â«*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Get_DraftLetter_Count]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Get_DraftLetter_Count]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

/*
CREATE PROCEDURE [dbo].[Get_DraftLetter_count] @Myear tinyint,@SecretariatID int ,@Count int output    
AS  
Select @Count = Count(*)  
from Letter  
where Myear=@Myear 
And letterformat=2 --ÅÌ‘‰ÊÌ”
And SecretariatID=@SecretariatID
And Finalized=1  
Set @Count=IsNull(@Count,0)
{Ranjbar 89.09.28 ID=262}*/
CREATE PROCEDURE [dbo].[Get_DraftLetter_ûCount] @Myear tinyint,@SecretariatID int,@UserID int ,@Count int output    
AS  

Declare @HasSecureLetterAccess Tinyint
Select @HasSecureLetterAccess = HasSecureLetterAccess From Users Where ID = @UserID   --1=ﬂ«—»— œ»Ì—Œ«‰Â

Select @Count = Count(*)  
from Letter  
where Myear=@Myear 
And letterformat=2 /*ÅÌ‘‰ÊÌ”*/
And SecretariatID=@SecretariatID
And Finalized=1
--Ranjbar «ê— ﬂ«—»— œ»Ì—Œ«‰Â »Êœ Â„Â ÅÌ‘ ‰ÊÌ” Â« —« „‘«ÂœÂ ﬂ‰œ œ— €Ì— «Ì‰’Ê—  ›ﬁÿ ÅÌ‘ ‰ÊÌ” Â«Ì À»  ‘œÂ  Ê”ÿ ﬂ«—»—  
And (@HasSecureLetterAccess = 1 or UserID=@UserID)

Set @Count=IsNull(@Count,0)

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO
-----------------------------------------------------------------------------------
/*Ranjbar ID=258 ÃÂ  œ«‘ ‰ ” Ê‰ "Ê÷⁄Ì  ÃÊ«» œÂÌ" œ— ﬂ«— «»·*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[AnswerLetter]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[AnswerLetter]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE Procedure [dbo].[AnswerLetter]( @LetterID int,@AnswerLetterID int,@Today char(10))  
As  

--‰«„Â «Ê·Ì SentLetterID ﬁ—«— œ«œ‰ ¬ÌœÌ ‰«„Â ÅÌ‘ ‰ÊÌ” œ— ›Ì·œ  
UPDATE Letter 
SET SentLetterID = @AnswerLetterID
WHERE LetterID=@LetterID  

DECLARE @Letterformat int   
Select @letterFormat=letterFormat from letter  
WHERE LetterID=@LetterID  
    
if @letterFormat=1  --‰«„Â ⁄«œÌ
begin  
   UPDATE ReCommites  
   SET Proceeded=1, ProceedDate = @today,IsAnswer=1 --Ranjbar ID=258 
   WHERE (Proceeded=0) AND (LetterID=@LetterID)  
  
   UPDATE ReCommites SET ActionTypeID=5 WHERE  (LetterID=@LetterID)  
   update letter set LatestActionTypeID=5 where letterid=@letterid  
end 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO
-----------------------------------------------------------------------------------
/*FirstView —‰Ã»— »—œ«‘ ‰ ›Ì·œ »œÊ‰ «” ›«œÂ*/

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Sp_Inbox]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Sp_Inbox]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

CREATE PROCEDURE [dbo].[Sp_Inbox]  
@SecretariatID int,  
@LetterFormat tinyint,  
@OrgID int,  
@Proceeded bit,  
@Type tinyint,@myear tinyint,@date tinyint,@ArchiveFolderID int ,@where nvarchar(1000),  
@userID int,@Letter_Type int,@DeadLine int,@orderClause varchar(50)=' rc.recommitedate desc,l.indicatorid desc',  
@top int=100  
as  
declare        
@sql nvarchar (4000),        
@rw nvarchar(2000),        
@Today char(10),        
@Proceed bit, -- @Proceed  
@todayToint varchar(10),    
@Mytoday Nvarchar(10)  
        
select @today=dbo.shamsi(getdate())        
        
set @Proceed=@Proceeded  
  
set @RW='WHERE   (RC.Finallized=1) and (Rc.OrgID = '+  
cast(@OrgID as varchar(10))+') AND (Rc.Proceeded = '+cast(@Proceeded as varchar(2))+')  
'  
if @myear>0  set @rw=@rw+'  and  L.myear='+cast(@myear as varchar(10))        
  
if @LetterFormat>0 set @rw=@rw+' and (l.LetterFormat ='+cast( @LetterFormat as varchar(2))+')'        
else set @rw=@rw+' and (l.LetterFormat in (1,2))'        
        
if @letter_Type>0        
set @rw=@rw+' AND (l.letter_Type = '+cast(@Letter_Type as varchar(2))+')'        
        
if @type>0        
      set @rw=@rw+' AND (Rc.Type = '+cast(@Type as varchar(2))+')'        
      
if @ArchiveFolderID>0        
set @rw=@rw+' AND (ArchiveFolderID = '+cast(@ArchiveFolderID as varchar(10))+')'        
        
if @date<>0        
begin        
 declare @dw tinyint,@bdate char(10),@edate char(10)        
  set @dw=datepart(dw,Getdate())    
--Ranjbar    
  ---select @bdate=begindate,@edate=Enddate from HistoryDateList(@today ,@dw) where id=@date     
  Set @Mytoday = Cast(1300+@myear as nvarchar)+ Substring(@Today,5,6)    
  select @bdate=begindate,@edate=Enddate from HistoryDateList(@Mytoday ,@dw) where id=@date     
--//    
        
 set @rw=@rw+' AND (RC.RecommiteDate between '''+@bdate+''' and '''+@edate+''')'        
end        
        
if @SecretariatID>0        
set @rw=@rw+' AND (SecretariatID = '+cast(@SecretariatID as varchar(10))+')'        
else        
set @rw=@rw+' AND (SecretariatID in (SELECT SecId FROM UserSecretariats WHERE UserId = '+cast(@userid as varchar(5))+'))'        
        
set @todayToint=cast(dbo.ShamsiToInt(@today) as varchar(10))        
        
if @DeadLine between -1 and 30        
 set @rw=@rw+' AND ('+        
case when @Proceed=1 then 'case when ChildRecommite.Proceeded=0 then ISNULL(ChildRecommite.DeadLineToint,'+@todayToint+') else    
'''+@todayToint+''' end '        
else  'ISNULL(RC.DeadLineToint ,'+@todayToint+') ' end+' -'+@todayToint+' )<= '+cast(@DeadLine as varchar(5))        
        
set @sql=' SELECT top '+cast(@top as varchar(5))+' L.LetterID,L.SignerID, L.IndicatorID, L.MYear,l.subjectid, L.SecretariatID, L.Letter_Type,   
L.letterformat, L.IncommingNO, L.Incommingdate,   
L.ClassificationID,        
L.UrgencyID, L.Memo, L.Tostaffer,l.SentLetterID,L.AttachTitle, L.NumberOfAttachPages, L.NumberOfPage, L.ReceiveTypeID, L.UserID, L.RetroactionNo,   
L.UserMemo, L.RegistrationDate,        
l.toorgid,l.fromorgid,L.FollowLetterNo, L.LetterRecommites,l.finalized,l.CenterNo,l.CenterDate,l.templateID,l.headerID,        
l.registrationTime,l.fromstaffer,l.sendStatusID,L.LastUpdate,L.UserTableID,        
DBO.INNERNO(L.Letterid)  InnerNo, PRC.OrgID,  RC.ParentId,  RC.Paraph, RC.RecommiteDate,  RC.Proceeded,        
 RC.ProceedDate, RecommiteTypes.id ReType,RecommiteTypes.Title RecommitTypeTitle,        
case when fo.title is null then 0 else 1 end IsInner, isnull(FO.Title,TTO.title) RecommiterTitle,tto.title sendertitle,rc.recommiteid,        
 rc.id,    
RC.StaffMemo,  
isnull(incommingno,indicatorid)  Yincommingno,Secretariats.PreCode,RC.IsCopy        
,dbo.has_Page(l.letterid) has_Page,        
dbo.has_WordPage(l.letterid) has_WordPage,        
dbo.has_file(l.letterid) has_file, '+        
'isnull('+        
case when @Proceed=1 then 'ChildRecommite.DeadLineToint' else 'RC.DeadLineToint' end+'-'+@todayToint+',0) DeadLineDays,'+  
case when @Proceed=1 then 'ChildRecommite.ViewDate' else 'RC.ViewDate' end+','+    
case when @Proceed=1 then 'ChildRecommite.DeadLineDate ' else  'RC.Deadlinedate  ' end+' DeadLineDate ,'+  
case when @Proceed=1 then 'ISNULL(ChildRecommite.Paraph,RC.Paraph) '   else ''' ''' end +' ChildParaph ,'+  
case when @Proceed=1 then 'RecommitedOrg.Title '   else ''' ''' end +' ChildOrg , '+        
case when @Proceed=1 then ' case when rc.ActionTypeID=5 then 5 else ChildRecommite.ActionTypeID end '  else  ' RC.ActionTypeID'   end +' ActionTypeID   
'+       
      
', (Select  Count(R.RecommiteID)        
From ReCommites R       
Inner join Letter on Letter.LetterID = R.LetterID      
Inner join FromOrganizations on R.OrgID = FromOrganizations.ID      
Where R.LetterID = L.LetterID '+      
' And R.OrgID = '+Cast(@OrgID as varchar) +      
' Having Count(R.RecommiteID) > 1 ) as UserRecomCount  ' +      
' , RC.IsAnswer , RC.ISFollowup ' +      
      
'FROM ReCommites RC        
INNER JOIN Letter L ON RC.LetterID = L.LetterID        
INNER JOIN Secretariats  ON Secretariats.Secid = L.SecretariatID        
left JOIN ReCommites PRC ON RC.LetterID = PRC.LetterID AND PRC.ID = RC.ParentId  AND PRC.type = RC.type        
left JOIN FromOrganizations FO ON FO.ID = PRC.OrgID        
left JOIN FromOrganizations TTO ON TTO.ID = L.ToOrgID         
INNER JOIN RecommiteTypes ON RC.Type = RecommiteTypes.ID '+        
case when @Proceed=1 then '        
left JOIN ReCommites ChildRecommite ON RC.LetterID = ChildRecommite.LetterID AND RC.ID = ChildRecommite.ParentId  AND ChildRecommite.type =   
RC.type         
left JOIN FromOrganizations RecommitedOrg ON RecommitedOrg.ID = ChildRecommite.OrgID '        
else '' end        
        
if @archiveFolderID<>0          
set @sql=@sql+'         
Left join LetterArchiveFolder on LetterArchiveFolder.Letterid=Rc.RecommiteID '        
        
set @sql=@sql+@rW        
        
set @where=isnull(ltrim(rtrim(@where)),'')        
if (@where<>'')         
select @sql=@sql+' and '+@where        
        
if isnull(ltrim(@orderClause),'')=''         
 set @orderClause=' rc.recommitedate desc,l.indicatorid desc'        

set @sql=@sql+' order by '+@orderClause        
exec sp_executesql  @sql        
PRINT @sql    
  
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO


-----------------------------------------------------------------------------------
/*UserFolder —‰Ã»— - ÃÂ  Õ–› ›«Ì·Â«Ì „ÊÃÊœ œ— ÅÊ‘Â*/
Update Settings
Set [Value] = 1
Where VariableName = 'DeleteUserFolder'
And UserID <> -1
GO
-----------------------------------------------------------------------------------
/*ID=190*/
/*PageNumber  €ÌÌ— ‰Ê⁄ ›Ì·œ*/

BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.LetterData DROP CONSTRAINT DF_letterdata_pageNumber
GO
ALTER TABLE dbo.LetterData Alter Column PageNumber int NULL
GO
ALTER TABLE dbo.LetterData ADD CONSTRAINT DF_letterdata_pageNumber DEFAULT (0) FOR PageNumber
GO

COMMIT
GO
-----------------------------------------------------------------------------------
/*ID=190*/
/*LetterData »—«Ì ÃœÊ· PageNumber „— » ﬂ—œ‰  ’«ÊÌ— »« „ﬁœ«— œ«œ‰ »Â ›Ì·œ*/
/*Ranjbar*/

Declare @LetterID int
Declare @NextLetterID int
Declare @PageNumber int
Set @PageNumber = 0

Declare Cr_LetterData1 Cursor  
For
Select LetterID 
from LetterData
Where Extention in (1,2)
Order By LetterDataID, LetterID , PageNumber
For Update 

Open Cr_LetterData1 
Fetch Next from Cr_LetterData1 InTo @LetterID
While @@Fetch_Status = 0
begin   
   Set @PageNumber = @PageNumber+1
   Update LetterData Set PageNumber = @PageNumber Where Current of Cr_LetterData1

   Set @NextLetterID = @LetterID
   Fetch Next from Cr_LetterData1 InTo @LetterID
   if @NextLetterID <> @LetterID
      Set @PageNumber = 0
end
Close Cr_LetterData1
Deallocate Cr_LetterData1
GO
------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------







