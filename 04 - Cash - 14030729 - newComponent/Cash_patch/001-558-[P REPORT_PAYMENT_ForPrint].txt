BEGIN TRANSACTION
GO
IF EXISTS ( SELECT 1
            FROM   sysobjects 
            WHERE  id = object_id(N'[dbo].[REPORT_PAYMENT_ForPrint]')
                   and OBJECTPROPERTY(id, N'IsProcedure') = 1 )
BEGIN
    DROP PROCEDURE [dbo].[REPORT_PAYMENT_ForPrint]
END
GO

CREATE  procedure [dbo].[REPORT_PAYMENT_ForPrint] @DocumentNoFrom VARCHAR(10),
                                                  @DocumentNoTo VARCHAR(10), 
                                                  @DateFrom VARCHAR(10),
                                                  @DateTo varchar(10)        
AS
      
SELECT     PAYMENT.*,          
           CREDITORACCOUNT.ACCOUNTTITLE AS CREDITORACCOUNTTITLE,          
           DEBTORACCOUNT.ACCOUNTTITLE   AS DEBTORACCOUNTTITLE,          
           RTRIM(PAYTYPE.PAYTYPETITLE) +  (CASE WHEN PAYMENT.PAYTYPEID = 3 THEN ( SELECT ' - ق ش '+(CAST(ORDERNO AS NVARCHAR(10)))AS ORDERNODESC FROM FORCEPAYMENT WHERE FORCEPAYMENT.PAYMENTID = PAYMENT.PAYMENTID ) END) AS PAYTYPETITLE,          
           FINANCIALNOTE_DETAIL.NOTENO, 
           FINANCIALNOTE_MASTER.MATUREDATE, 
           FINANCIALNOTE_DETAIL.AMOUNT FINANCIALNOTEAMOUNT,
           FINANCIALNOTETYPE.FINANCIALNOTETYPETITLE,          
           USERS.FULLNAME,      
           ISNULL(COMMENT,PAYTYPETITLE) COMMENT2 ,       
           FINANCIALNOTE_DETAIL.AMOUNT AS NOTE_DETAILAMOUNT,       
           FINANCIALNOTE_DETAIL.NOTENO AS NOTE_DETAILNOTENO,       
           FINANCIALNOTE_DETAIL.NOTEDATE AS DETAILNOTEDATE,       
           FINANCIALNOTESTATUS.FINANCIALNOTESTATUSDESC AS STATUSFINANCIALNOTESTATUSDESC,       
           FINANCIALNOTE_MASTER.FINANCIALNOTETYPEID    AS MASTERFINANCIALNOTETYPEID,       
           FINANCIALNOTETYPE.FINANCIALNOTETYPETITLE  AS NOTE_DETAILFINANCIALNOTETYPETITLE      
FROM       FINANCIALNOTE_MASTER INNER JOIN    
                      FINANCIALNOTE_DETAIL ON FINANCIALNOTE_MASTER.FINANCIALNOTE_MASTERID = FINANCIALNOTE_DETAIL.FINANCIALNOTE_MASTERID INNER JOIN    
                      FINANCIALNOTESTATUS ON FINANCIALNOTE_DETAIL.NOTESTATUSID = FINANCIALNOTESTATUS.FINANCIALNOTESTATUSID INNER JOIN    
                      FINANCIALNOTETYPE FINANCIALNOTETYPE ON     
                      FINANCIALNOTE_MASTER.FINANCIALNOTETYPEID = FINANCIALNOTETYPE.FINANCIALNOTETYPEID RIGHT OUTER JOIN    
                      PAYMENT INNER JOIN    
                      PAYTYPE ON PAYMENT.PAYTYPEID = PAYTYPE.PAYTYPEID INNER JOIN    
                      ACCOUNT CREDITORACCOUNT ON PAYMENT.CREDITORACCOUNTID = CREDITORACCOUNT.ACCOUNTID INNER JOIN    
                      ACCOUNT DEBTORACCOUNT ON PAYMENT.DEBTORACCOUNTID = DEBTORACCOUNT.ACCOUNTID ON     
                      FINANCIALNOTE_DETAIL.FINANCIALNOTE_DETAILID = PAYMENT.FINANCIALNOTE_DETAILID LEFT OUTER JOIN    
                      USERS ON PAYMENT.INSERTUSERID = USERS.USERID LEFT OUTER JOIN    
                      FINANCIALNOTE ON PAYMENT.FINANCIALNOTEID = FINANCIALNOTE.FINANCIALNOTEID   
    
WHERE  ( ( CAST(DOCUMENTNO AS INT)    BETWEEN  CAST(@DocumentNoFrom AS INT ) AND CAST(@DocumentNoTo AS INT))OR
         ('0' = @DocumentNoFrom AND '0' = @DocumentNoTo))/*تمامي اسناد*/           
    AND ((PAYMENT.DATE BETWEEN @DateFrom AND @DateTo)  OR (@DateFrom='0' AND @DateTo='0') )
            
ORDER BY CAST(PAYMENT.DOCUMENTNO AS INT), PAYMENT.[DATE]
GO

COMMIT
GO