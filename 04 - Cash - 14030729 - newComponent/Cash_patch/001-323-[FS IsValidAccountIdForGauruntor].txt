BEGIN TRANSACTION
GO
IF EXISTS (SELECT 1
            FROM   sysobjects 
            WHERE  id = object_id(N'[dbo].[IsValidAccountIdForGauruntor]') 
                   and OBJECTPROPERTY(id, N'IsScalarFunction') = 1)
BEGIN
    DROP FUNCTION [dbo].[IsValidAccountIdForGauruntor]
END
GO

CREATE FUNCTION [dbo].[IsValidAccountIdForGauruntor]
(
	@AccountID INT, 
	@GuarantorID INT, 
	@Price INT
)
RETURNS bit AS    
BEGIN   

	Declare @IsValidAccountId BIT
	DECLARE @ContactType INT
	DECLARE @MaxTimesGuaranteed INT
	DECLARE @MaxLimitForGuarantee INT

	SELECT @ContactType = c.ContactTypeID FROM Contact c where ContactID = @GuarantorID
	SELECT @MaxTimesGuaranteed = COUNT(DISTINCT loanID) FROM LoanGaurantor lg 
	WHERE EXISTS(SELECT * FROM ForcePayment fp WHERE fp.ParentID = lg.LoanID AND fp.ForceTypeID = 1 AND fp.Paid = 0)
		and lg.GaurantorContactID = @GuarantorID

	SELECT @MaxLimitForGuarantee = VALUE FROM Setting s 
		WHERE s.UserID = -1 AND s.VariableName = 'LoanGrtCount'

   IF (EXISTS(SELECT AccountID    
              FROM   Account    
              Where  AccountID=@AccountID 
				And dbo.TotalExist(Accountid,9, 0)>(ISNULL(blockedprice,0)+@Price)))   
		OR (@MaxTimesGuaranteed < @MaxLimitForGuarantee)
    
      Set @IsValidAccountId=1    
    Else    
      Set @IsValidAccountId=0    
	
	RETURN(@IsValidAccountId)    
End
GO

COMMIT
GO